_init, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
_init, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_init, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
_init, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
_init, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_init, (register, 0x0, 8) COPY (ram, 0x613208, 8)
_init, (register, 0x200, 1) COPY (const, 0x0, 1)
_init, (register, 0x20b, 1) COPY (const, 0x0, 1)
_init, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
_init, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
_init, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
_init, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_init,  ---  CBRANCH (ram, 0x4016cd, 8) , (register, 0x206, 1)
_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4016cd, 8)
_init,  ---  CALL (ram, 0x401770, 8)
_init, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
_init, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_init, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
_init, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
_init, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_init, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_init,  ---  RETURN (register, 0x288, 8)
FUN_004016e0, (unique, 0xe780, 8) COPY (ram, 0x613218, 8)
FUN_004016e0, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
FUN_004016e0,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
FUN_004016e0,  ---  BRANCHIND (ram, 0x613220, 8)
pl_flabelwidth_r,  ---  BRANCHIND (ram, 0x613228, 8)
log10,  ---  BRANCHIND (ram, 0x613230, 8)
_pl_get_hershey_font_info,  ---  BRANCHIND (ram, 0x613238, 8)
pl_endpath_r,  ---  BRANCHIND (ram, 0x613240, 8)
pl_erase_r,  ---  BRANCHIND (ram, 0x613248, 8)
ceil,  ---  BRANCHIND (ram, 0x613250, 8)
__isoc99_fscanf,  ---  BRANCHIND (ram, 0x613258, 8)
pl_filltype_r,  ---  BRANCHIND (ram, 0x613260, 8)
__gmon_start__,  ---  BRANCHIND (ram, 0x613268, 8)
__isoc99_sscanf,  ---  BRANCHIND (ram, 0x613270, 8)
pl_fspace_r,  ---  BRANCHIND (ram, 0x613278, 8)
exit,  ---  BRANCHIND (ram, 0x613280, 8)
pl_closepl_r,  ---  BRANCHIND (ram, 0x613288, 8)
pl_ffontsize_r,  ---  BRANCHIND (ram, 0x613290, 8)
pl_fmove_r,  ---  BRANCHIND (ram, 0x613298, 8)
pl_openpl_r,  ---  BRANCHIND (ram, 0x6132a0, 8)
strncmp,  ---  BRANCHIND (ram, 0x6132a8, 8)
malloc,  ---  BRANCHIND (ram, 0x6132b0, 8)
fopen,  ---  BRANCHIND (ram, 0x6132b8, 8)
__libc_start_main,  ---  BRANCHIND (ram, 0x6132c0, 8)
pl_newpl_r,  ---  BRANCHIND (ram, 0x6132c8, 8)
_pl_get_ps_font_info,  ---  BRANCHIND (ram, 0x6132d0, 8)
pl_restorestate_r,  ---  BRANCHIND (ram, 0x6132e0, 8)
pl_fmarker_r,  ---  BRANCHIND (ram, 0x6132e8, 8)
ungetc,  ---  BRANCHIND (ram, 0x6132f0, 8)
fputc,  ---  BRANCHIND (ram, 0x6132f8, 8)
free,  ---  BRANCHIND (ram, 0x613300, 8)
pl_flushpl_r,  ---  BRANCHIND (ram, 0x613308, 8)
_IO_getc,  ---  BRANCHIND (ram, 0x613310, 8)
strlen,  ---  BRANCHIND (ram, 0x613318, 8)
pl_savestate_r,  ---  BRANCHIND (ram, 0x613320, 8)
pl_fcont_r,  ---  BRANCHIND (ram, 0x613328, 8)
pl_fbox_r,  ---  BRANCHIND (ram, 0x613330, 8)
__ctype_b_loc,  ---  BRANCHIND (ram, 0x613338, 8)
sprintf,  ---  BRANCHIND (ram, 0x613340, 8)
pl_textangle_r,  ---  BRANCHIND (ram, 0x613348, 8)
pl_deletepl_r,  ---  BRANCHIND (ram, 0x613350, 8)
pow,  ---  BRANCHIND (ram, 0x613358, 8)
strerror,  ---  BRANCHIND (ram, 0x613360, 8)
fputs,  ---  BRANCHIND (ram, 0x613368, 8)
_pl_get_stick_font_info,  ---  BRANCHIND (ram, 0x613370, 8)
strchr,  ---  BRANCHIND (ram, 0x613378, 8)
pl_havecap_r,  ---  BRANCHIND (ram, 0x613380, 8)
fread,  ---  BRANCHIND (ram, 0x613388, 8)
getenv,  ---  BRANCHIND (ram, 0x613390, 8)
__errno_location,  ---  BRANCHIND (ram, 0x613398, 8)
pl_deleteplparams,  ---  BRANCHIND (ram, 0x6133a0, 8)
pl_fline_r,  ---  BRANCHIND (ram, 0x6133a8, 8)
strcmp,  ---  BRANCHIND (ram, 0x6133b0, 8)
pl_linemod_r,  ---  BRANCHIND (ram, 0x6133b8, 8)
pl_fontname_r,  ---  BRANCHIND (ram, 0x6133c0, 8)
pl_setplparam,  ---  BRANCHIND (ram, 0x6133c8, 8)
strcpy,  ---  BRANCHIND (ram, 0x6133d0, 8)
pl_alabel_r,  ---  BRANCHIND (ram, 0x6133d8, 8)
calloc,  ---  BRANCHIND (ram, 0x6133e0, 8)
pl_pencolorname_r,  ---  BRANCHIND (ram, 0x6133e8, 8)
feof,  ---  BRANCHIND (ram, 0x6133f0, 8)
fclose,  ---  BRANCHIND (ram, 0x6133f8, 8)
pl_colorname_r,  ---  BRANCHIND (ram, 0x613400, 8)
fwrite,  ---  BRANCHIND (ram, 0x613408, 8)
realloc,  ---  BRANCHIND (ram, 0x613410, 8)
pl_newplparams,  ---  BRANCHIND (ram, 0x613418, 8)
floor,  ---  BRANCHIND (ram, 0x613420, 8)
perror,  ---  BRANCHIND (ram, 0x613428, 8)
pl_flinewidth_r,  ---  BRANCHIND (ram, 0x613430, 8)
fprintf,  ---  BRANCHIND (ram, 0x613438, 8)
_pl_get_pcl_font_info,  ---  BRANCHIND (ram, 0x613440, 8)
open_file_for_reading, (unique, 0xe780, 8) COPY (register, 0x18, 8)
open_file_for_reading, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
open_file_for_reading,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
open_file_for_reading, (register, 0x18, 8) COPY (register, 0x38, 8)
open_file_for_reading, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
open_file_for_reading,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401b39, 8)
open_file_for_reading,  ---  CALL (ram, 0x4019d0, 8)
open_file_for_reading, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
open_file_for_reading, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
open_file_for_reading, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
open_file_for_reading, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
open_file_for_reading,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401b40, 8)
open_file_for_reading,  ---  CALL (ram, 0x401960, 8)
open_file_for_reading, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
open_file_for_reading, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
open_file_for_reading, (register, 0x80, 8) COPY (register, 0x0, 8)
open_file_for_reading, (register, 0x8, 8) COPY (register, 0x18, 8)
open_file_for_reading, (register, 0x30, 8) COPY (const, 0x4103c4, 8)
open_file_for_reading, (register, 0x200, 1) COPY (const, 0x0, 1)
open_file_for_reading, (register, 0x20b, 1) COPY (const, 0x0, 1)
open_file_for_reading, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
open_file_for_reading, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
open_file_for_reading, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
open_file_for_reading, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
open_file_for_reading, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
open_file_for_reading, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
open_file_for_reading, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
open_file_for_reading, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
open_file_for_reading, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
open_file_for_reading,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401b60, 8)
open_file_for_reading,  ---  CALL (ram, 0x401b10, 8)
open_file_for_reading, (register, 0x38, 8) COPY (const, 0x1, 8)
open_file_for_reading, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
open_file_for_reading,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401b6a, 8)
open_file_for_reading,  ---  CALL (ram, 0x4017a0, 8)
main, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (register, 0xb0, 8) COPY (register, 0x30, 8)
main, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0xa8, 4) INT_XOR (register, 0xa8, 4) , (register, 0xa8, 4)
main, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0xa8, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0xa8, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xe780, 8) COPY (register, 0x28, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0xe780, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (register, 0x28, 4) COPY (register, 0x38, 4)
main, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
main, (register, 0x18, 8) COPY (const, 0x1, 8)
main, (register, 0xa0, 8) COPY (const, 0x1, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x2e8, 8)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x2e8, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x2e8, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x12c0, 8) COPY (ram, 0x4111f8, 8)
main, (register, 0x12c8, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1c8, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (register, 0x1260, 8) COPY (ram, 0x411200, 8)
main, (register, 0x1268, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x280, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (register, 0x1220, 8) COPY (ram, 0x411208, 8)
main, (register, 0x1228, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x288, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1e0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x290, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x298, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1e8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1d8, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x400, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1dc, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (register, 0x12c0, 8) COPY (ram, 0x4111f0, 8)
main, (register, 0x12c8, 8) COPY (const, 0x0, 8)
main, (register, 0x1240, 8) COPY (ram, 0x411210, 8)
main, (register, 0x1248, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1f0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2a8, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2b0, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1f8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xc0, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x90, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x200, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x12c, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x208, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x154, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2b8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1a8, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x18c, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (register, 0x12a0, 8) COPY (ram, 0x4111d8, 8)
main, (register, 0x12a8, 8) COPY (const, 0x0, 8)
main, (register, 0x12e0, 8) COPY (ram, 0x4111c8, 8)
main, (register, 0x12e8, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x188, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (register, 0x1260, 8) COPY (ram, 0x4111d0, 8)
main, (register, 0x1268, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x184, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x148, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x140, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x110, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x150, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x8c, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x178, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x84, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xc8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x80, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x2c, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x54, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x198, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x190, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x170, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x168, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x160, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x158, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xa8, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xa0, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x98, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x4103d0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x138, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x13c, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x180, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x74, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (register, 0x1280, 8) COPY (ram, 0x4111e0, 8)
main, (register, 0x1288, 8) COPY (const, 0x0, 8)
main, (register, 0x1220, 8) COPY (ram, 0x4111e8, 8)
main, (register, 0x1228, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x128, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xb0, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x4103dd, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xbc, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xd8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x124, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x2, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1ac, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xe0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x118, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x108, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xd0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1a0, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x100, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xf8, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xf0, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xe8, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x4103e3, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xc4, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x130, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xb8, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbe00, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x4, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x94, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x3c, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x120, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x5c, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4024c0, 8) , (unique, 0xc680, 1)
main, (register, 0x10, 4) COPY (ram, 0x613d10, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (register, 0x10, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x10, 4)
main, (unique, 0x28600, 4) INT_SUB (register, 0x28, 4) , (register, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x402460, 8) , (unique, 0xd080, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x4, 8) , (register, 0x20, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x59200, 4) INT_AND (unique, 0xbc80, 4) , (register, 0x18, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402dc8, 8) , (register, 0x206, 1)
main, (register, 0xb8, 8) COPY (ram, 0x613cf0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x40218f, 8) , (register, 0x206, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x74, 8) , (register, 0x20, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x58c00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x58c00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402007, 8) , (register, 0x206, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x401fd7, 8) , (register, 0x206, 1)
main, (register, 0x12e0, 16) INT_XOR (register, 0x12e0, 16) , (register, 0x12e0, 16)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x158, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
main, (register, 0x12c8, 8) COPY (const, 0x0, 8)
main, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12c0, 8)
main, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12e0, 8)
main, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
main, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12c0, 8) , (register, 0x12e0, 8)
main, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
main, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12c0, 8) , (register, 0x12e0, 8)
main, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x204, 1) COPY (const, 0x0, 1)
main, (register, 0x207, 1) COPY (const, 0x0, 1)
main, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4043dd, 8) , (unique, 0xc780, 1)
main, (register, 0x1200, 8) COPY (register, 0x12c0, 8)
main, (register, 0x1208, 8) COPY (register, 0x12c8, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401fce, 8)
main,  ---  CALL (ram, 0x401700, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x158, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x2c, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402007, 8) , (register, 0x206, 1)
main, (register, 0x12c0, 16) INT_XOR (register, 0x12c0, 16) , (register, 0x12c0, 16)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x168, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
main, (register, 0x12e8, 8) COPY (const, 0x0, 8)
main, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12e0, 8)
main, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12c0, 8)
main, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
main, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12e0, 8) , (register, 0x12c0, 8)
main, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
main, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12e0, 8) , (register, 0x12c0, 8)
main, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x204, 1) COPY (const, 0x0, 1)
main, (register, 0x207, 1) COPY (const, 0x0, 1)
main, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4043d2, 8) , (unique, 0xc780, 1)
main, (register, 0x1200, 8) COPY (register, 0x12e0, 8)
main, (register, 0x1208, 8) COPY (register, 0x12e8, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x401ffe, 8)
main,  ---  CALL (ram, 0x401700, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x168, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x74, 8) , (register, 0x20, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x58c00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x58c00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x40206e, 8) , (register, 0x206, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x54, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x40203e, 8) , (register, 0x206, 1)
main, (register, 0x1260, 16) INT_XOR (register, 0x1260, 16) , (register, 0x1260, 16)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x160, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1228, 8) COPY (const, 0x0, 8)
main, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
main, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1260, 8)
main, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
main, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (register, 0x1260, 8)
main, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
main, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (register, 0x1260, 8)
main, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x204, 1) COPY (const, 0x0, 1)
main, (register, 0x207, 1) COPY (const, 0x0, 1)
main, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x40438f, 8) , (unique, 0xc780, 1)
main, (register, 0x1200, 8) COPY (register, 0x1220, 8)
main, (register, 0x1208, 8) COPY (register, 0x1228, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402035, 8)
main,  ---  CALL (ram, 0x401700, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x160, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x40206e, 8) , (register, 0x206, 1)
main, (register, 0x1280, 16) INT_XOR (register, 0x1280, 16) , (register, 0x1280, 16)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x170, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1248, 8) COPY (const, 0x0, 8)
main, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
main, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1280, 8)
main, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
main, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (register, 0x1280, 8)
main, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
main, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1280, 8)
main, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x204, 1) COPY (const, 0x0, 1)
main, (register, 0x207, 1) COPY (const, 0x0, 1)
main, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4043c7, 8) , (unique, 0xc780, 1)
main, (register, 0x1200, 8) COPY (register, 0x1240, 8)
main, (register, 0x1208, 8) COPY (register, 0x1248, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402065, 8)
main,  ---  CALL (ram, 0x401700, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x170, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x180, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x2c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x90, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x54, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x98, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
main, (register, 0x0, 4) COPY (register, 0x30, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x8, 4) COPY (register, 0x90, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x158, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
main, (register, 0x12e8, 8) COPY (const, 0x0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_OR (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x38, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
main,  ---  CBRANCH (ram, 0x40209d, 8) , (unique, 0x27780, 1)
main, (register, 0x0, 4) COPY (register, 0x30, 4)
main, (register, 0x8, 4) COPY (register, 0x10, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (register, 0x30, 4) COPY (register, 0x0, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x280, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_OR (register, 0x0, 4) , (const, 0x2, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x168, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1268, 8) COPY (const, 0x0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x98, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x160, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1288, 8) COPY (const, 0x0, 8)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
main,  ---  CBRANCH (ram, 0x4020c5, 8) , (unique, 0x27780, 1)
main, (register, 0x0, 4) COPY (register, 0x30, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x170, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
main, (register, 0x12e8, 8) COPY (const, 0x0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x288, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x150, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbc80, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x290, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x298, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main,  ---  CBRANCH (ram, 0x4036c2, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4036c2, 8) , (register, 0x206, 1)
main, (register, 0x0, 4) COPY (register, 0x10, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (register, 0x98, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x5c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xc4, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x198, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1228, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x190, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1248, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x90, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbc80, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x84, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x148, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x140, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x12c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbc80, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x80, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x154, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbc80, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1a8, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbc80, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x2c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x18c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbc80, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x54, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x188, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbc80, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x184, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbc80, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x74, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x8c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbc80, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x5c, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402c33, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403b82, 8) , (register, 0x206, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x4, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402205, 8) , (register, 0x206, 1)
main, (unique, 0xe780, 8) COPY (register, 0x90, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1b4, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x128, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x120, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1c0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x88, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x120, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x80, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x118, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x110, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x108, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4021f3, 8)
main,  ---  CALL (ram, 0x408c80, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x20, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x20, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403ec0, 8) , (register, 0x206, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2b0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1248, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2a8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1228, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2b8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40222a, 8)
main,  ---  CALL (ram, 0x408e10, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402245, 8) , (register, 0x206, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x30, 8) , (register, 0x30, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x27800, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x402240, 8) , (unique, 0x27800, 1)
main, (register, 0x30, 8) COPY (register, 0x0, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x30, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x90, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x18, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
main, (unique, 0xe780, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x210, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x138, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x150, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x15c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x178, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xbc, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xf4, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (unique, 0xe780, 8) COPY (register, 0x30, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xe0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1c0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
main, (register, 0x12c8, 8) COPY (const, 0x0, 8)
main, (unique, 0xe780, 8) COPY (register, 0x80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x98, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
main, (unique, 0xe780, 8) COPY (register, 0x30, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xf0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0xe780, 8) COPY (register, 0x88, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
main, (unique, 0xe780, 8) COPY (register, 0x30, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x258, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x258, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x270, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x280, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1bc, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (unique, 0xe780, 8) COPY (register, 0x30, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1e0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xc0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1f4, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1c4, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x148, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x150, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xb0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x338, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
main, (register, 0x12e8, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x330, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
main, (register, 0x12c8, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1e0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
main, (register, 0x12a8, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x328, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1288, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x320, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1268, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2a0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1248, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1b0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1228, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x168, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40235b, 8)
main,  ---  CALL (ram, 0x408e90, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0xa0, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0xa0, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0xa0, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x4, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402373, 8)
main,  ---  CALL (ram, 0x409730, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x8, 4) COPY (register, 0x18, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (register, 0x38, 8) COPY (register, 0xb8, 8)
main, (unique, 0xe780, 8) COPY (register, 0x30, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1d0, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x5c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (unique, 0xe780, 8) COPY (register, 0x30, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xd8, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xac, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xa8, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xf8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1288, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x98, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1268, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x100, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1248, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x150, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1228, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xf0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4023db, 8)
main,  ---  CALL (ram, 0x4059a0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x80, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x20, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x20, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4023f6, 8)
main,  ---  CALL (ram, 0x405c60, 8)
main, (register, 0x200, 1) INT_LESS (ram, 0x613cf0, 8) , (register, 0xb8, 8)
main, (register, 0x20b, 1) INT_SBORROW (ram, 0x613cf0, 8) , (register, 0xb8, 8)
main, (unique, 0x28700, 8) INT_SUB (ram, 0x613cf0, 8) , (register, 0xb8, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402416, 8) , (register, 0x206, 1)
main, (register, 0x38, 8) COPY (register, 0xb8, 8)
main, (register, 0x18, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40240e, 8)
main,  ---  CALL (ram, 0x401a90, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403d12, 8) , (register, 0x207, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x18, 4)
main, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x94, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x3c, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x120, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x0, 8) INT_SEXT (register, 0x10, 4)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402588, 8) , (register, 0x206, 1)
main, (register, 0x38, 8) COPY (register, 0x8, 8)
main, (register, 0x30, 8) COPY (const, 0x4105db, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402482, 8)
main,  ---  CALL (ram, 0x401810, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0xb8, 8) COPY (register, 0x0, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main,  ---  CBRANCH (ram, 0x4043bf, 8) , (register, 0x206, 1)
main, (register, 0x0, 8) INT_SEXT (ram, 0x613d10, 4)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x10, 8) COPY (register, 0x0, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1, 4)
main, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x613d18, 8) COPY (register, 0x8, 8)
main, (ram, 0x613d10, 4) COPY (register, 0x10, 4)
main,  ---  BRANCH (ram, 0x401f98, 8)
main, (register, 0x10, 8) COPY (ram, 0x613b80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1c4, 8) , (register, 0x20, 8)
main, (register, 0x80, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x8, 8) COPY (const, 0x613500, 8)
main, (register, 0x30, 8) COPY (register, 0xb0, 8)
main, (register, 0x38, 4) COPY (register, 0x28, 4)
main, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4024de, 8)
main,  ---  CALL (ram, 0x410270, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xffffffff, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xffffffff, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0xffffffff, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4025a0, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4026d0, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x72, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x72, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x72, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4029b2, 8) , (register, 0x206, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x4025b0, 8) , (unique, 0xd080, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x53, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x53, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x53, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402960, 8) , (register, 0x206, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x402710, 8) , (unique, 0xd080, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x49, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x49, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x49, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402b6e, 8) , (register, 0x206, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x402e9a, 8) , (unique, 0xce80, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4e, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4e, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4e, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402551, 8) , (register, 0x206, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x403215, 8) , (unique, 0xce80, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x51, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x51, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x51, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402da9, 8) , (register, 0x206, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x403a19, 8) , (unique, 0xd080, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4f, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4f, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4f, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4026a3, 8) , (unique, 0xc680, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1a0, 8) , (register, 0x20, 8)
main, (unique, 0xbe00, 8) COPY (const, 0x4103e8, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
main, (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x59, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x59, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x59, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402575, 8) , (register, 0x206, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x4035dd, 8) , (unique, 0xce80, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x78, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x78, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x78, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4035e5, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x79, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x79, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x79, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x403970, 8) , (unique, 0xc680, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x138, 8) , (register, 0x20, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xbd00, 4) INT_XOR (unique, 0xbd00, 4) , (const, 0x2, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x402470, 8) , (unique, 0xc680, 1)
main, (register, 0xb8, 8) COPY (ram, 0x613cf0, 8)
main,  ---  BRANCH (ram, 0x4024a1, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0xa0, 4) INT_XOR (register, 0xa0, 4) , (register, 0xa0, 4)
main, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x401f79, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x5200, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x5200, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x5200, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402a57, 8) , (register, 0x206, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x4027f0, 8) , (unique, 0xd080, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x79, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x79, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x79, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402984, 8) , (register, 0x206, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x402e27, 8) , (unique, 0xce80, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4600, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4600, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x4600, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x40261c, 8) , (register, 0x206, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x40332f, 8) , (unique, 0xce80, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4d00, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4d00, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x4d00, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402d90, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x5000, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x5000, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x5000, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4039b9, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4700, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4700, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x4700, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4026a3, 8) , (unique, 0xc680, 1)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40260a, 8)
main,  ---  CALL (ram, 0x410320, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x3c, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x230, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402637, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x40368d, 8) , (unique, 0xce80, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x230, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
main, (unique, 0x18300, 1) FLOAT_NAN (ram, 0x4111f0, 8)
main, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
main, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (ram, 0x4111f0, 8)
main, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
main, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (ram, 0x4111f0, 8)
main, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x204, 1) COPY (const, 0x0, 1)
main, (register, 0x207, 1) COPY (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4030b0, 8) , (register, 0x200, 1)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x30, 8) COPY (const, 0x410c00, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402673, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x230, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (register, 0x12e0, 16) INT_XOR (register, 0x12e0, 16) , (register, 0x12e0, 16)
main, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
main, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12e0, 8)
main, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
main, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x12e0, 8)
main, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
main, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x12e0, 8)
main, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x204, 1) COPY (const, 0x0, 1)
main, (register, 0x207, 1) COPY (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x40268c, 8) , (register, 0x202, 1)
main,  ---  CBRANCH (ram, 0x403a9e, 8) , (register, 0x206, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x110, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0xa8, 4) , (register, 0xa8, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402dc0, 8) , (register, 0x206, 1)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x30, 8) COPY (const, 0x411040, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4026bd, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main,  ---  BRANCH (ram, 0x402920, 8)
main, (register, 0x10, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402938, 8) , (register, 0x206, 1)
main, (register, 0x38, 8) COPY (register, 0x10, 8)
main, (register, 0x30, 8) COPY (const, 0x4105db, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4026f2, 8)
main,  ---  CALL (ram, 0x401810, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0xb8, 8) COPY (register, 0x0, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x401f98, 8) , (unique, 0xc680, 1)
main, (register, 0x38, 8) COPY (register, 0x10, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40270b, 8)
main,  ---  CALL (ram, 0x401b30, 8)
main, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
main, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x66, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x66, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x66, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4029fb, 8) , (register, 0x206, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x402fce, 8) , (unique, 0xce80, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x6b, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x6b, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x6b, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x40279e, 8) , (register, 0x206, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x403299, 8) , (unique, 0xce80, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x6d, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x6d, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x6d, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402d3f, 8) , (register, 0x206, 1)
main, (unique, 0xcc00, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main,  ---  CBRANCH (ram, 0x4039eb, 8) , (unique, 0xcc00, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x71, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x71, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x71, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4026a3, 8) , (unique, 0xc680, 1)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x278, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40275d, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x403c99, 8) , (unique, 0xce80, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x278, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
main, (unique, 0x18300, 1) FLOAT_NAN (ram, 0x4111f0, 8)
main, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
main, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (ram, 0x4111f0, 8)
main, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
main, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (ram, 0x4111f0, 8)
main, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x204, 1) COPY (const, 0x0, 1)
main, (register, 0x207, 1) COPY (const, 0x0, 1)
main, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x403a66, 8) , (unique, 0xc780, 1)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x30, 8) COPY (const, 0x410948, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402799, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x200, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4027b9, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x401f70, 8) , (unique, 0xd080, 1)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x30, 8) COPY (const, 0x410a98, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4027e2, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x4026a3, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x6500, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x6500, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x6500, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402947, 8) , (register, 0x206, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x402f03, 8) , (unique, 0xce80, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x6c00, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x6c00, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x6c00, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4028ff, 8) , (register, 0x206, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x403373, 8) , (unique, 0xce80, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x7100, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x7100, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x7100, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402d26, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x7200, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x7200, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x7200, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4039d2, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x7000, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x7000, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x7000, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4026a3, 8) , (unique, 0xc680, 1)
main, (register, 0xb8, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x18, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
main, (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59000, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4028f6, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x3a, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x3a, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x3a, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403930, 8) , (register, 0x206, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffd0, 8)
main, (register, 0x10, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x10, 1) , (const, 0x9, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 1) , (const, 0x9, 1)
main, (unique, 0x27d00, 1) INT_SUB (register, 0x10, 1) , (const, 0x9, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
main,  ---  CBRANCH (ram, 0x40398f, 8) , (unique, 0xc900, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x18, 4)
main, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8)
main, (register, 0x10, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0xb8, 8) , (const, 0x1, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0xb8, 8) , (const, 0x1, 8)
main, (register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
main, (register, 0x10, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
main, (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0xffffffffffffffd0, 8)
main, (register, 0x18, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
main, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
main, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffd0, 8)
main, (register, 0x8, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x8, 1) , (const, 0x9, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 1) , (const, 0x9, 1)
main, (unique, 0x27d00, 1) INT_SUB (register, 0x8, 1) , (const, 0x9, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x402860, 8) , (unique, 0xc780, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x31, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x31, 4)
main, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x31, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x4, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
main,  ---  CBRANCH (ram, 0x40398f, 8) , (unique, 0xc900, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x3d, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x3d, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x3d, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x40398f, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8)
main, (register, 0x80, 8) COPY (unique, 0x3100, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x21, 8)
main, (register, 0x38, 8) COPY (unique, 0x3100, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0xb8, 8) COPY (register, 0x80, 8)
main, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
main, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
main, (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x30, 8) INT_SEXT (register, 0x0, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x10, 1) , (const, 0x3a, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 1) , (const, 0x3a, 1)
main, (unique, 0x27d00, 1) INT_SUB (register, 0x10, 1) , (const, 0x3a, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403940, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59000, 1) INT_AND (register, 0x10, 1) , (register, 0x10, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403958, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_CARRY (register, 0xb8, 8) , (const, 0x1, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0xb8, 8) , (const, 0x1, 8)
main, (register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3d00, 8) INT_ADD (const, 0x2c0, 8) , (register, 0x20, 8)
main, (unique, 0x3d80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
main, (unique, 0x3e80, 8) INT_ADD (unique, 0x3d00, 8) , (unique, 0x3d80, 8)
main, (unique, 0xba80, 1) COPY (register, 0x10, 1)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (unique, 0xba80, 1)
main, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x1, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x1, 8)
main, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0x38, 8)
main, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0x38, 8)
main, (unique, 0x28700, 8) INT_SUB (register, 0xb8, 8) , (register, 0x38, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4028a0, 8) , (unique, 0xc680, 1)
main, (register, 0xb8, 8) COPY (register, 0x80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2c0, 8) , (register, 0x20, 8)
main, (register, 0x38, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4028dc, 8)
main,  ---  CALL (ram, 0x410320, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0xffffffffffffffff, 8)
main, (register, 0x8, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (register, 0x8, 8) INT_SEXT (register, 0x8, 4)
main, (unique, 0x3480, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8)
main, (unique, 0x3580, 8) INT_ADD (const, 0x613ba0, 8) , (unique, 0x3480, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3580, 8) , (unique, 0xbd80, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
main, (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59000, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x40284a, 8) , (unique, 0xc680, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x18, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x30, 8) COPY (ram, 0x6134d8, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402910, 8)
main,  ---  CALL (ram, 0x40f2a0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x0, 1) COPY (register, 0x206, 1)
main, (register, 0x0, 4) INT_ZEXT (register, 0x0, 1)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
main, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x2e8, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x2e8, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x2e8, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
main, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
main, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
main, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
main, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
main, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
main, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  RETURN (register, 0x288, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x401f91, 8) , (register, 0x206, 1)
main,  ---  BRANCH (ram, 0x4026e0, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402953, 8)
main,  ---  CALL (ram, 0x410320, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xf8, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x0, 8) INT_SEXT (ram, 0x613d10, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x0, 4)
main, (unique, 0x28600, 4) INT_SUB (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x4033f8, 8) , (unique, 0xd080, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x0, 4) COPY (ram, 0x613d10, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x0, 4)
main, (unique, 0x28600, 4) INT_SUB (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x402bb6, 8) , (unique, 0xd080, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x84, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x54, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1e8, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4029cd, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x401f70, 8) , (unique, 0xd080, 1)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x30, 8) COPY (const, 0x4109a8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4029f6, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x4026a3, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x228, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402a16, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x403667, 8) , (unique, 0xce80, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x228, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
main, (unique, 0x18300, 1) FLOAT_NAN (ram, 0x4111f0, 8)
main, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
main, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (ram, 0x4111f0, 8)
main, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
main, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (ram, 0x4111f0, 8)
main, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x204, 1) COPY (const, 0x0, 1)
main, (register, 0x207, 1) COPY (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4030e9, 8) , (register, 0x200, 1)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x30, 8) COPY (const, 0x4106f0, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402a52, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2a8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1288, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2b0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1228, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2a8, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2b8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1248, 8) COPY (const, 0x0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1b0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1b8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402aa5, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x4042f1, 8) , (unique, 0xce80, 1)
main, (register, 0x0, 8) INT_SEXT (ram, 0x613d10, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x0, 4)
main, (unique, 0x28600, 4) INT_SUB (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x404273, 8) , (unique, 0xce80, 1)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2b0, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402ad4, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x404297, 8) , (unique, 0xce80, 1)
main, (register, 0x0, 4) COPY (ram, 0x613d10, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x0, 4)
main, (unique, 0x28600, 4) INT_SUB (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x613d10, 4) COPY (register, 0x0, 4)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x404273, 8) , (unique, 0xce80, 1)
main, (register, 0x0, 8) INT_SEXT (register, 0x0, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2b8, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402b0d, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x4042c6, 8) , (unique, 0xce80, 1)
main, (register, 0x12c0, 16) INT_XOR (register, 0x12c0, 16) , (register, 0x12c0, 16)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2b8, 8) , (register, 0x20, 8)
main, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12c0, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
main, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12c0, 8) , (unique, 0x5280, 8)
main, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12c0, 8) , (unique, 0x5280, 8)
main, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x204, 1) COPY (const, 0x0, 1)
main, (register, 0x207, 1) COPY (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402b2a, 8) , (register, 0x202, 1)
main,  ---  CBRANCH (ram, 0x403f7d, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_CARRY (ram, 0x613d10, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SCARRY (ram, 0x613d10, 4) , (const, 0x1, 4)
main, (ram, 0x613d10, 4) INT_ADD (ram, 0x613d10, 4) , (const, 0x1, 4)
main, (register, 0x207, 1) INT_SLESS (ram, 0x613d10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (ram, 0x613d10, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (ram, 0x613d10, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4030a6, 8) , (unique, 0xc680, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x5c, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4036c9, 8) , (register, 0x206, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xc0, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4038db, 8) , (unique, 0xc680, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x18, 8) COPY (const, 0x1, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402b61, 8)
main,  ---  CALL (ram, 0x408e80, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x4, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
main, (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x49, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x49, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x49, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402ba6, 8) , (register, 0x206, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x402cf8, 8) , (unique, 0xce80, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x65, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x65, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x65, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403c63, 8) , (register, 0x206, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x403596, 8) , (unique, 0xce80, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x67, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x67, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x67, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402d16, 8) , (register, 0x206, 1)
main, (unique, 0xcc00, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main,  ---  CBRANCH (ram, 0x403c2d, 8) , (unique, 0xcc00, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x69, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x69, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x69, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4035be, 8) , (unique, 0xc680, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x3, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x10, 8) INT_SEXT (register, 0x0, 4)
main, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x403555, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x54, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x403555, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x0, 4)
main, (unique, 0x28600, 4) INT_SUB (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x613d10, 4) COPY (register, 0x0, 4)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x40390f, 8) , (unique, 0xce80, 1)
main, (register, 0x0, 8) INT_SEXT (register, 0x0, 4)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403d87, 8) , (register, 0x206, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x260, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402c0c, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x40390f, 8) , (unique, 0xce80, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x260, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1268, 8) COPY (const, 0x0, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x170, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main,  ---  BRANCH (ram, 0x403d99, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4034be, 8) , (unique, 0xc680, 1)
main, (unique, 0xe780, 8) COPY (register, 0x30, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x30, 8) COPY (register, 0xb8, 8)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xa4, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x64, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x150, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x6c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xb0, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x210, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xb8, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x88, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x94, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xd8, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xb0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x128, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1288, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xc8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1268, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x130, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1248, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x180, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1228, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x120, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402ccd, 8)
main,  ---  CALL (ram, 0x405a90, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x50, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x50, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x50, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1dc, 8) , (register, 0x20, 8)
main, (register, 0x8, 8) COPY (unique, 0x3c80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1d8, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2a0, 8) , (register, 0x20, 8)
main, (register, 0x30, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402cf3, 8)
main,  ---  CALL (ram, 0x405b20, 8)
main,  ---  BRANCH (ram, 0x4023f6, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x45, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x45, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x45, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403c63, 8) , (register, 0x206, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x4035b2, 8) , (unique, 0xce80, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x46, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x46, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x46, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403c2d, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x47, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x47, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x47, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4035be, 8) , (unique, 0xc680, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x4, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402d32, 8)
main,  ---  CALL (ram, 0x410320, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xe8, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1c8, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x411280, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402d5a, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x401f70, 8) , (unique, 0xd080, 1)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x30, 8) COPY (const, 0x4108b8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402d8b, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x4026a3, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402d9c, 8)
main,  ---  CALL (ram, 0x410320, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x100, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xbc, 8) , (register, 0x20, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xbd00, 4) INT_XOR (unique, 0xbd00, 4) , (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x401f70, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x402def, 8) , (unique, 0xc680, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x5c, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x404008, 8) , (register, 0x206, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xc0, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x403fec, 8) , (unique, 0xc680, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402def, 8)
main,  ---  CALL (ram, 0x408e80, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402df9, 8)
main,  ---  CALL (ram, 0x408dd0, 8)
main, (register, 0x10, 4) COPY (register, 0x0, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xca00, 1) BOOL_NEGATE (register, 0x207, 1)
main,  ---  CBRANCH (ram, 0x402920, 8) , (unique, 0xca00, 1)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x30, 8) COPY (const, 0x411068, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402e1d, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main,  ---  BRANCH (ram, 0x402920, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x75, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x75, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x75, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402e51, 8) , (register, 0x206, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x403105, 8) , (unique, 0xd080, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x73, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x73, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x73, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403607, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x74, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x74, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x74, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4026a3, 8) , (unique, 0xc680, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xc4, 8) , (register, 0x20, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xbd00, 4) INT_XOR (unique, 0xbd00, 4) , (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1e0, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402e6c, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x401f70, 8) , (unique, 0xd080, 1)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x30, 8) COPY (const, 0x410a00, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402e95, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x4026a3, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x45, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x45, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x45, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402ed2, 8) , (register, 0x206, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x4033c7, 8) , (unique, 0xd080, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x42, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x42, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x42, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402ec5, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x43, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x43, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x43, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4026a3, 8) , (unique, 0xc680, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0xbd00, 4) INT_XOR (unique, 0xbd00, 4) , (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xb8, 8) , (register, 0x20, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xbd00, 4) INT_XOR (unique, 0xbd00, 4) , (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
main, (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x59, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x59, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x59, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402ef6, 8) , (register, 0x206, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x4035f2, 8) , (unique, 0xce80, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x78, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x78, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x78, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4035fa, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x79, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x79, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x79, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x403970, 8) , (unique, 0xc680, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x13c, 8) , (register, 0x20, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xbd00, 4) INT_XOR (unique, 0xbd00, 4) , (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x5700, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x5700, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x5700, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402f81, 8) , (register, 0x206, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x403b38, 8) , (unique, 0xce80, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x5a00, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x5a00, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x5a00, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x402f6b, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x6200, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x6200, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x6200, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4026a3, 8) , (unique, 0xc680, 1)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x208, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402f3d, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x401f70, 8) , (unique, 0xd080, 1)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x30, 8) COPY (const, 0x410b68, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402f66, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x4026a3, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402f77, 8)
main,  ---  CALL (ram, 0x410320, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x238, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x402f9c, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x403d5b, 8) , (unique, 0xce80, 1)
main, (register, 0x1260, 16) INT_XOR (register, 0x1260, 16) , (register, 0x1260, 16)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x238, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1260, 8)
main, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
main, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
main, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1260, 8) , (register, 0x1200, 8)
main, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
main, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1260, 8) , (register, 0x1200, 8)
main, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x204, 1) COPY (const, 0x0, 1)
main, (register, 0x207, 1) COPY (const, 0x0, 1)
main, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
main,  ---  CBRANCH (ram, 0x403d34, 8) , (unique, 0xc900, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xc8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main,  ---  BRANCH (ram, 0x40269a, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x58, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x58, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x58, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x40308d, 8) , (register, 0x206, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x403ac2, 8) , (unique, 0xce80, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x59, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x59, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x59, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403074, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x61, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x61, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x61, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4026a3, 8) , (unique, 0xc680, 1)
main, (register, 0x0, 8) INT_SEXT (ram, 0x613d10, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x0, 4)
main, (unique, 0x28600, 4) INT_SUB (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x401f70, 8) , (unique, 0xce80, 1)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x218, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40301e, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x401f70, 8) , (unique, 0xce80, 1)
main, (register, 0x0, 4) COPY (ram, 0x613d10, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x12c0, 16) INT_XOR (register, 0x12c0, 16) , (register, 0x12c0, 16)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x218, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
main, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12c0, 8)
main, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
main, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x12c0, 8)
main, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
main, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x12c0, 8)
main, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x204, 1) COPY (const, 0x0, 1)
main, (register, 0x207, 1) COPY (const, 0x0, 1)
main, (ram, 0x613d10, 4) COPY (register, 0x0, 4)
main,  ---  CBRANCH (ram, 0x403056, 8) , (register, 0x202, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main,  ---  CBRANCH (ram, 0x401f70, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x0, 4)
main, (unique, 0x28600, 4) INT_SUB (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x403f20, 8) , (unique, 0xd080, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xd0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403080, 8)
main,  ---  CALL (ram, 0x410320, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xa0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403099, 8)
main,  ---  CALL (ram, 0x410320, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x98, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x18, 8) COPY (const, 0x1, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x1280, 16) INT_XOR (register, 0x1280, 16) , (register, 0x1280, 16)
main, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1280, 8)
main, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
main, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
main, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1280, 8) , (register, 0x1200, 8)
main, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
main, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1280, 8) , (register, 0x1200, 8)
main, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x204, 1) COPY (const, 0x0, 1)
main, (register, 0x207, 1) COPY (const, 0x0, 1)
main, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x40267c, 8) , (unique, 0xc780, 1)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x30, 8) COPY (const, 0x410c58, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4030db, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x230, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main,  ---  BRANCH (ram, 0x40267c, 8)
main, (register, 0x1260, 16) INT_XOR (register, 0x1260, 16) , (register, 0x1260, 16)
main, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1260, 8)
main, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
main, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
main, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1260, 8) , (register, 0x1200, 8)
main, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
main, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1260, 8) , (register, 0x1200, 8)
main, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x204, 1) COPY (const, 0x0, 1)
main, (register, 0x207, 1) COPY (const, 0x0, 1)
main, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
main,  ---  CBRANCH (ram, 0x403fca, 8) , (unique, 0xc900, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x178, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x77, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x77, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x77, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4031cc, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x78, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x78, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x78, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4026a3, 8) , (unique, 0xc680, 1)
main, (register, 0x0, 4) COPY (ram, 0x613d10, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x0, 4)
main, (unique, 0x28600, 4) INT_SUB (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x403a46, 8) , (unique, 0xce80, 1)
main, (register, 0x10, 8) INT_SEXT (register, 0x0, 4)
main, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403b6b, 8) , (register, 0x206, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x248, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403149, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x403a46, 8) , (unique, 0xce80, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x248, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
main, (register, 0x12c8, 8) COPY (const, 0x0, 8)
main, (register, 0x0, 4) COPY (ram, 0x613d10, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x158, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x0, 4)
main, (unique, 0x28600, 4) INT_SUB (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x613d10, 4) COPY (register, 0x0, 4)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x4038f7, 8) , (unique, 0xce80, 1)
main, (register, 0x0, 8) INT_SEXT (register, 0x0, 4)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403e0b, 8) , (register, 0x206, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x258, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4031a5, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x4038f7, 8) , (unique, 0xce80, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x258, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
main, (register, 0x12e8, 8) COPY (const, 0x0, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x2c, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x168, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main,  ---  BRANCH (ram, 0x403e1d, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1f8, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4031e7, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x401f70, 8) , (unique, 0xd080, 1)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x30, 8) COPY (const, 0x410a58, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403210, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x4026a3, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4b, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4b, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4b, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x40323c, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4c, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4c, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4c, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4026a3, 8) , (unique, 0xc680, 1)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40322f, 8)
main,  ---  CALL (ram, 0x410320, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xa8, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1d4, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x411280, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403257, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x403273, 8) , (unique, 0xce80, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1d4, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x2, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
main,  ---  CBRANCH (ram, 0x403273, 8) , (unique, 0xc900, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x128, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbc80, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x30, 8) COPY (const, 0x410830, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403294, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x67, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x67, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x67, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4032f0, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x68, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x68, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x68, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4026a3, 8) , (unique, 0xc680, 1)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1f0, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4032c2, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
main, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
main,  ---  CBRANCH (ram, 0x401f70, 8) , (unique, 0xd080, 1)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x30, 8) COPY (const, 0x4107f0, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4032eb, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x4026a3, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1cc, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x411280, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40330b, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x403c73, 8) , (unique, 0xce80, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1cc, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x4, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x4, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x4, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
main,  ---  CBRANCH (ram, 0x403c3d, 8) , (unique, 0xc900, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1cc, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3580, 8) INT_ADD (const, 0x411198, 8) , (unique, 0x3480, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3580, 8)
main,  ---  BRANCHIND (unique, 0xbd80, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4200, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4200, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x4200, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x40335a, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4300, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4300, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x4300, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4026a3, 8) , (unique, 0xc680, 1)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40334d, 8)
main,  ---  CALL (ram, 0x410320, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xb0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403366, 8)
main,  ---  CALL (ram, 0x410320, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xf0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x6600, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x6600, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x6600, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4033a9, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x6800, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x6800, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x6800, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4026a3, 8) , (unique, 0xc680, 1)
main, (register, 0x10, 8) COPY (ram, 0x6134c0, 8)
main, (register, 0x38, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x8, 8) COPY (const, 0x2, 8)
main, (register, 0x30, 8) COPY (const, 0x4111c0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4033a2, 8)
main,  ---  CALL (ram, 0x40f550, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x402920, 8)
main, (register, 0x30, 8) COPY (ram, 0x6134d8, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4033ba, 8)
main,  ---  CALL (ram, 0x40ea00, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x0, 1) COPY (register, 0x206, 1)
main, (register, 0x0, 4) INT_ZEXT (register, 0x0, 1)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main,  ---  BRANCH (ram, 0x402920, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x46, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x46, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x46, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4033e2, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x48, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x48, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x48, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4026a3, 8) , (unique, 0xc680, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xc0, 8) , (register, 0x20, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xbd00, 4) INT_XOR (unique, 0xbd00, 4) , (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4033ee, 8)
main,  ---  CALL (ram, 0x410320, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1d0, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x411280, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403410, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x40296f, 8) , (unique, 0xce80, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1d0, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xff, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0xff, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
main, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
main,  ---  CBRANCH (ram, 0x403fa1, 8) , (unique, 0xc900, 1)
main, (register, 0x0, 4) COPY (ram, 0x613d10, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x0, 4)
main, (unique, 0x28600, 4) INT_SUB (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x613d10, 4) COPY (register, 0x0, 4)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x401f70, 8) , (unique, 0xce80, 1)
main, (register, 0x0, 8) INT_SEXT (register, 0x0, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x220, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403467, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x401f70, 8) , (unique, 0xce80, 1)
main, (register, 0x1260, 16) INT_XOR (register, 0x1260, 16) , (register, 0x1260, 16)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x220, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1260, 8)
main, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
main, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
main, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1260, 8) , (register, 0x1200, 8)
main, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
main, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1260, 8) , (register, 0x1200, 8)
main, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x204, 1) COPY (const, 0x0, 1)
main, (register, 0x207, 1) COPY (const, 0x0, 1)
main, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
main,  ---  CBRANCH (ram, 0x40433c, 8) , (unique, 0xc900, 1)
main, (register, 0x1280, 16) INT_XOR (register, 0x1280, 16) , (register, 0x1280, 16)
main, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
main, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1280, 8)
main, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
main, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1280, 8)
main, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
main, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1280, 8)
main, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x204, 1) COPY (const, 0x0, 1)
main, (register, 0x207, 1) COPY (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403496, 8) , (register, 0x202, 1)
main,  ---  CBRANCH (ram, 0x404367, 8) , (register, 0x206, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x120, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (register, 0x200, 1) INT_CARRY (ram, 0x613d10, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SCARRY (ram, 0x613d10, 4) , (const, 0x1, 4)
main, (ram, 0x613d10, 4) INT_ADD (ram, 0x613d10, 4) , (const, 0x1, 4)
main, (register, 0x207, 1) INT_SLESS (ram, 0x613d10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (ram, 0x613d10, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (ram, 0x613d10, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xe0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1d8, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x38, 8) INT_SEXT (unique, 0xbc80, 4)
main, (unique, 0x36900, 16) INT_SEXT (register, 0x38, 8)
main, (unique, 0x36980, 16) INT_SEXT (const, 0x70, 8)
main, (unique, 0x36a80, 16) INT_MULT (unique, 0x36900, 16) , (unique, 0x36980, 16)
main, (register, 0x38, 8) INT_MULT (register, 0x38, 8) , (const, 0x70, 8)
main, (unique, 0x36c00, 8) SUBPIECE (unique, 0x36a80, 16) , (const, 0x8, 4)
main, (unique, 0x13b80, 16) INT_SEXT (register, 0x38, 8)
main, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x13b80, 16) , (unique, 0x36a80, 16)
main, (register, 0x20b, 1) COPY (register, 0x200, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4034cf, 8)
main,  ---  CALL (ram, 0x410290, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2a0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x38, 8) COPY (register, 0xb8, 8)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1d0, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x5c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xd8, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xac, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xb0, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xa8, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xf8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1288, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x98, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1268, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x100, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1248, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x150, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1228, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xf0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403544, 8)
main,  ---  CALL (ram, 0x4059a0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x80, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x20, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x20, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x402cd1, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x250, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403569, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x402992, 8) , (unique, 0xce80, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x250, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1248, 8) COPY (const, 0x0, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x54, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (register, 0x0, 4) COPY (ram, 0x613d10, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x160, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main,  ---  BRANCH (ram, 0x402bd8, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x61, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x61, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x61, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403c1d, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x64, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x64, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x64, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4035be, 8) , (unique, 0xc680, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x2, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x41, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x41, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x41, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403c1d, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x44, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x44, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x44, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4035a2, 8) , (register, 0x206, 1)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x30, 8) COPY (const, 0x410680, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4035d8, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x4026a3, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x58, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x58, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x58, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x403970, 8) , (unique, 0xc680, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x138, 8) , (register, 0x20, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xbd00, 4) INT_XOR (unique, 0xbd00, 4) , (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x58, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x58, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x58, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x403970, 8) , (unique, 0xc680, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x13c, 8) , (register, 0x20, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xbd00, 4) INT_XOR (unique, 0xbd00, 4) , (const, 0x2, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1ac, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x124, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x124, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x4, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x124, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x3, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x124, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x2, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x124, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x30, 8) COPY (const, 0x4106b0, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403688, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x4026a3, 8)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x30, 8) COPY (const, 0x410bb0, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0xa8, 8) COPY (const, 0x1, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4036b4, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x230, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main,  ---  BRANCH (ram, 0x40267c, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x402106, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1a8, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x194, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x198, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x19c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2b8, 8) , (register, 0x20, 8)
main, (register, 0x0, 8) COPY (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2b0, 8) , (register, 0x20, 8)
main, (register, 0x0, 8) COPY (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x158, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xc0, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x20c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2d0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2c0, 8) , (register, 0x20, 8)
main, (register, 0x88, 8) COPY (unique, 0x3c80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2b0, 8) , (register, 0x20, 8)
main, (register, 0x80, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40372d, 8)
main,  ---  CALL (ram, 0x4049a0, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x30, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x30, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x30, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x4, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x403e64, 8) , (unique, 0xc680, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1b0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1248, 8) COPY (const, 0x0, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1228, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1b8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40375e, 8)
main,  ---  CALL (ram, 0x408e10, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x30, 8) , (register, 0x30, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403779, 8) , (register, 0x206, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x27800, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x403774, 8) , (unique, 0x27800, 1)
main, (register, 0x0, 8) COPY (register, 0x30, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x90, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x210, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x138, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x150, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x15c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x178, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xbc, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xf4, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xe0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1c0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
main, (register, 0x12e8, 8) COPY (const, 0x0, 8)
main, (unique, 0xe780, 8) COPY (register, 0x98, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x98, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xf0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0xe780, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x258, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x258, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x270, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x280, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1bc, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1e0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xb0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1f4, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1c4, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xc0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x148, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x150, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x338, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
main, (register, 0x12e8, 8) COPY (const, 0x0, 8)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x330, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
main, (register, 0x12c8, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1e0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
main, (register, 0x12a8, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x328, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1288, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x320, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1268, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2a0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1248, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1b0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1228, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x168, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403891, 8)
main,  ---  CALL (ram, 0x408e90, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0xa0, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0xa0, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0xa0, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x4, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4038a7, 8)
main,  ---  CALL (ram, 0x409730, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1dc, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2a0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4038be, 8)
main,  ---  CALL (ram, 0x40e990, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2a0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4038cb, 8)
main,  ---  CALL (ram, 0x4018a0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1dc, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x402b44, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4038e8, 8)
main,  ---  CALL (ram, 0x40e9e0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4038f2, 8)
main,  ---  CALL (ram, 0x409730, 8)
main,  ---  BRANCH (ram, 0x402b52, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x80, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x2c, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x84, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0xb8, 8) , (const, 0x1, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0xb8, 8) , (const, 0x1, 8)
main, (register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x40283e, 8)
main, (unique, 0x3d00, 8) INT_ADD (const, 0x2c0, 8) , (register, 0x20, 8)
main, (unique, 0x3d80, 8) INT_MULT (register, 0x30, 8) , (const, 0x1, 8)
main, (unique, 0x3e80, 8) INT_ADD (unique, 0x3d00, 8) , (unique, 0x3d80, 8)
main, (unique, 0xbb00, 1) COPY (const, 0x0, 1)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (unique, 0xbb00, 1)
main, (register, 0x200, 1) INT_CARRY (register, 0xb8, 8) , (const, 0x1, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0xb8, 8) , (const, 0x1, 8)
main, (register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x4028cf, 8)
main, (unique, 0x3d00, 8) INT_ADD (const, 0x2c0, 8) , (register, 0x20, 8)
main, (unique, 0x3d80, 8) INT_MULT (register, 0x30, 8) , (const, 0x1, 8)
main, (unique, 0x3e80, 8) INT_ADD (unique, 0x3d00, 8) , (unique, 0x3d80, 8)
main, (unique, 0xbb00, 1) COPY (const, 0x0, 1)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (unique, 0xbb00, 1)
main,  ---  BRANCH (ram, 0x4028cf, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x58, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x58, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x58, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403a7f, 8) , (register, 0x206, 1)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x30, 8) COPY (const, 0x410878, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40398a, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x30, 8) COPY (const, 0x4110a0, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x18, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4039b4, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4039c5, 8)
main,  ---  CALL (ram, 0x410320, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x108, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4039de, 8)
main,  ---  CALL (ram, 0x410320, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x118, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
main, (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x59, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x59, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x59, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403a0f, 8) , (register, 0x206, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x403a8c, 8) , (unique, 0xce80, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x78, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x78, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x78, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403a94, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x79, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x79, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x79, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x403970, 8) , (unique, 0xc680, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x74, 8) , (register, 0x20, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0xbd00, 4) INT_XOR (unique, 0xbd00, 4) , (const, 0x2, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
main, (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x59, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x59, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x59, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403a39, 8) , (register, 0x206, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x403965, 8) , (unique, 0xce80, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x78, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x78, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x78, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403a7f, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x79, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x79, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x79, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x403970, 8) , (unique, 0xc680, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x180, 8) , (register, 0x20, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xbd00, 4) INT_XOR (unique, 0xbd00, 4) , (const, 0x2, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x80, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x2c, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xd8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x94, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x180, 8) , (register, 0x20, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xbd00, 4) INT_XOR (unique, 0xbd00, 4) , (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x58, 1)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x58, 1)
main, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x58, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x403970, 8) , (unique, 0xc680, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x74, 8) , (register, 0x20, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0xbd00, 4) INT_XOR (unique, 0xbd00, 4) , (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x30, 8) COPY (const, 0x410c90, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403ab8, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main,  ---  BRANCH (ram, 0x40269a, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x54, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x54, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x54, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403b22, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x57, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x57, 4)
main, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x57, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4026a3, 8) , (unique, 0xc680, 1)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x240, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403aeb, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x403ce6, 8) , (unique, 0xce80, 1)
main, (register, 0x12c0, 16) INT_XOR (register, 0x12c0, 16) , (register, 0x12c0, 16)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x240, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12c0, 8)
main, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
main, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
main, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12c0, 8) , (register, 0x1200, 8)
main, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
main, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12c0, 8) , (register, 0x1200, 8)
main, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x204, 1) COPY (const, 0x0, 1)
main, (register, 0x207, 1) COPY (const, 0x0, 1)
main, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
main, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
main,  ---  CBRANCH (ram, 0x403cbf, 8) , (unique, 0xc900, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main,  ---  BRANCH (ram, 0x40269a, 8)
main, (register, 0x38, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403b2e, 8)
main,  ---  CALL (ram, 0x410320, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x5400, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x5400, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x5400, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403b22, 8) , (register, 0x206, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x5600, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x5600, 4)
main, (unique, 0x27b00, 4) INT_SUB (register, 0x0, 4) , (const, 0x5600, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27b00, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x27b00, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x4026a3, 8) , (unique, 0xc680, 1)
main, (register, 0x10, 8) COPY (ram, 0x6134c8, 8)
main, (register, 0x30, 8) COPY (ram, 0x6134d0, 8)
main, (register, 0x38, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403b64, 8)
main,  ---  CALL (ram, 0x40f830, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x402920, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main,  ---  CBRANCH (ram, 0x403171, 8) , (register, 0x206, 1)
main,  ---  BRANCH (ram, 0x403135, 8)
main, (unique, 0xe780, 8) COPY (register, 0x38, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x30, 8) COPY (register, 0xb8, 8)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xa4, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x64, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x150, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x6c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xb0, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x210, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xb8, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x88, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x94, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
main, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xd8, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xb0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x128, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1288, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xc8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1268, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x130, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1248, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x180, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1228, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x120, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403c14, 8)
main,  ---  CALL (ram, 0x405a90, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x50, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x50, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x50, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x4023e7, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x30, 8) COPY (const, 0x4107b8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403c5e, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x4026a3, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x5, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x30, 8) COPY (const, 0x410770, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403c94, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x4026a3, 8)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x30, 8) COPY (const, 0x410900, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403cba, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x4026a3, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x30, 8) COPY (const, 0x410b28, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403cdc, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main,  ---  BRANCH (ram, 0x40269a, 8)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x30, 8) COPY (const, 0x410ad8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0xa8, 8) COPY (const, 0x1, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403d0d, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x403af3, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x8, 8) COPY (register, 0x18, 8)
main, (register, 0x30, 8) COPY (const, 0x411010, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403d2f, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x402416, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x30, 8) COPY (const, 0x410d28, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403d51, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main,  ---  BRANCH (ram, 0x40269a, 8)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x30, 8) COPY (const, 0x410cd0, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0xa8, 8) COPY (const, 0x1, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403d82, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x402fa4, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x402bf8, 8) , (unique, 0xc680, 1)
main, (register, 0x0, 4) COPY (ram, 0x613d10, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x84, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x0, 4)
main, (unique, 0x28600, 4) INT_SUB (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x613d10, 4) COPY (register, 0x0, 4)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x401f70, 8) , (unique, 0xce80, 1)
main, (register, 0x0, 8) INT_SEXT (register, 0x0, 4)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x403dd0, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403e58, 8) , (register, 0x206, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x270, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403de4, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x40431c, 8) , (unique, 0xce80, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x270, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1288, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x84, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x198, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main,  ---  BRANCH (ram, 0x403e58, 8)
main, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x2c, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x403191, 8) , (unique, 0xc680, 1)
main, (register, 0x0, 4) COPY (ram, 0x613d10, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x80, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x0, 4)
main, (unique, 0x28600, 4) INT_SUB (register, 0x28, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (ram, 0x613d10, 4) COPY (register, 0x0, 4)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x401f70, 8) , (unique, 0xce80, 1)
main, (register, 0x0, 8) INT_SEXT (register, 0x0, 4)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x403ee2, 8) , (unique, 0xc680, 1)
main, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
main, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
main, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
main, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x403ee2, 8) , (unique, 0xc680, 1)
main, (register, 0x200, 1) INT_CARRY (ram, 0x613d10, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SCARRY (ram, 0x613d10, 4) , (const, 0x1, 4)
main, (ram, 0x613d10, 4) INT_ADD (ram, 0x613d10, 4) , (const, 0x1, 4)
main, (register, 0x207, 1) INT_SLESS (ram, 0x613d10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (ram, 0x613d10, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (ram, 0x613d10, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1b4, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x128, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x120, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1c0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x88, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x120, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x80, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x118, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x110, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x108, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403eae, 8)
main,  ---  CALL (ram, 0x408c80, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x20, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x20, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x40373c, 8) , (unique, 0xc680, 1)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x30, 8) COPY (const, 0x410f98, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403ed8, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main,  ---  BRANCH (ram, 0x402920, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x268, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403ef6, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x40432c, 8) , (unique, 0xce80, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x268, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1228, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x80, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x190, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main,  ---  BRANCH (ram, 0x403e58, 8)
main, (register, 0x0, 8) INT_SEXT (register, 0x0, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x210, 8) , (register, 0x20, 8)
main, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x30, 8) COPY (const, 0x41128e, 8)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403f40, 8)
main,  ---  CALL (ram, 0x401780, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
main, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
main,  ---  CBRANCH (ram, 0x40305e, 8) , (unique, 0xce80, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x210, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
main, (register, 0x12e8, 8) COPY (const, 0x0, 8)
main, (register, 0x200, 1) INT_CARRY (ram, 0x613d10, 4) , (const, 0x1, 4)
main, (register, 0x20b, 1) INT_SCARRY (ram, 0x613d10, 4) , (const, 0x1, 4)
main, (ram, 0x613d10, 4) INT_ADD (ram, 0x613d10, 4) , (const, 0x1, 4)
main, (register, 0x207, 1) INT_SLESS (ram, 0x613d10, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (ram, 0x613d10, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (ram, 0x613d10, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xd0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x130, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x30, 8) COPY (const, 0x410f58, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403f97, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main,  ---  BRANCH (ram, 0x402920, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x8, 4) COPY (register, 0x0, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (register, 0x30, 8) COPY (const, 0x410d68, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403fbd, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x44, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x40342e, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x30, 8) COPY (const, 0x410740, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403fe7, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x403ff9, 8)
main,  ---  CALL (ram, 0x40e9e0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x404003, 8)
main,  ---  CALL (ram, 0x409730, 8)
main,  ---  BRANCH (ram, 0x402de5, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1a8, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x194, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x198, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x19c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2b8, 8) , (register, 0x20, 8)
main, (register, 0x0, 8) COPY (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2b0, 8) , (register, 0x20, 8)
main, (register, 0x0, 8) COPY (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x158, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xc0, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x20c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2d0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2c0, 8) , (register, 0x20, 8)
main, (register, 0x88, 8) COPY (unique, 0x3c80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2b0, 8) , (register, 0x20, 8)
main, (register, 0x80, 8) COPY (unique, 0x3c80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40406c, 8)
main,  ---  CALL (ram, 0x4049a0, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x30, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x30, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x30, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x4, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x4040d2, 8) , (register, 0x206, 1)
main, (unique, 0xe780, 8) COPY (register, 0x8, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1b4, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x128, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x120, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1c0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x88, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x120, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x80, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x118, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x110, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x108, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4040c0, 8)
main,  ---  CALL (ram, 0x408c80, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x20, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x20, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x20, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x403ec0, 8) , (register, 0x206, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2b0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1248, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2a8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1228, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2b8, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4040f7, 8)
main,  ---  CALL (ram, 0x408e10, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x30, 8) , (register, 0x30, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main,  ---  CBRANCH (ram, 0x404112, 8) , (register, 0x206, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
main, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x27800, 1) BOOL_NEGATE (register, 0x206, 1)
main,  ---  CBRANCH (ram, 0x40410d, 8) , (unique, 0x27800, 1)
main, (register, 0x0, 8) COPY (register, 0x30, 8)
main, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x90, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x210, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x138, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x150, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x15c, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x178, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xbc, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xf4, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xe0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1c0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1228, 8) COPY (const, 0x0, 8)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x98, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xf0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0xe780, 8) COPY (register, 0x10, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
main,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x258, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x258, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x270, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x280, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1bc, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (unique, 0xe780, 8) COPY (register, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1e0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (unique, 0xe780, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xb0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1f4, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1c4, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xc0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x148, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x150, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x338, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
main, (register, 0x12e8, 8) COPY (const, 0x0, 8)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x330, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
main, (register, 0x12c8, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1e0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
main, (register, 0x12a8, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x328, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1288, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x320, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1268, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2a0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1248, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1b0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1228, 8) COPY (const, 0x0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x168, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x404229, 8)
main,  ---  CALL (ram, 0x408e90, 8)
main, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0xa0, 8)
main, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0xa0, 8)
main, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0xa0, 8)
main, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
main, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
main, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (unique, 0x3800, 8) INT_ADD (const, 0x4, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
main, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40423f, 8)
main,  ---  CALL (ram, 0x409730, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1dc, 8) , (register, 0x20, 8)
main, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
main, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2a0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x38, 8) COPY (register, 0x18, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x404256, 8)
main,  ---  CALL (ram, 0x40e990, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x2a0, 8) , (register, 0x20, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x404263, 8)
main,  ---  CALL (ram, 0x4018a0, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x1dc, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x402dd7, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x30, 8) COPY (const, 0x410e70, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40428d, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main,  ---  BRANCH (ram, 0x402920, 8)
main, (register, 0x0, 8) INT_SEXT (ram, 0x613d10, 4)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x30, 8) COPY (const, 0x410ec0, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
main, (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3300, 8)
main, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
main, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4042bc, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main,  ---  BRANCH (ram, 0x402920, 8)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x30, 8) COPY (const, 0x410f08, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4042e7, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main,  ---  BRANCH (ram, 0x402920, 8)
main, (register, 0x8, 8) COPY (ram, 0x613d18, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x30, 8) COPY (const, 0x410e28, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x404312, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main,  ---  BRANCH (ram, 0x402920, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x84, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x80, 8) , (register, 0x20, 8)
main, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
main,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
main,  ---  BRANCH (ram, 0x401f70, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x30, 8) COPY (const, 0x410db8, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x404359, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xe0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main,  ---  BRANCH (ram, 0x4034a1, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x30, 8) COPY (const, 0x410df0, 8)
main, (register, 0x200, 1) COPY (const, 0x0, 1)
main, (register, 0x20b, 1) COPY (const, 0x0, 1)
main, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
main, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
main, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
main, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
main, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
main, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
main, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x404381, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0xe0, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main,  ---  BRANCH (ram, 0x4034a1, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x160, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
main, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
main, (register, 0x30, 8) COPY (const, 0x410fd0, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4043b5, 8)
main,  ---  CALL (ram, 0x401b10, 8)
main, (register, 0x0, 8) COPY (const, 0x1, 8)
main,  ---  BRANCH (ram, 0x402920, 8)
main, (register, 0x38, 8) COPY (register, 0x8, 8)
main, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
main,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4043c7, 8)
main,  ---  CALL (ram, 0x401b30, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x170, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main,  ---  BRANCH (ram, 0x404398, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x168, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main,  ---  BRANCH (ram, 0x404398, 8)
main, (unique, 0x3c80, 8) INT_ADD (const, 0x158, 8) , (register, 0x20, 8)
main, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
main, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
main, (register, 0x1208, 8) COPY (const, 0x0, 8)
main,  ---  BRANCH (ram, 0x404398, 8)
_start, (register, 0x200, 1) COPY (const, 0x0, 1)
_start, (register, 0x20b, 1) COPY (const, 0x0, 1)
_start, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
_start, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
_start, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
_start, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
_start, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
_start, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_start, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_start, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_start, (register, 0x88, 8) COPY (register, 0x10, 8)
_start, (register, 0x30, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
_start, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_start, (register, 0x10, 8) COPY (register, 0x20, 8)
_start, (register, 0x200, 1) COPY (const, 0x0, 1)
_start, (register, 0x20b, 1) COPY (const, 0x0, 1)
_start, (register, 0x20, 8) INT_AND (register, 0x20, 8) , (const, 0xfffffffffffffff0, 8)
_start, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
_start, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
_start, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
_start, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_start, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_start, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_start, (unique, 0xe780, 8) COPY (register, 0x0, 8)
_start, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_start,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
_start, (unique, 0xe780, 8) COPY (register, 0x20, 8)
_start, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_start,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
_start, (register, 0x80, 8) COPY (const, 0x4103b0, 8)
_start, (register, 0x8, 8) COPY (const, 0x410340, 8)
_start, (register, 0x38, 8) COPY (const, 0x401b70, 8)
_start, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_start,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x404411, 8)
_start,  ---  CALL (ram, 0x401820, 8)
_start,  ---  BRANCH (ram, 0x404411, 8)
deregister_tm_clones, (register, 0x0, 8) COPY (const, 0x613cf7, 8)
deregister_tm_clones, (unique, 0xe780, 8) COPY (register, 0x28, 8)
deregister_tm_clones, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
deregister_tm_clones,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
deregister_tm_clones, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (const, 0x613cf0, 8)
deregister_tm_clones, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0x613cf0, 8)
deregister_tm_clones, (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x613cf0, 8)
deregister_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
deregister_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
deregister_tm_clones, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
deregister_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
deregister_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
deregister_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
deregister_tm_clones, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (const, 0xe, 8)
deregister_tm_clones, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0xe, 8)
deregister_tm_clones, (unique, 0x28300, 8) INT_SUB (register, 0x0, 8) , (const, 0xe, 8)
deregister_tm_clones, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
deregister_tm_clones, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
deregister_tm_clones, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
deregister_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
deregister_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
deregister_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
deregister_tm_clones, (register, 0x28, 8) COPY (register, 0x20, 8)
deregister_tm_clones, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
deregister_tm_clones,  ---  CBRANCH (ram, 0x404450, 8) , (unique, 0xc780, 1)
deregister_tm_clones, (register, 0x0, 8) COPY (const, 0x0, 8)
deregister_tm_clones, (register, 0x200, 1) COPY (const, 0x0, 1)
deregister_tm_clones, (register, 0x20b, 1) COPY (const, 0x0, 1)
deregister_tm_clones, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
deregister_tm_clones, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
deregister_tm_clones, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
deregister_tm_clones, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
deregister_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
deregister_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
deregister_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
deregister_tm_clones,  ---  CBRANCH (ram, 0x404450, 8) , (register, 0x206, 1)
deregister_tm_clones, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
deregister_tm_clones, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
deregister_tm_clones, (register, 0x38, 8) COPY (const, 0x613cf0, 8)
deregister_tm_clones,  ---  BRANCHIND (register, 0x0, 8)
deregister_tm_clones, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
deregister_tm_clones, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
deregister_tm_clones, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
deregister_tm_clones, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
deregister_tm_clones,  ---  RETURN (register, 0x288, 8)
register_tm_clones, (register, 0x30, 8) COPY (const, 0x613cf0, 8)
register_tm_clones, (unique, 0xe780, 8) COPY (register, 0x28, 8)
register_tm_clones, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
register_tm_clones,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
register_tm_clones, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (const, 0x613cf0, 8)
register_tm_clones, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (const, 0x613cf0, 8)
register_tm_clones, (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (const, 0x613cf0, 8)
register_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
register_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
register_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x51b80, 4) INT_AND (const, 0x3, 4) , (const, 0x3f, 4)
register_tm_clones, (unique, 0x51c00, 8) COPY (register, 0x30, 8)
register_tm_clones, (register, 0x30, 8) INT_SRIGHT (register, 0x30, 8) , (unique, 0x51b80, 4)
register_tm_clones, (unique, 0x15980, 1) INT_NOTEQUAL (unique, 0x51b80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x15a00, 4) INT_SUB (unique, 0x51b80, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x15a80, 8) INT_SRIGHT (unique, 0x51c00, 8) , (unique, 0x15a00, 4)
register_tm_clones, (unique, 0x15b00, 8) INT_AND (unique, 0x15a80, 8) , (const, 0x1, 8)
register_tm_clones, (unique, 0x15c00, 1) INT_NOTEQUAL (unique, 0x15b00, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x15c80, 1) BOOL_NEGATE (unique, 0x15980, 1)
register_tm_clones, (unique, 0x15d00, 1) INT_AND (unique, 0x15c80, 1) , (register, 0x200, 1)
register_tm_clones, (unique, 0x15d80, 1) INT_AND (unique, 0x15980, 1) , (unique, 0x15c00, 1)
register_tm_clones, (register, 0x200, 1) INT_OR (unique, 0x15d00, 1) , (unique, 0x15d80, 1)
register_tm_clones, (unique, 0x15f00, 1) INT_EQUAL (unique, 0x51b80, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x15f80, 1) BOOL_NEGATE (unique, 0x15f00, 1)
register_tm_clones, (register, 0x20b, 1) INT_AND (unique, 0x15f80, 1) , (register, 0x20b, 1)
register_tm_clones, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x51b80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x12f80, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
register_tm_clones, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
register_tm_clones, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
register_tm_clones, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
register_tm_clones, (unique, 0x13280, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
register_tm_clones, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
register_tm_clones, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
register_tm_clones, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
register_tm_clones, (unique, 0x13500, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
register_tm_clones, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
register_tm_clones, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
register_tm_clones, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
register_tm_clones, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
register_tm_clones, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
register_tm_clones, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
register_tm_clones, (register, 0x28, 8) COPY (register, 0x20, 8)
register_tm_clones, (register, 0x0, 8) COPY (register, 0x30, 8)
register_tm_clones, (unique, 0x57880, 4) INT_AND (const, 0x3f, 4) , (const, 0x3f, 4)
register_tm_clones, (unique, 0x57900, 8) COPY (register, 0x0, 8)
register_tm_clones, (register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (unique, 0x57880, 4)
register_tm_clones, (unique, 0x16100, 1) INT_NOTEQUAL (unique, 0x57880, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x16180, 4) INT_SUB (unique, 0x57880, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x16200, 8) INT_RIGHT (unique, 0x57900, 8) , (unique, 0x16180, 4)
register_tm_clones, (unique, 0x16280, 8) INT_AND (unique, 0x16200, 8) , (const, 0x1, 8)
register_tm_clones, (unique, 0x16380, 1) INT_NOTEQUAL (unique, 0x16280, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x16400, 1) BOOL_NEGATE (unique, 0x16100, 1)
register_tm_clones, (unique, 0x16480, 1) INT_AND (unique, 0x16400, 1) , (register, 0x200, 1)
register_tm_clones, (unique, 0x16500, 1) INT_AND (unique, 0x16100, 1) , (unique, 0x16380, 1)
register_tm_clones, (register, 0x200, 1) INT_OR (unique, 0x16480, 1) , (unique, 0x16500, 1)
register_tm_clones, (unique, 0x16680, 1) INT_EQUAL (unique, 0x57880, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x16780, 1) INT_SLESS (unique, 0x57900, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x16800, 1) BOOL_NEGATE (unique, 0x16680, 1)
register_tm_clones, (unique, 0x16880, 1) INT_AND (unique, 0x16800, 1) , (register, 0x20b, 1)
register_tm_clones, (unique, 0x16900, 1) INT_AND (unique, 0x16680, 1) , (unique, 0x16780, 1)
register_tm_clones, (register, 0x20b, 1) INT_OR (unique, 0x16880, 1) , (unique, 0x16900, 1)
register_tm_clones, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x57880, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x12f80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
register_tm_clones, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
register_tm_clones, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
register_tm_clones, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
register_tm_clones, (unique, 0x13280, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
register_tm_clones, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
register_tm_clones, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
register_tm_clones, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
register_tm_clones, (unique, 0x13500, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
register_tm_clones, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
register_tm_clones, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
register_tm_clones, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
register_tm_clones, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
register_tm_clones, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
register_tm_clones, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
register_tm_clones, (register, 0x200, 1) INT_CARRY (register, 0x30, 8) , (register, 0x0, 8)
register_tm_clones, (register, 0x20b, 1) INT_SCARRY (register, 0x30, 8) , (register, 0x0, 8)
register_tm_clones, (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0x0, 8)
register_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
register_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
register_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0xbe80, 1) COPY (const, 0x1, 1)
register_tm_clones, (unique, 0x51780, 8) INT_AND (register, 0x30, 8) , (const, 0x1, 8)
register_tm_clones, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x51780, 8) , (const, 0x0, 8)
register_tm_clones, (register, 0x20b, 1) COPY (const, 0x0, 1)
register_tm_clones, (register, 0x30, 8) INT_SRIGHT (register, 0x30, 8) , (const, 0x1, 4)
register_tm_clones, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
register_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
register_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
register_tm_clones,  ---  CBRANCH (ram, 0x404498, 8) , (register, 0x206, 1)
register_tm_clones, (register, 0x0, 8) COPY (const, 0x0, 8)
register_tm_clones, (register, 0x200, 1) COPY (const, 0x0, 1)
register_tm_clones, (register, 0x20b, 1) COPY (const, 0x0, 1)
register_tm_clones, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
register_tm_clones, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
register_tm_clones, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
register_tm_clones, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
register_tm_clones, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
register_tm_clones, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
register_tm_clones, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
register_tm_clones,  ---  CBRANCH (ram, 0x404498, 8) , (register, 0x206, 1)
register_tm_clones, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
register_tm_clones, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
register_tm_clones, (register, 0x38, 8) COPY (const, 0x613cf0, 8)
register_tm_clones,  ---  BRANCHIND (register, 0x0, 8)
register_tm_clones, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
register_tm_clones, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
register_tm_clones, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
register_tm_clones, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
register_tm_clones,  ---  RETURN (register, 0x288, 8)
__do_global_dtors_aux, (register, 0x200, 1) INT_LESS (ram, 0x613d08, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (register, 0x20b, 1) INT_SBORROW (ram, 0x613d08, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x27d00, 1) INT_SUB (ram, 0x613d08, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
__do_global_dtors_aux, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
__do_global_dtors_aux, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__do_global_dtors_aux, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
__do_global_dtors_aux,  ---  CBRANCH (ram, 0x4044ba, 8) , (unique, 0xc680, 1)
__do_global_dtors_aux, (unique, 0xe780, 8) COPY (register, 0x28, 8)
__do_global_dtors_aux, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__do_global_dtors_aux,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__do_global_dtors_aux, (register, 0x28, 8) COPY (register, 0x20, 8)
__do_global_dtors_aux, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__do_global_dtors_aux,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4044b2, 8)
__do_global_dtors_aux,  ---  CALL (ram, 0x404420, 8)
__do_global_dtors_aux, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__do_global_dtors_aux, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__do_global_dtors_aux, (ram, 0x613d08, 1) COPY (const, 0x1, 1)
__do_global_dtors_aux, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__do_global_dtors_aux, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__do_global_dtors_aux,  ---  RETURN (register, 0x288, 8)
frame_dummy, (register, 0x38, 8) COPY (const, 0x613010, 8)
frame_dummy, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
frame_dummy, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
frame_dummy, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
frame_dummy, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
frame_dummy, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
frame_dummy, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
frame_dummy, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
frame_dummy, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
frame_dummy, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
frame_dummy, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
frame_dummy, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
frame_dummy, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
frame_dummy, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
frame_dummy,  ---  CBRANCH (ram, 0x4044d0, 8) , (unique, 0xc680, 1)
frame_dummy,  ---  BRANCH (ram, 0x404460, 8)
frame_dummy, (register, 0x0, 8) COPY (const, 0x0, 8)
frame_dummy, (register, 0x200, 1) COPY (const, 0x0, 1)
frame_dummy, (register, 0x20b, 1) COPY (const, 0x0, 1)
frame_dummy, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
frame_dummy, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
frame_dummy, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
frame_dummy, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
frame_dummy, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
frame_dummy, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
frame_dummy, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
frame_dummy,  ---  CBRANCH (ram, 0x4044cb, 8) , (register, 0x206, 1)
frame_dummy, (unique, 0xe780, 8) COPY (register, 0x28, 8)
frame_dummy, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
frame_dummy,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
frame_dummy, (register, 0x28, 8) COPY (register, 0x20, 8)
frame_dummy, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
frame_dummy,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4044e0, 8)
frame_dummy,  ---  CALLIND (register, 0x0, 8)
frame_dummy, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
frame_dummy, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
frame_dummy,  ---  BRANCH (ram, 0x404460, 8)
clip_line, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
clip_line, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
clip_line,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
clip_line, (unique, 0xe780, 8) COPY (register, 0x28, 8)
clip_line, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
clip_line,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
clip_line, (unique, 0xe780, 8) COPY (register, 0x18, 8)
clip_line, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
clip_line,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
clip_line, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
clip_line, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
clip_line, (register, 0x90, 4) COPY (unique, 0xbc80, 4)
clip_line, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
clip_line, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
clip_line, (register, 0x1340, 8) COPY (unique, 0x5280, 8)
clip_line, (register, 0x1348, 8) COPY (const, 0x0, 8)
clip_line, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)
clip_line, (register, 0x1380, 8) COPY (unique, 0x5280, 8)
clip_line, (register, 0x1388, 8) COPY (const, 0x0, 8)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
clip_line, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
clip_line, (register, 0x1328, 8) COPY (const, 0x0, 8)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line, (register, 0x28, 1) COPY (unique, 0xc680, 1)
clip_line, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
clip_line, (register, 0x1360, 8) COPY (unique, 0x5280, 8)
clip_line, (register, 0x1368, 8) COPY (const, 0x0, 8)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1340, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1220, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1340, 8) , (register, 0x1220, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1340, 8) , (register, 0x1220, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x404980, 8) , (unique, 0xc780, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59000, 1) INT_AND (register, 0x28, 1) , (register, 0x28, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x90, 8) COPY (const, 0x4, 8)
clip_line,  ---  CBRANCH (ram, 0x404980, 8) , (register, 0x206, 1)
clip_line, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
clip_line, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
clip_line, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
clip_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line, (register, 0x18, 1) COPY (unique, 0xc680, 1)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1380, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1260, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1380, 8) , (register, 0x1260, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1380, 8) , (register, 0x1260, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x404958, 8) , (unique, 0xc780, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59000, 1) INT_AND (register, 0x18, 1) , (register, 0x18, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line,  ---  CBRANCH (ram, 0x404958, 8) , (register, 0x206, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x90, 4) INT_OR (register, 0x90, 4) , (const, 0x1, 4)
clip_line, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x90, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x90, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x90, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1320, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1220, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1320, 8) , (register, 0x1220, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1320, 8) , (register, 0x1220, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x404938, 8) , (unique, 0xc780, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59000, 1) INT_AND (register, 0x28, 1) , (register, 0x28, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x0, 8) COPY (const, 0x4, 8)
clip_line,  ---  CBRANCH (ram, 0x404938, 8) , (register, 0x206, 1)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1360, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1260, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1360, 8) , (register, 0x1260, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1360, 8) , (register, 0x1260, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x404910, 8) , (unique, 0xc780, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59000, 1) INT_AND (register, 0x18, 1) , (register, 0x18, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line,  ---  CBRANCH (ram, 0x404910, 8) , (register, 0x206, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x0, 4) INT_OR (register, 0x0, 4) , (const, 0x1, 4)
clip_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x1300, 8) COPY (register, 0x1360, 8)
clip_line, (register, 0x1308, 8) COPY (register, 0x1368, 8)
clip_line, (register, 0x12e0, 8) COPY (register, 0x1320, 8)
clip_line, (register, 0x12e8, 8) COPY (register, 0x1328, 8)
clip_line, (register, 0x12c0, 8) COPY (register, 0x1380, 8)
clip_line, (register, 0x12c8, 8) COPY (register, 0x1388, 8)
clip_line, (register, 0x12a0, 8) COPY (register, 0x1340, 8)
clip_line, (register, 0x12a8, 8) COPY (register, 0x1348, 8)
clip_line, (register, 0x98, 4) COPY (register, 0x0, 4)
clip_line, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x98, 4) INT_OR (register, 0x98, 4) , (register, 0x90, 4)
clip_line, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x98, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x98, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x98, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line,  ---  CBRANCH (ram, 0x404638, 8) , (register, 0x206, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x90, 4)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x4048f0, 8) , (unique, 0xc680, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line,  ---  CBRANCH (ram, 0x4046b8, 8) , (register, 0x206, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x58c00, 1) INT_AND (register, 0x90, 1) , (const, 0x4, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x58c00, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x58c00, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0xa0, 4) COPY (register, 0x90, 4)
clip_line, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
clip_line,  ---  CBRANCH (ram, 0x40473b, 8) , (register, 0x206, 1)
clip_line, (register, 0x13a0, 8) COPY (register, 0x1300, 8)
clip_line, (register, 0x13a8, 8) COPY (register, 0x1308, 8)
clip_line, (register, 0x1280, 8) COPY (register, 0x1220, 8)
clip_line, (register, 0x1288, 8) COPY (register, 0x1228, 8)
clip_line, (register, 0x13c0, 8) COPY (register, 0x12e0, 8)
clip_line, (register, 0x13c8, 8) COPY (register, 0x12e8, 8)
clip_line, (register, 0x13a0, 8) FLOAT_SUB (register, 0x13a0, 8) , (register, 0x12c0, 8)
clip_line, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x12a0, 8)
clip_line, (register, 0x13c0, 8) FLOAT_SUB (register, 0x13c0, 8) , (register, 0x12a0, 8)
clip_line, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x13a0, 8)
clip_line, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (register, 0x13c0, 8)
clip_line, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x12c0, 8)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1280, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1260, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1280, 8) , (register, 0x1260, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1280, 8) , (register, 0x1260, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x12c0, 8) COPY (register, 0x1280, 8)
clip_line, (register, 0x12c8, 8) COPY (register, 0x1288, 8)
clip_line, (register, 0x12a0, 8) COPY (register, 0x1220, 8)
clip_line, (register, 0x12a8, 8) COPY (register, 0x1228, 8)
clip_line, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
clip_line, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
clip_line, (register, 0x98, 1) COPY (unique, 0xc900, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x98, 4) INT_AND (register, 0x98, 4) , (register, 0x18, 4)
clip_line, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x98, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x98, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x98, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12a0, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x12a0, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x12a0, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x4048d0, 8) , (unique, 0xc780, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x90, 8) COPY (const, 0x8, 8)
clip_line,  ---  CBRANCH (ram, 0x4048d0, 8) , (register, 0x206, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59000, 1) INT_AND (register, 0x98, 1) , (register, 0x98, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line,  ---  CBRANCH (ram, 0x404844, 8) , (register, 0x206, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x90, 4) INT_OR (register, 0x90, 4) , (const, 0x1, 4)
clip_line, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x90, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x90, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x90, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x98, 4) COPY (register, 0x0, 4)
clip_line, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x98, 4) INT_OR (register, 0x98, 4) , (register, 0x90, 4)
clip_line, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x98, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x98, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x98, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x4045a4, 8) , (unique, 0xc680, 1)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1340, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12a0, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1340, 8) , (register, 0x12a0, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1340, 8) , (register, 0x12a0, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x80, 8) COPY (const, 0x1, 8)
clip_line, (register, 0x0, 1) COPY (register, 0x202, 1)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
clip_line, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
clip_line,  ---  CBRANCH (ram, 0x40464a, 8) , (unique, 0x27780, 1)
clip_line, (register, 0x0, 4) COPY (register, 0x80, 4)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59000, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x4048e0, 8) , (unique, 0xc680, 1)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1380, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12c0, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1380, 8) , (register, 0x12c0, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1380, 8) , (register, 0x12c0, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x0, 1) COPY (register, 0x202, 1)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
clip_line, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
clip_line,  ---  CBRANCH (ram, 0x40465e, 8) , (unique, 0x27780, 1)
clip_line, (register, 0x0, 4) COPY (register, 0x80, 4)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59000, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x4048e0, 8) , (unique, 0xc680, 1)
clip_line, (register, 0x0, 8) COPY (const, 0x1, 8)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1320, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12e0, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1320, 8) , (register, 0x12e0, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1320, 8) , (register, 0x12e0, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x88, 8) COPY (const, 0x1, 8)
clip_line, (register, 0x80, 1) COPY (register, 0x202, 1)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
clip_line, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
clip_line,  ---  CBRANCH (ram, 0x40467e, 8) , (unique, 0x27780, 1)
clip_line, (register, 0x80, 4) COPY (register, 0x88, 4)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59000, 1) INT_AND (register, 0x80, 1) , (register, 0x80, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x404900, 8) , (unique, 0xc680, 1)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1360, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1300, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1360, 8) , (register, 0x1300, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1360, 8) , (register, 0x1300, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x80, 1) COPY (register, 0x202, 1)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
clip_line, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
clip_line,  ---  CBRANCH (ram, 0x404694, 8) , (unique, 0x27780, 1)
clip_line, (register, 0x80, 4) COPY (register, 0x88, 4)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59000, 1) INT_AND (register, 0x80, 1) , (register, 0x80, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x404900, 8) , (unique, 0xc680, 1)
clip_line, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
clip_line,  ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5280, 8)
clip_line, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
clip_line,  ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0x5280, 8)
clip_line, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
clip_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
clip_line, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
clip_line,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x5280, 8)
clip_line, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
clip_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
clip_line, (unique, 0x5280, 8) COPY (register, 0x1300, 8)
clip_line,  ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0x5280, 8)
clip_line, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
clip_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
clip_line, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
clip_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
clip_line,  ---  RETURN (register, 0x288, 8)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x58800, 1) INT_AND (register, 0x0, 1) , (const, 0x4, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x58800, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x58800, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x58800, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line,  ---  CBRANCH (ram, 0x404738, 8) , (register, 0x206, 1)
clip_line, (register, 0x1280, 8) COPY (register, 0x1220, 8)
clip_line, (register, 0x1288, 8) COPY (register, 0x1228, 8)
clip_line, (register, 0x13a0, 8) COPY (register, 0x1300, 8)
clip_line, (register, 0x13a8, 8) COPY (register, 0x1308, 8)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x13a0, 8) FLOAT_SUB (register, 0x13a0, 8) , (register, 0x12c0, 8)
clip_line, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x12a0, 8)
clip_line, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x13a0, 8)
clip_line, (register, 0x13a0, 8) COPY (register, 0x12e0, 8)
clip_line, (register, 0x13a8, 8) COPY (register, 0x12e8, 8)
clip_line, (register, 0x13a0, 8) FLOAT_SUB (register, 0x13a0, 8) , (register, 0x12a0, 8)
clip_line, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (register, 0x13a0, 8)
clip_line, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x12c0, 8)
clip_line,  ---  CBRANCH (ram, 0x4045f0, 8) , (register, 0x206, 1)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1280, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1260, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1280, 8) , (register, 0x1260, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1280, 8) , (register, 0x1260, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x13a0, 8) COPY (register, 0x1220, 8)
clip_line, (register, 0x13a8, 8) COPY (register, 0x1228, 8)
clip_line, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
clip_line, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
clip_line, (register, 0x98, 1) COPY (unique, 0xc900, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x98, 4) INT_AND (register, 0x98, 4) , (register, 0x18, 4)
clip_line, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x98, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x98, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x98, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x13a0, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x13a0, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x13a0, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x404880, 8) , (unique, 0xc780, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x0, 8) COPY (const, 0x8, 8)
clip_line,  ---  CBRANCH (ram, 0x404880, 8) , (register, 0x206, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59000, 1) INT_AND (register, 0x98, 1) , (register, 0x98, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line,  ---  CBRANCH (ram, 0x4047aa, 8) , (register, 0x206, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x0, 4) INT_OR (register, 0x0, 4) , (const, 0x1, 4)
clip_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x1300, 8) COPY (register, 0x1280, 8)
clip_line, (register, 0x1308, 8) COPY (register, 0x1288, 8)
clip_line, (register, 0x12e0, 8) COPY (register, 0x13a0, 8)
clip_line, (register, 0x12e8, 8) COPY (register, 0x13a8, 8)
clip_line,  ---  BRANCH (ram, 0x404598, 8)
clip_line, (register, 0xa0, 4) COPY (register, 0x0, 4)
clip_line, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x58c00, 1) INT_AND (register, 0xa0, 1) , (const, 0x8, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x58c00, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x58c00, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line,  ---  CBRANCH (ram, 0x4047d0, 8) , (register, 0x206, 1)
clip_line, (register, 0x1280, 8) COPY (register, 0x1200, 8)
clip_line, (register, 0x1288, 8) COPY (register, 0x1208, 8)
clip_line, (register, 0x13a0, 8) COPY (register, 0x1300, 8)
clip_line, (register, 0x13a8, 8) COPY (register, 0x1308, 8)
clip_line, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x12a0, 8)
clip_line, (register, 0x13a0, 8) FLOAT_SUB (register, 0x13a0, 8) , (register, 0x12c0, 8)
clip_line, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x13a0, 8)
clip_line, (register, 0x13a0, 8) COPY (register, 0x12e0, 8)
clip_line, (register, 0x13a8, 8) COPY (register, 0x12e8, 8)
clip_line, (register, 0x13a0, 8) FLOAT_SUB (register, 0x13a0, 8) , (register, 0x12a0, 8)
clip_line, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (register, 0x13a0, 8)
clip_line, (register, 0x13a0, 8) COPY (register, 0x1200, 8)
clip_line, (register, 0x13a8, 8) COPY (register, 0x1208, 8)
clip_line, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x12c0, 8)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1280, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1260, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1280, 8) , (register, 0x1260, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1280, 8) , (register, 0x1260, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
clip_line, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
clip_line, (register, 0x98, 1) COPY (unique, 0xc900, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x98, 4) INT_AND (register, 0x98, 4) , (register, 0x18, 4)
clip_line, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x98, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x98, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x98, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x200, 1) INT_LESS (register, 0x90, 4) , (register, 0xa0, 4)
clip_line, (register, 0x20b, 1) INT_SBORROW (register, 0x90, 4) , (register, 0xa0, 4)
clip_line, (unique, 0x28600, 4) INT_SUB (register, 0x90, 4) , (register, 0xa0, 4)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line,  ---  CBRANCH (ram, 0x404818, 8) , (register, 0x206, 1)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x13a0, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1220, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x13a0, 8) , (register, 0x1220, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x13a0, 8) , (register, 0x1220, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x4046fe, 8) , (unique, 0xc780, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59000, 1) INT_AND (register, 0x28, 1) , (register, 0x28, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line,  ---  CBRANCH (ram, 0x4046fe, 8) , (register, 0x206, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59000, 1) INT_AND (register, 0x98, 1) , (register, 0x98, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x0, 8) COPY (const, 0x4, 8)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x404720, 8) , (unique, 0xc680, 1)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1280, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (register, 0x1280, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1280, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x404870, 8) , (unique, 0xc780, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line,  ---  CBRANCH (ram, 0x404870, 8) , (register, 0x206, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x0, 4) INT_OR (register, 0x0, 4) , (const, 0x2, 4)
clip_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x1300, 8) COPY (register, 0x1280, 8)
clip_line, (register, 0x1308, 8) COPY (register, 0x1288, 8)
clip_line, (register, 0x12e0, 8) COPY (register, 0x13a0, 8)
clip_line, (register, 0x12e8, 8) COPY (register, 0x13a8, 8)
clip_line,  ---  BRANCH (ram, 0x404598, 8)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x58c00, 1) INT_AND (register, 0xa0, 1) , (const, 0x1, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x58c00, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x58c00, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line,  ---  CBRANCH (ram, 0x404890, 8) , (register, 0x206, 1)
clip_line, (register, 0x1280, 8) COPY (register, 0x1260, 8)
clip_line, (register, 0x1288, 8) COPY (register, 0x1268, 8)
clip_line, (register, 0x13a0, 8) COPY (register, 0x12e0, 8)
clip_line, (register, 0x13a8, 8) COPY (register, 0x12e8, 8)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x98, 4) INT_XOR (register, 0x98, 4) , (register, 0x98, 4)
clip_line, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x98, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x98, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x98, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x200, 1) INT_LESS (register, 0x90, 4) , (register, 0xa0, 4)
clip_line, (register, 0x20b, 1) INT_SBORROW (register, 0x90, 4) , (register, 0xa0, 4)
clip_line, (unique, 0x28600, 4) INT_SUB (register, 0x90, 4) , (register, 0xa0, 4)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x12c0, 8)
clip_line, (register, 0x13a0, 8) FLOAT_SUB (register, 0x13a0, 8) , (register, 0x12a0, 8)
clip_line, (register, 0x13a0, 8) FLOAT_MULT (register, 0x13a0, 8) , (register, 0x1280, 8)
clip_line, (register, 0x1280, 8) COPY (register, 0x1300, 8)
clip_line, (register, 0x1288, 8) COPY (register, 0x1308, 8)
clip_line, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x12c0, 8)
clip_line, (register, 0x13a0, 8) FLOAT_DIV (register, 0x13a0, 8) , (register, 0x1280, 8)
clip_line, (register, 0x1280, 8) COPY (register, 0x1260, 8)
clip_line, (register, 0x1288, 8) COPY (register, 0x1268, 8)
clip_line, (register, 0x13a0, 8) FLOAT_ADD (register, 0x13a0, 8) , (register, 0x12a0, 8)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x404788, 8) , (unique, 0xc680, 1)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x13a0, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1220, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x13a0, 8) , (register, 0x1220, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x13a0, 8) , (register, 0x1220, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x12c0, 8) COPY (register, 0x1280, 8)
clip_line, (register, 0x12c8, 8) COPY (register, 0x1288, 8)
clip_line, (register, 0x12a0, 8) COPY (register, 0x13a0, 8)
clip_line, (register, 0x12a8, 8) COPY (register, 0x13a8, 8)
clip_line, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x404603, 8) , (unique, 0xc780, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59000, 1) INT_AND (register, 0x28, 1) , (register, 0x28, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x90, 8) COPY (const, 0x4, 8)
clip_line,  ---  CBRANCH (ram, 0x404603, 8) , (register, 0x206, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59000, 1) INT_AND (register, 0x98, 1) , (register, 0x98, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x404625, 8) , (unique, 0xc680, 1)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1280, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (register, 0x1280, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1280, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x404598, 8) , (unique, 0xc780, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x98, 4) COPY (register, 0x90, 4)
clip_line, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line, (register, 0xa0, 1) COPY (unique, 0xc680, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x98, 4) INT_OR (register, 0x98, 4) , (const, 0x2, 4)
clip_line, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x98, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x98, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x98, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59000, 1) INT_AND (register, 0xa0, 1) , (register, 0xa0, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
clip_line, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
clip_line,  ---  CBRANCH (ram, 0x404863, 8) , (unique, 0x27780, 1)
clip_line, (register, 0x90, 4) COPY (register, 0x98, 4)
clip_line,  ---  BRANCH (ram, 0x404598, 8)
clip_line, (register, 0x1300, 8) COPY (register, 0x1280, 8)
clip_line, (register, 0x1308, 8) COPY (register, 0x1288, 8)
clip_line, (register, 0x12e0, 8) COPY (register, 0x13a0, 8)
clip_line, (register, 0x12e8, 8) COPY (register, 0x13a8, 8)
clip_line,  ---  BRANCH (ram, 0x404598, 8)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
clip_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line,  ---  BRANCH (ram, 0x404717, 8)
clip_line, (register, 0x1280, 8) COPY (register, 0x1240, 8)
clip_line, (register, 0x1288, 8) COPY (register, 0x1248, 8)
clip_line, (register, 0x13a0, 8) COPY (register, 0x12e0, 8)
clip_line, (register, 0x13a8, 8) COPY (register, 0x12e8, 8)
clip_line, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x12c0, 8)
clip_line, (register, 0x13a0, 8) FLOAT_SUB (register, 0x13a0, 8) , (register, 0x12a0, 8)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1260, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (register, 0x1260, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1260, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x13a0, 8) FLOAT_MULT (register, 0x13a0, 8) , (register, 0x1280, 8)
clip_line, (register, 0x1280, 8) COPY (register, 0x1300, 8)
clip_line, (register, 0x1288, 8) COPY (register, 0x1308, 8)
clip_line, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
clip_line, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
clip_line, (register, 0x98, 1) COPY (unique, 0xc900, 1)
clip_line, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x12c0, 8)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x98, 4) INT_AND (register, 0x98, 4) , (register, 0x18, 4)
clip_line, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x98, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x98, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x98, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x13a0, 8) FLOAT_DIV (register, 0x13a0, 8) , (register, 0x1280, 8)
clip_line, (register, 0x1280, 8) COPY (register, 0x1240, 8)
clip_line, (register, 0x1288, 8) COPY (register, 0x1248, 8)
clip_line, (register, 0x13a0, 8) FLOAT_ADD (register, 0x13a0, 8) , (register, 0x12a0, 8)
clip_line,  ---  BRANCH (ram, 0x40477f, 8)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x90, 4) INT_XOR (register, 0x90, 4) , (register, 0x90, 4)
clip_line, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x90, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x90, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x90, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line,  ---  BRANCH (ram, 0x40461c, 8)
clip_line, (register, 0x0, 8) COPY (const, 0x3, 8)
clip_line,  ---  BRANCH (ram, 0x40466b, 8)
clip_line, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
clip_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
clip_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
clip_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
clip_line, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
clip_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
clip_line, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
clip_line, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
clip_line,  ---  RETURN (register, 0x288, 8)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x0, 4) INT_OR (register, 0x0, 4) , (const, 0x4, 4)
clip_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line,  ---  BRANCH (ram, 0x40469d, 8)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1360, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (register, 0x1360, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1360, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x40457d, 8) , (unique, 0xc780, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x98, 4) COPY (register, 0x0, 4)
clip_line, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line, (register, 0xa0, 1) COPY (unique, 0xc680, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x98, 4) INT_OR (register, 0x98, 4) , (const, 0x2, 4)
clip_line, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x98, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x98, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x98, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59000, 1) INT_AND (register, 0xa0, 1) , (register, 0xa0, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
clip_line, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
clip_line,  ---  CBRANCH (ram, 0x404930, 8) , (unique, 0x27780, 1)
clip_line, (register, 0x0, 4) COPY (register, 0x98, 4)
clip_line,  ---  BRANCH (ram, 0x40457d, 8)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1320, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1320, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1320, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x40494d, 8) , (unique, 0xc780, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x0, 8) COPY (const, 0x8, 8)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x404567, 8) , (unique, 0xc680, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
clip_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line,  ---  BRANCH (ram, 0x404567, 8)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1380, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (register, 0x1380, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1380, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x40454e, 8) , (unique, 0xc780, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x0, 4) COPY (register, 0x90, 4)
clip_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line, (register, 0x98, 1) COPY (unique, 0xc680, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x0, 4) INT_OR (register, 0x0, 4) , (const, 0x2, 4)
clip_line, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59000, 1) INT_AND (register, 0x98, 1) , (register, 0x98, 1)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
clip_line, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
clip_line, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
clip_line,  ---  CBRANCH (ram, 0x404977, 8) , (unique, 0x27780, 1)
clip_line, (register, 0x90, 4) COPY (register, 0x0, 4)
clip_line,  ---  BRANCH (ram, 0x40454e, 8)
clip_line, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
clip_line, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1340, 8)
clip_line, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
clip_line, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1340, 8)
clip_line, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
clip_line, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1340, 8)
clip_line, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x204, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x207, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x404996, 8) , (unique, 0xc780, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
clip_line, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line, (register, 0x90, 8) COPY (const, 0x8, 8)
clip_line, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
clip_line,  ---  CBRANCH (ram, 0x40452e, 8) , (unique, 0xc680, 1)
clip_line, (register, 0x200, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x20b, 1) COPY (const, 0x0, 1)
clip_line, (register, 0x90, 4) INT_XOR (register, 0x90, 4) , (register, 0x90, 4)
clip_line, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
clip_line, (register, 0x207, 1) INT_SLESS (register, 0x90, 4) , (const, 0x0, 4)
clip_line, (register, 0x206, 1) INT_EQUAL (register, 0x90, 4) , (const, 0x0, 4)
clip_line, (unique, 0x12c00, 4) INT_AND (register, 0x90, 4) , (const, 0xff, 4)
clip_line, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
clip_line, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
clip_line, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
clip_line,  ---  BRANCH (ram, 0x40452e, 8)
array_bounds, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
array_bounds, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
array_bounds,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
array_bounds, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
array_bounds, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
array_bounds,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
array_bounds, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
array_bounds, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
array_bounds,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
array_bounds, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
array_bounds, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
array_bounds,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
array_bounds, (unique, 0xe780, 8) COPY (register, 0x28, 8)
array_bounds, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
array_bounds,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
array_bounds, (unique, 0xe780, 8) COPY (register, 0x18, 8)
array_bounds, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
array_bounds,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
array_bounds, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0xc8, 8)
array_bounds, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0xc8, 8)
array_bounds, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0xc8, 8)
array_bounds, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
array_bounds, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
array_bounds, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x110, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
array_bounds, (register, 0x18, 4) COPY (unique, 0xbc80, 4)
array_bounds, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x118, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
array_bounds, (register, 0xa0, 4) COPY (unique, 0xbc80, 4)
array_bounds, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x120, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
array_bounds, (register, 0x28, 4) COPY (unique, 0xbc80, 4)
array_bounds, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x128, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
array_bounds, (register, 0xa8, 4) COPY (unique, 0xbc80, 4)
array_bounds, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404a27, 8) , (unique, 0xc680, 1)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x4049de, 8) , (unique, 0xc680, 1)
array_bounds, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (unique, 0xbe00, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x4049ea, 8) , (unique, 0xc680, 1)
array_bounds, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (unique, 0xbe00, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x4049ff, 8) , (unique, 0xc680, 1)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x100, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
array_bounds, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)
array_bounds, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1208, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5280, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0xa8, 4) , (register, 0xa8, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404a15, 8) , (unique, 0xc680, 1)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x108, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
array_bounds, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)
array_bounds, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1208, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5280, 8)
array_bounds, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0xc8, 8)
array_bounds, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0xc8, 8)
array_bounds, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0xc8, 8)
array_bounds, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
array_bounds, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
array_bounds, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
array_bounds, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
array_bounds, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
array_bounds, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
array_bounds, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
array_bounds, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
array_bounds, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
array_bounds, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
array_bounds, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
array_bounds, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
array_bounds, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
array_bounds, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
array_bounds, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
array_bounds, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
array_bounds,  ---  RETURN (register, 0x288, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404d12, 8) , (unique, 0xc680, 1)
array_bounds, (register, 0x1240, 16) INT_XOR (register, 0x1240, 16) , (register, 0x1240, 16)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (register, 0x12e0, 8) COPY (ram, 0x411218, 8)
array_bounds, (register, 0x12e8, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds,  ---  CBRANCH (ram, 0x404d33, 8) , (register, 0x206, 1)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x100, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
array_bounds, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
array_bounds, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1268, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds,  ---  CBRANCH (ram, 0x404a89, 8) , (register, 0x206, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1248, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
array_bounds, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1260, 8)
array_bounds, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
array_bounds, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (register, 0x1260, 8)
array_bounds, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
array_bounds, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1260, 8)
array_bounds, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x204, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x207, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404a89, 8) , (unique, 0xc780, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1208, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1268, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (register, 0x12a0, 16) INT_XOR (register, 0x12a0, 16) , (register, 0x12a0, 16)
array_bounds,  ---  CBRANCH (ram, 0x404d50, 8) , (register, 0x206, 1)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)
array_bounds, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1228, 8) COPY (const, 0x0, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0xa8, 4) , (register, 0xa8, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (register, 0x12c0, 16) INT_XOR (register, 0x12c0, 16) , (register, 0x12c0, 16)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds,  ---  CBRANCH (ram, 0x404d6d, 8) , (register, 0x206, 1)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x108, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
array_bounds, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
array_bounds, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1228, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds,  ---  CBRANCH (ram, 0x404ae9, 8) , (register, 0x206, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1268, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1260, 8)
array_bounds, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1220, 8)
array_bounds, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
array_bounds, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1260, 8) , (register, 0x1220, 8)
array_bounds, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
array_bounds, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1260, 8) , (register, 0x1220, 8)
array_bounds, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x204, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x207, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404ae9, 8) , (unique, 0xc780, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1208, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1248, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (register, 0x1280, 16) INT_XOR (register, 0x1280, 16) , (register, 0x1280, 16)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbd80, 8) COPY (register, 0x88, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbd80, 8) COPY (register, 0x80, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x6c, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbc80, 4) COPY (register, 0x8, 4)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbc80, 4) COPY (register, 0x10, 4)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbc80, 4) COPY (register, 0x30, 4)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
array_bounds, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
array_bounds, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
array_bounds,  ---  CBRANCH (ram, 0x404f0c, 8) , (unique, 0xce80, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x90, 4) COPY (unique, 0xbc80, 4)
array_bounds, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1208, 8) COPY (const, 0x0, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0xb8, 4) INT_XOR (register, 0xb8, 4) , (register, 0xb8, 4)
array_bounds, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (register, 0xb8, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (register, 0xb8, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)
array_bounds, (register, 0xb0, 8) COPY (unique, 0x3100, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
array_bounds, (register, 0x1220, 8) COPY (register, 0x1200, 8)
array_bounds, (register, 0x1228, 8) COPY (register, 0x1208, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds,  ---  CBRANCH (ram, 0x404d01, 8) , (register, 0x206, 1)
array_bounds, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
array_bounds, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
array_bounds, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0xffffffffffffffa8, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
array_bounds, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1308, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0xffffffffffffffa0, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
array_bounds, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1328, 8) COPY (const, 0x0, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0xb8, 4) , (register, 0xb8, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds,  ---  CBRANCH (ram, 0x404da0, 8) , (register, 0x206, 1)
array_bounds, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0xffffffffffffffd8, 8)
array_bounds, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
array_bounds, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
array_bounds, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds,  ---  CBRANCH (ram, 0x404da0, 8) , (register, 0x206, 1)
array_bounds, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0xfffffffffffffff0, 8)
array_bounds, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
array_bounds, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
array_bounds, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
array_bounds, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1248, 8) COPY (const, 0x0, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
array_bounds, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
array_bounds,  ---  CBRANCH (ram, 0x404d90, 8) , (unique, 0xce80, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
array_bounds, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (unique, 0x5280, 8)
array_bounds, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (unique, 0x5280, 8)
array_bounds, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x204, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x207, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x80, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1300, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1320, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x90, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x98, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
array_bounds,  ---  CBRANCH (ram, 0x404e38, 8) , (register, 0x200, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (register, 0x88, 4) COPY (register, 0xa0, 4)
array_bounds, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
array_bounds, (register, 0x80, 4) COPY (register, 0x18, 4)
array_bounds, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1300, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1320, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
array_bounds, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
array_bounds,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
array_bounds, (unique, 0xe780, 8) COPY (register, 0x28, 8)
array_bounds, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
array_bounds,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1268, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x98, 8) , (register, 0x20, 8)
array_bounds, (register, 0x8, 8) COPY (unique, 0x3c80, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1248, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x90, 8) , (register, 0x20, 8)
array_bounds, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1228, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0xa8, 8) , (register, 0x20, 8)
array_bounds, (register, 0x30, 8) COPY (unique, 0x3c80, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1208, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0xa0, 8) , (register, 0x20, 8)
array_bounds, (register, 0x38, 8) COPY (unique, 0x3c80, 8)
array_bounds, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
array_bounds,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x404c0a, 8)
array_bounds,  ---  CALL (ram, 0x4044f0, 8)
array_bounds, (register, 0x10, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
array_bounds, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
array_bounds, (register, 0x8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
array_bounds, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x58800, 1) INT_AND (register, 0x0, 1) , (const, 0x1, 1)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x58800, 1) , (const, 0x0, 1)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x58800, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x12c00, 1) INT_AND (unique, 0x58800, 1) , (const, 0xff, 1)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x12e8, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x12c8, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x12a8, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1288, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1328, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1308, 8) COPY (const, 0x0, 8)
array_bounds,  ---  CBRANCH (ram, 0x404cd6, 8) , (register, 0x206, 1)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x90, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
array_bounds, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1208, 8) COPY (const, 0x0, 8)
array_bounds, (register, 0x10, 8) COPY (const, 0x2, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0xa0, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x98, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
array_bounds, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1208, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0xb0, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x80, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
array_bounds, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1208, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0xa8, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
array_bounds, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1208, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0xb8, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
array_bounds, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404c9d, 8) , (unique, 0xc680, 1)
array_bounds, (unique, 0x3d00, 8) INT_ADD (const, 0xa0, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x3d80, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
array_bounds, (unique, 0x3e80, 8) INT_ADD (unique, 0x3d00, 8) , (unique, 0x3d80, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8)
array_bounds, (unique, 0x79000, 8) COPY (unique, 0x5280, 8)
array_bounds, (unique, 0x79080, 1) FLOAT_LESS (register, 0x12e0, 8) , (unique, 0x79000, 8)
array_bounds,  ---  CBRANCH (ram, 0x404c9d, 8) , (unique, 0x79080, 1)
array_bounds, (register, 0x12e0, 8) COPY (unique, 0x79000, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404cab, 8) , (unique, 0xc680, 1)
array_bounds, (unique, 0x3d00, 8) INT_ADD (const, 0xb0, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x3d80, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
array_bounds, (unique, 0x3e80, 8) INT_ADD (unique, 0x3d00, 8) , (unique, 0x3d80, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8)
array_bounds, (unique, 0x79000, 8) COPY (unique, 0x5280, 8)
array_bounds, (unique, 0x79080, 1) FLOAT_LESS (register, 0x12c0, 8) , (unique, 0x79000, 8)
array_bounds,  ---  CBRANCH (ram, 0x404cab, 8) , (unique, 0x79080, 1)
array_bounds, (register, 0x12c0, 8) COPY (unique, 0x79000, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404cb8, 8) , (unique, 0xc680, 1)
array_bounds, (unique, 0x3d00, 8) INT_ADD (const, 0xa0, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x3d80, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
array_bounds, (unique, 0x3e80, 8) INT_ADD (unique, 0x3d00, 8) , (unique, 0x3d80, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8)
array_bounds, (unique, 0x78b00, 8) COPY (unique, 0x5280, 8)
array_bounds, (unique, 0x78b80, 1) FLOAT_LESS (unique, 0x78b00, 8) , (register, 0x12a0, 8)
array_bounds,  ---  CBRANCH (ram, 0x404cb8, 8) , (unique, 0x78b80, 1)
array_bounds, (register, 0x12a0, 8) COPY (unique, 0x78b00, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0xa8, 4) , (register, 0xa8, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404cc6, 8) , (unique, 0xc680, 1)
array_bounds, (unique, 0x3d00, 8) INT_ADD (const, 0xb0, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x3d80, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
array_bounds, (unique, 0x3e80, 8) INT_ADD (unique, 0x3d00, 8) , (unique, 0x3d80, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8)
array_bounds, (unique, 0x78b00, 8) COPY (unique, 0x5280, 8)
array_bounds, (unique, 0x78b80, 1) FLOAT_LESS (unique, 0x78b00, 8) , (register, 0x1280, 8)
array_bounds,  ---  CBRANCH (ram, 0x404cc6, 8) , (unique, 0x78b80, 1)
array_bounds, (register, 0x1280, 8) COPY (unique, 0x78b00, 8)
array_bounds, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x1, 8)
array_bounds, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x1, 8)
array_bounds, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
array_bounds, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
array_bounds, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
array_bounds, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (register, 0x0, 4)
array_bounds, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (register, 0x0, 4)
array_bounds, (unique, 0x28600, 4) INT_SUB (register, 0x10, 4) , (register, 0x0, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
array_bounds, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
array_bounds,  ---  CBRANCH (ram, 0x404c90, 8) , (unique, 0xd080, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
array_bounds, (register, 0x200, 1) INT_CARRY (register, 0xb8, 4) , (const, 0x1, 4)
array_bounds, (register, 0x20b, 1) INT_SCARRY (register, 0xb8, 4) , (const, 0x1, 4)
array_bounds, (register, 0xb8, 4) INT_ADD (register, 0xb8, 4) , (const, 0x1, 4)
array_bounds, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (register, 0xb8, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (register, 0xb8, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (register, 0x200, 1) INT_CARRY (register, 0xb0, 8) , (const, 0x70, 8)
array_bounds, (register, 0x20b, 1) INT_SCARRY (register, 0xb0, 8) , (const, 0x70, 8)
array_bounds, (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (const, 0x70, 8)
array_bounds, (register, 0x207, 1) INT_SLESS (register, 0xb0, 8) , (const, 0x0, 8)
array_bounds, (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8)
array_bounds, (unique, 0x12c00, 8) INT_AND (register, 0xb0, 8) , (const, 0xff, 8)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x200, 1) INT_LESS (register, 0xb8, 4) , (unique, 0x5200, 4)
array_bounds, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 4) , (unique, 0x5200, 4)
array_bounds, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (unique, 0x28b00, 4) INT_SUB (register, 0xb8, 4) , (unique, 0x5200, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x28b00, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x28b00, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x28b00, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds,  ---  CBRANCH (ram, 0x404f04, 8) , (register, 0x206, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x90, 4) COPY (unique, 0xbc80, 4)
array_bounds, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
array_bounds, (register, 0x1220, 8) COPY (register, 0x1320, 8)
array_bounds, (register, 0x1228, 8) COPY (register, 0x1328, 8)
array_bounds, (register, 0x1200, 8) COPY (register, 0x1300, 8)
array_bounds, (register, 0x1208, 8) COPY (register, 0x1308, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404b38, 8) , (unique, 0xc680, 1)
array_bounds, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0xffffffffffffffa0, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
array_bounds, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1308, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0xffffffffffffffa8, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
array_bounds, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1328, 8) COPY (const, 0x0, 8)
array_bounds,  ---  BRANCH (ram, 0x404b44, 8)
array_bounds, (register, 0x1260, 16) INT_XOR (register, 0x1260, 16) , (register, 0x1260, 16)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)
array_bounds, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1248, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (register, 0x12e0, 8) COPY (register, 0x1260, 8)
array_bounds, (register, 0x12e8, 8) COPY (register, 0x1268, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404a4f, 8) , (unique, 0xc680, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1248, 8) COPY (const, 0x0, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (register, 0x12a0, 8) COPY (ram, 0x411220, 8)
array_bounds, (register, 0x12a8, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404a96, 8) , (unique, 0xc680, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1248, 8) COPY (const, 0x0, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0xa8, 4) , (register, 0xa8, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (register, 0x12c0, 8) COPY (ram, 0x411218, 8)
array_bounds, (register, 0x12c8, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404aae, 8) , (unique, 0xc680, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1228, 8) COPY (const, 0x0, 8)
array_bounds, (register, 0x1280, 8) COPY (ram, 0x411220, 8)
array_bounds, (register, 0x1288, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds,  ---  BRANCH (ram, 0x404aed, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1268, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1260, 8)
array_bounds, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
array_bounds, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
array_bounds, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1260, 8) , (register, 0x1240, 8)
array_bounds, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
array_bounds, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1260, 8) , (register, 0x1240, 8)
array_bounds, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x204, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x207, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404b6c, 8) , (unique, 0xc780, 1)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x80, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1300, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1320, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x90, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x98, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds,  ---  CBRANCH (ram, 0x404dd7, 8) , (register, 0x206, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1300, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
array_bounds, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1300, 8) , (unique, 0x5280, 8)
array_bounds, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1300, 8) , (unique, 0x5280, 8)
array_bounds, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x204, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x207, 1) COPY (const, 0x0, 1)
array_bounds,  ---  CBRANCH (ram, 0x404cd6, 8) , (register, 0x200, 1)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds,  ---  CBRANCH (ram, 0x404dec, 8) , (register, 0x206, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1248, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
array_bounds, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1300, 8)
array_bounds, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
array_bounds, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (register, 0x1300, 8)
array_bounds, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
array_bounds, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1300, 8)
array_bounds, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x204, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x207, 1) COPY (const, 0x0, 1)
array_bounds,  ---  CBRANCH (ram, 0x404cd6, 8) , (register, 0x200, 1)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds,  ---  CBRANCH (ram, 0x404dfe, 8) , (register, 0x206, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1320, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
array_bounds, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1320, 8) , (unique, 0x5280, 8)
array_bounds, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1320, 8) , (unique, 0x5280, 8)
array_bounds, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x204, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x207, 1) COPY (const, 0x0, 1)
array_bounds,  ---  CBRANCH (ram, 0x404cd6, 8) , (register, 0x200, 1)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0xa8, 4) , (register, 0xa8, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds,  ---  CBRANCH (ram, 0x404e14, 8) , (register, 0x206, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1248, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
array_bounds, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1320, 8)
array_bounds, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
array_bounds, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (register, 0x1320, 8)
array_bounds, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
array_bounds, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1320, 8)
array_bounds, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x204, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x207, 1) COPY (const, 0x0, 1)
array_bounds,  ---  CBRANCH (ram, 0x404cd6, 8) , (register, 0x200, 1)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0xa0, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1300, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
array_bounds, (register, 0x10, 8) COPY (const, 0x1, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0xb0, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1320, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
array_bounds,  ---  BRANCH (ram, 0x404c87, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x6c, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
array_bounds, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds,  ---  CBRANCH (ram, 0x404dc6, 8) , (register, 0x206, 1)
array_bounds, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)
array_bounds, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x2, 4)
array_bounds, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds,  ---  CBRANCH (ram, 0x404b9e, 8) , (register, 0x206, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (register, 0x88, 4) COPY (register, 0xa0, 4)
array_bounds, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
array_bounds, (register, 0x80, 4) COPY (register, 0x18, 4)
array_bounds, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1300, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1320, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
array_bounds, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
array_bounds, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
array_bounds,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
array_bounds, (unique, 0xe780, 8) COPY (register, 0x28, 8)
array_bounds, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
array_bounds,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1268, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x98, 8) , (register, 0x20, 8)
array_bounds, (register, 0x8, 8) COPY (unique, 0x3c80, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1248, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x90, 8) , (register, 0x20, 8)
array_bounds, (register, 0x10, 8) COPY (unique, 0x3c80, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1228, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0xa8, 8) , (register, 0x20, 8)
array_bounds, (register, 0x30, 8) COPY (unique, 0x3c80, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1208, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0xa0, 8) , (register, 0x20, 8)
array_bounds, (register, 0x38, 8) COPY (unique, 0x3c80, 8)
array_bounds, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
array_bounds,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x404eb5, 8)
array_bounds,  ---  CALL (ram, 0x4044f0, 8)
array_bounds, (register, 0x30, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
array_bounds, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
array_bounds, (register, 0x38, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
array_bounds, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x58800, 1) INT_AND (register, 0x0, 1) , (const, 0x1, 1)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x58800, 1) , (const, 0x0, 1)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x58800, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x12c00, 1) INT_AND (unique, 0x58800, 1) , (const, 0xff, 1)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x12e8, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x12c8, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x12a8, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1288, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1328, 8) COPY (const, 0x0, 8)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
array_bounds, (register, 0x1308, 8) COPY (const, 0x0, 8)
array_bounds,  ---  CBRANCH (ram, 0x404cd6, 8) , (register, 0x206, 1)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x6, 4)
array_bounds, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x6, 4)
array_bounds, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x6, 4)
array_bounds, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x6, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404c3a, 8) , (unique, 0xc680, 1)
array_bounds, (register, 0x200, 1) INT_CARRY (register, 0xb8, 4) , (const, 0x1, 4)
array_bounds, (register, 0x20b, 1) INT_SCARRY (register, 0xb8, 4) , (const, 0x1, 4)
array_bounds, (register, 0xb8, 4) INT_ADD (register, 0xb8, 4) , (const, 0x1, 4)
array_bounds, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (register, 0xb8, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (register, 0xb8, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (register, 0x200, 1) INT_CARRY (register, 0xb0, 8) , (const, 0x70, 8)
array_bounds, (register, 0x20b, 1) INT_SCARRY (register, 0xb0, 8) , (const, 0x70, 8)
array_bounds, (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (const, 0x70, 8)
array_bounds, (register, 0x207, 1) INT_SLESS (register, 0xb0, 8) , (const, 0x0, 8)
array_bounds, (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8)
array_bounds, (unique, 0x12c00, 8) INT_AND (register, 0xb0, 8) , (const, 0xff, 8)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
array_bounds, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x200, 1) INT_LESS (register, 0xb8, 4) , (unique, 0x5200, 4)
array_bounds, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 4) , (unique, 0x5200, 4)
array_bounds, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (unique, 0x28b00, 4) INT_SUB (register, 0xb8, 4) , (unique, 0x5200, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x28b00, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x28b00, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x28b00, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404ce9, 8) , (unique, 0xc680, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
array_bounds, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404f1c, 8) , (unique, 0xc680, 1)
array_bounds, (register, 0x1280, 16) INT_XOR (register, 0x1280, 16) , (register, 0x1280, 16)
array_bounds, (register, 0x12a0, 8) COPY (register, 0x1280, 8)
array_bounds, (register, 0x12a8, 8) COPY (register, 0x1288, 8)
array_bounds, (register, 0x12c0, 8) COPY (register, 0x1280, 8)
array_bounds, (register, 0x12c8, 8) COPY (register, 0x1288, 8)
array_bounds, (register, 0x12e0, 8) COPY (register, 0x1280, 8)
array_bounds, (register, 0x12e8, 8) COPY (register, 0x1288, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404f29, 8) , (unique, 0xc680, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5280, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404f37, 8) , (unique, 0xc680, 1)
array_bounds, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
array_bounds, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5280, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404f47, 8) , (unique, 0xc680, 1)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x100, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
array_bounds, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5280, 8)
array_bounds, (register, 0x200, 1) COPY (const, 0x0, 1)
array_bounds, (register, 0x20b, 1) COPY (const, 0x0, 1)
array_bounds, (unique, 0x59200, 4) INT_AND (register, 0xa8, 4) , (register, 0xa8, 4)
array_bounds, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
array_bounds, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
array_bounds, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
array_bounds, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
array_bounds, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
array_bounds, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
array_bounds,  ---  CBRANCH (ram, 0x404a15, 8) , (unique, 0xc680, 1)
array_bounds, (unique, 0x3c80, 8) INT_ADD (const, 0x108, 8) , (register, 0x20, 8)
array_bounds, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
array_bounds, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
array_bounds, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
array_bounds,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5280, 8)
array_bounds,  ---  BRANCH (ram, 0x404a15, 8)
skip_some_whitespace, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
skip_some_whitespace, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
skip_some_whitespace,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
skip_some_whitespace, (register, 0xa0, 8) COPY (register, 0x38, 8)
skip_some_whitespace, (unique, 0xe780, 8) COPY (register, 0x28, 8)
skip_some_whitespace, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
skip_some_whitespace,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
skip_some_whitespace, (register, 0x200, 1) COPY (const, 0x0, 1)
skip_some_whitespace, (register, 0x20b, 1) COPY (const, 0x0, 1)
skip_some_whitespace, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
skip_some_whitespace, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
skip_some_whitespace, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
skip_some_whitespace, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
skip_some_whitespace, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
skip_some_whitespace, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0xe780, 8) COPY (register, 0x18, 8)
skip_some_whitespace, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
skip_some_whitespace,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
skip_some_whitespace,  ---  BRANCH (ram, 0x404f9c, 8)
skip_some_whitespace, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xffffffff, 4)
skip_some_whitespace, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xffffffff, 4)
skip_some_whitespace, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0xffffffff, 4)
skip_some_whitespace, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
skip_some_whitespace, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
skip_some_whitespace, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
skip_some_whitespace, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
skip_some_whitespace,  ---  CBRANCH (ram, 0x404fb0, 8) , (register, 0x206, 1)
skip_some_whitespace, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
skip_some_whitespace,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x404f8a, 8)
skip_some_whitespace,  ---  CALL (ram, 0x401910, 8)
skip_some_whitespace, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
skip_some_whitespace, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
skip_some_whitespace, (register, 0x10, 4) INT_ZEXT (register, 0x18, 1)
skip_some_whitespace, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
skip_some_whitespace, (unique, 0x3880, 8) INT_ADD (const, 0x1, 8) , (register, 0x0, 8)
skip_some_whitespace, (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8)
skip_some_whitespace, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
skip_some_whitespace, (register, 0x200, 1) COPY (const, 0x0, 1)
skip_some_whitespace, (register, 0x20b, 1) COPY (const, 0x0, 1)
skip_some_whitespace, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)
skip_some_whitespace, (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1)
skip_some_whitespace, (register, 0x207, 1) INT_SLESS (unique, 0x58c00, 1) , (const, 0x0, 1)
skip_some_whitespace, (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0x12c00, 1) INT_AND (unique, 0x58c00, 1) , (const, 0xff, 1)
skip_some_whitespace, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
skip_some_whitespace, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
skip_some_whitespace, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
skip_some_whitespace,  ---  CBRANCH (ram, 0x404fc0, 8) , (register, 0x206, 1)
skip_some_whitespace, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x1, 4)
skip_some_whitespace, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x1, 4)
skip_some_whitespace, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x1, 4)
skip_some_whitespace, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
skip_some_whitespace, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
skip_some_whitespace, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
skip_some_whitespace, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
skip_some_whitespace, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
skip_some_whitespace, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
skip_some_whitespace, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
skip_some_whitespace,  ---  CBRANCH (ram, 0x404fc0, 8) , (unique, 0xd080, 1)
skip_some_whitespace, (register, 0x38, 8) COPY (register, 0xa0, 8)
skip_some_whitespace, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
skip_some_whitespace,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x404fa4, 8)
skip_some_whitespace,  ---  CALL (ram, 0x4018c0, 8)
skip_some_whitespace, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xa, 4)
skip_some_whitespace, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xa, 4)
skip_some_whitespace, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0xa, 4)
skip_some_whitespace, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
skip_some_whitespace, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
skip_some_whitespace, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
skip_some_whitespace, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
skip_some_whitespace, (register, 0x18, 4) COPY (register, 0x0, 4)
skip_some_whitespace, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
skip_some_whitespace, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
skip_some_whitespace,  ---  CBRANCH (ram, 0x404f80, 8) , (unique, 0xc680, 1)
skip_some_whitespace, (register, 0x200, 1) INT_CARRY (register, 0x28, 4) , (const, 0x1, 4)
skip_some_whitespace, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x1, 4)
skip_some_whitespace, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
skip_some_whitespace, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
skip_some_whitespace, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
skip_some_whitespace, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
skip_some_whitespace, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
skip_some_whitespace, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
skip_some_whitespace,  ---  BRANCH (ram, 0x404f85, 8)
skip_some_whitespace, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
skip_some_whitespace, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
skip_some_whitespace, (register, 0x200, 1) COPY (const, 0x0, 1)
skip_some_whitespace, (register, 0x20b, 1) COPY (const, 0x0, 1)
skip_some_whitespace, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
skip_some_whitespace, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
skip_some_whitespace, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
skip_some_whitespace, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
skip_some_whitespace, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
skip_some_whitespace, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
skip_some_whitespace, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
skip_some_whitespace, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
skip_some_whitespace, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
skip_some_whitespace, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
skip_some_whitespace, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
skip_some_whitespace, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
skip_some_whitespace,  ---  RETURN (register, 0x288, 8)
skip_some_whitespace, (register, 0x30, 8) COPY (register, 0xa0, 8)
skip_some_whitespace, (register, 0x38, 4) COPY (register, 0x18, 4)
skip_some_whitespace, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
skip_some_whitespace, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
skip_some_whitespace,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x404fca, 8)
skip_some_whitespace,  ---  CALL (ram, 0x401880, 8)
skip_some_whitespace, (register, 0x200, 1) COPY (const, 0x0, 1)
skip_some_whitespace, (register, 0x20b, 1) COPY (const, 0x0, 1)
skip_some_whitespace, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
skip_some_whitespace, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
skip_some_whitespace, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
skip_some_whitespace, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
skip_some_whitespace, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
skip_some_whitespace, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
skip_some_whitespace, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x2, 4)
skip_some_whitespace, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x2, 4)
skip_some_whitespace, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x2, 4)
skip_some_whitespace, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
skip_some_whitespace, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
skip_some_whitespace, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
skip_some_whitespace, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
skip_some_whitespace, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
skip_some_whitespace, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
skip_some_whitespace, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
skip_some_whitespace, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
skip_some_whitespace, (register, 0x0, 1) COPY (register, 0x206, 1)
skip_some_whitespace, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
skip_some_whitespace, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
skip_some_whitespace, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
skip_some_whitespace, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
skip_some_whitespace, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
skip_some_whitespace, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
skip_some_whitespace,  ---  RETURN (register, 0x288, 8)
read_point, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_point, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_point, (register, 0xa0, 8) COPY (register, 0x38, 8)
read_point, (unique, 0xe780, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_point, (unique, 0xe780, 8) COPY (register, 0x18, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_point, (register, 0x18, 8) COPY (register, 0x30, 8)
read_point, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x38, 8)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x38, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x38, 8)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
read_point, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x2c, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x28, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x3c, 8)
read_point, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x38, 8)
read_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x40, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x48, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x48, 8)
read_point, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x40, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x58, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x50, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x50, 8)
read_point, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x58, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x60, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8)
read_point, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x68, 8)
read_point, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x5, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x5, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x5, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x0, 1) COPY (register, 0x206, 1)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x14, 8)
read_point, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
read_point, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x4, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x4, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x4, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x4051b0, 8) , (register, 0x206, 1)
read_point, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
read_point, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
read_point,  ---  CBRANCH (ram, 0x4050e0, 8) , (unique, 0xc900, 1)
read_point, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x1, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x1, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x1, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x405290, 8) , (register, 0x200, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0xa0, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0xa0, 8)
read_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0xa8, 8) COPY (unique, 0xbd80, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x4053e0, 8) , (register, 0x206, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0xa0, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x2, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x2, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x2, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0xa0, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0xa0, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
read_point,  ---  CBRANCH (ram, 0x405418, 8) , (register, 0x206, 1)
read_point, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x1, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x1, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x1, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x4056c0, 8) , (register, 0x206, 1)
read_point, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x3, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x3, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x3, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x405740, 8) , (register, 0x206, 1)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
read_point, (register, 0x38, 8) COPY (unique, 0x3100, 8)
read_point, (register, 0x8, 8) COPY (register, 0xa8, 8)
read_point, (register, 0x10, 8) COPY (const, 0x1, 8)
read_point, (register, 0x30, 8) COPY (const, 0x8, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4050b4, 8)
read_point,  ---  CALL (ram, 0x4019b0, 8)
read_point, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x405703, 8) , (register, 0x206, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0xa0, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x98, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x4057cf, 8) , (register, 0x206, 1)
read_point, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
read_point, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
read_point, (register, 0x0, 8) COPY (const, 0x1, 8)
read_point, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x38, 8)
read_point, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x38, 8)
read_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x38, 8)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
read_point, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_point, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_point, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_point, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_point, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  RETURN (register, 0x288, 8)
read_point, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x5, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x5, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x5, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x405290, 8) , (unique, 0xc680, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0xa0, 8)
read_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4050f6, 8)
read_point,  ---  CALL (ram, 0x404f70, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x405198, 8) , (unique, 0xc680, 1)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405106, 8)
read_point,  ---  CALL (ram, 0x401a80, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x4050d0, 8) , (unique, 0xc680, 1)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405112, 8)
read_point,  ---  CALL (ram, 0x4018c0, 8)
read_point, (register, 0x30, 8) COPY (register, 0x28, 8)
read_point, (register, 0xa8, 4) COPY (register, 0x0, 4)
read_point, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
read_point, (register, 0x38, 4) COPY (register, 0x0, 4)
read_point, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40511f, 8)
read_point,  ---  CALL (ram, 0x401880, 8)
read_point, (register, 0x200, 1) INT_LESS (register, 0xa8, 4) , (const, 0x23, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0xa8, 4) , (const, 0x23, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0xa8, 4) , (const, 0x23, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x405882, 8) , (unique, 0xc680, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
read_point, (register, 0x8, 8) COPY (unique, 0x3800, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
read_point, (register, 0x10, 8) COPY (unique, 0x3800, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x30, 8) COPY (const, 0x411272, 8)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405142, 8)
read_point,  ---  CALL (ram, 0x401750, 8)
read_point, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x2, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x4057f3, 8) , (register, 0x206, 1)
read_point, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
read_point, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x1f, 8) , (register, 0x20, 8)
read_point, (register, 0x38, 8) COPY (unique, 0x3800, 8)
read_point, (register, 0x8, 8) COPY (register, 0x28, 8)
read_point, (register, 0x10, 8) COPY (const, 0x1, 8)
read_point, (register, 0x30, 8) COPY (const, 0x1, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405167, 8)
read_point,  ---  CALL (ram, 0x4019b0, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
read_point, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
read_point,  ---  CBRANCH (ram, 0x4050d0, 8) , (unique, 0xce80, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x1f, 8) , (register, 0x20, 8)
read_point, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xa, 1)
read_point, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xa, 1)
read_point, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xa, 1)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
read_point, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x405150, 8) , (unique, 0xc680, 1)
read_point, (register, 0x30, 8) COPY (register, 0x28, 8)
read_point, (register, 0x38, 8) COPY (const, 0xa, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405183, 8)
read_point,  ---  CALL (ram, 0x401880, 8)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40518b, 8)
read_point,  ---  CALL (ram, 0x404f70, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x4050fe, 8) , (register, 0x206, 1)
read_point, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
read_point, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
read_point, (register, 0x0, 8) COPY (const, 0x2, 8)
read_point, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x38, 8)
read_point, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x38, 8)
read_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x38, 8)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
read_point, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_point, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_point, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_point, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_point, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  RETURN (register, 0x288, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0xa0, 8)
read_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4051bd, 8)
read_point,  ---  CALL (ram, 0x404f70, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x40525e, 8) , (unique, 0xc680, 1)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4051cd, 8)
read_point,  ---  CALL (ram, 0x4018c0, 8)
read_point, (register, 0x30, 8) COPY (register, 0x28, 8)
read_point, (register, 0xa8, 4) COPY (register, 0x0, 4)
read_point, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
read_point, (register, 0x38, 4) COPY (register, 0x0, 4)
read_point, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4051da, 8)
read_point,  ---  CALL (ram, 0x401880, 8)
read_point, (register, 0x200, 1) INT_LESS (register, 0xa8, 4) , (const, 0x69, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0xa8, 4) , (const, 0x69, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0xa8, 4) , (const, 0x69, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x405440, 8) , (register, 0x206, 1)
read_point, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
read_point, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
read_point,  ---  CBRANCH (ram, 0x405340, 8) , (unique, 0xce80, 1)
read_point, (register, 0x200, 1) INT_LESS (register, 0xa8, 4) , (const, 0x6f, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0xa8, 4) , (const, 0x6f, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0xa8, 4) , (const, 0x6f, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x405440, 8) , (register, 0x206, 1)
read_point, (register, 0x200, 1) INT_LESS (register, 0xa8, 4) , (const, 0x75, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0xa8, 4) , (const, 0x75, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0xa8, 4) , (const, 0x75, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x40520b, 8) , (register, 0x206, 1)
read_point,  ---  BRANCH (ram, 0x40534c, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x1f, 8) , (register, 0x20, 8)
read_point, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xa, 1)
read_point, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xa, 1)
read_point, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xa, 1)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
read_point, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x405397, 8) , (register, 0x206, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x1f, 8) , (register, 0x20, 8)
read_point, (register, 0x38, 8) COPY (unique, 0x3800, 8)
read_point, (register, 0x8, 8) COPY (register, 0x28, 8)
read_point, (register, 0x10, 8) COPY (const, 0x1, 8)
read_point, (register, 0x30, 8) COPY (const, 0x1, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405222, 8)
read_point,  ---  CALL (ram, 0x4019b0, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
read_point, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
read_point, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
read_point,  ---  CBRANCH (ram, 0x405200, 8) , (unique, 0xd080, 1)
read_point, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
read_point, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
read_point, (register, 0x30, 8) COPY (const, 0x411398, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405240, 8)
read_point,  ---  CALL (ram, 0x401b10, 8)
read_point,  ---  BRANCH (ram, 0x4050d0, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40524d, 8)
read_point,  ---  CALL (ram, 0x401910, 8)
read_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
read_point, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
read_point, (register, 0x10, 4) INT_ZEXT (register, 0x18, 1)
read_point, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
read_point, (unique, 0x3880, 8) INT_ADD (const, 0x1, 8) , (register, 0x0, 8)
read_point, (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8)
read_point, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)
read_point, (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x58c00, 1) , (const, 0x0, 1)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1)
read_point, (unique, 0x12c00, 1) INT_AND (unique, 0x58c00, 1) , (const, 0xff, 1)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x4058f7, 8) , (register, 0x206, 1)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405266, 8)
read_point,  ---  CALL (ram, 0x4018c0, 8)
read_point, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xffffffff, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0xffffffff, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0xffffffff, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x18, 4) COPY (register, 0x0, 4)
read_point, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x405248, 8) , (unique, 0xc680, 1)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405275, 8)
read_point,  ---  CALL (ram, 0x401a80, 8)
read_point, (register, 0x10, 4) COPY (register, 0x0, 4)
read_point, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
read_point, (register, 0x0, 8) COPY (const, 0x2, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x4050d5, 8) , (register, 0x206, 1)
read_point,  ---  BRANCH (ram, 0x4050d0, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0xa0, 8)
read_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x28, 8) COPY (unique, 0xbd80, 8)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40529d, 8)
read_point,  ---  CALL (ram, 0x404f70, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x405198, 8) , (unique, 0xc680, 1)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4052ad, 8)
read_point,  ---  CALL (ram, 0x401a80, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x4050d0, 8) , (unique, 0xc680, 1)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4052bd, 8)
read_point,  ---  CALL (ram, 0x4018c0, 8)
read_point, (register, 0x30, 8) COPY (register, 0x28, 8)
read_point, (register, 0xa8, 4) COPY (register, 0x0, 4)
read_point, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
read_point, (register, 0x38, 4) COPY (register, 0x0, 4)
read_point, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4052ca, 8)
read_point,  ---  CALL (ram, 0x401880, 8)
read_point, (register, 0x200, 1) INT_LESS (register, 0xa8, 4) , (const, 0x23, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0xa8, 4) , (const, 0x23, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0xa8, 4) , (const, 0x23, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x40580f, 8) , (unique, 0xc680, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
read_point, (register, 0x8, 8) COPY (unique, 0x3800, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
read_point, (register, 0x10, 8) COPY (unique, 0x3800, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x30, 8) COPY (const, 0x411272, 8)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4052ed, 8)
read_point,  ---  CALL (ram, 0x401750, 8)
read_point, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x2, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x4057f3, 8) , (register, 0x206, 1)
read_point, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
read_point, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x1f, 8) , (register, 0x20, 8)
read_point, (register, 0x38, 8) COPY (unique, 0x3800, 8)
read_point, (register, 0x8, 8) COPY (register, 0x28, 8)
read_point, (register, 0x10, 8) COPY (const, 0x1, 8)
read_point, (register, 0x30, 8) COPY (const, 0x1, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405317, 8)
read_point,  ---  CALL (ram, 0x4019b0, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
read_point, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
read_point,  ---  CBRANCH (ram, 0x4050d0, 8) , (unique, 0xce80, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x1f, 8) , (register, 0x20, 8)
read_point, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xa, 1)
read_point, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xa, 1)
read_point, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xa, 1)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
read_point, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x405300, 8) , (unique, 0xc680, 1)
read_point, (register, 0x30, 8) COPY (register, 0x28, 8)
read_point, (register, 0x38, 8) COPY (const, 0xa, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405333, 8)
read_point,  ---  CALL (ram, 0x401880, 8)
read_point,  ---  BRANCH (ram, 0x405295, 8)
read_point, (register, 0x200, 1) INT_LESS (register, 0xa8, 4) , (const, 0x23, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0xa8, 4) , (const, 0x23, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0xa8, 4) , (const, 0x23, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x4053a8, 8) , (register, 0x206, 1)
read_point, (register, 0x200, 1) INT_LESS (register, 0xa8, 4) , (const, 0x43, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0xa8, 4) , (const, 0x43, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0xa8, 4) , (const, 0x43, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x4053a8, 8) , (register, 0x206, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x1e, 8) , (register, 0x20, 8)
read_point, (register, 0x80, 8) COPY (unique, 0x3800, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
read_point, (register, 0x8, 8) COPY (unique, 0x3800, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
read_point, (register, 0x10, 8) COPY (unique, 0x3800, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x30, 8) COPY (const, 0x411292, 8)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40536a, 8)
read_point,  ---  CALL (ram, 0x401750, 8)
read_point, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x3, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x3, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x3, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x405226, 8) , (unique, 0xc680, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x1e, 8) , (register, 0x20, 8)
read_point, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x75, 1)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x75, 1)
read_point, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x75, 1)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
read_point, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x10, 1) COPY (register, 0x206, 1)
read_point, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x6f, 1)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x6f, 1)
read_point, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x6f, 1)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
read_point, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x8, 1) COPY (register, 0x206, 1)
read_point, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x69, 1)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x69, 1)
read_point, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x69, 1)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
read_point, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x0, 1) COPY (register, 0x206, 1)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x8, 1) INT_OR (register, 0x8, 1) , (register, 0x0, 1)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x8, 1) , (const, 0x0, 1)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x0, 1)
read_point, (unique, 0x12c00, 1) INT_AND (register, 0x8, 1) , (const, 0xff, 1)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x4056b0, 8) , (unique, 0xc680, 1)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59000, 1) INT_AND (register, 0x10, 1) , (register, 0x10, 1)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
read_point, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x405226, 8) , (register, 0x206, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x5c, 8) , (register, 0xa0, 8)
read_point, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
read_point,  ---  BRANCH (ram, 0x4051b5, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x1f, 8) , (register, 0x20, 8)
read_point, (register, 0x38, 8) COPY (unique, 0x3800, 8)
read_point, (register, 0x8, 8) COPY (register, 0x28, 8)
read_point, (register, 0x10, 8) COPY (const, 0x1, 8)
read_point, (register, 0x30, 8) COPY (const, 0x1, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4053bf, 8)
read_point,  ---  CALL (ram, 0x4019b0, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
read_point, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
read_point,  ---  CBRANCH (ram, 0x4050d0, 8) , (unique, 0xce80, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x1f, 8) , (register, 0x20, 8)
read_point, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xa, 1)
read_point, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0xa, 1)
read_point, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0xa, 1)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
read_point, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x4053a8, 8) , (unique, 0xc680, 1)
read_point, (register, 0x30, 8) COPY (register, 0x28, 8)
read_point, (register, 0x38, 8) COPY (const, 0xa, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4053db, 8)
read_point,  ---  CALL (ram, 0x401880, 8)
read_point,  ---  BRANCH (ram, 0x4051b5, 8)
read_point, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x1, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x1, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x1, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x8, 8) COPY (register, 0xa8, 8)
read_point, (register, 0x10, 8) COPY (const, 0x1, 8)
read_point,  ---  CBRANCH (ram, 0x4057a5, 8) , (register, 0x206, 1)
read_point, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x3, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x3, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x3, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x40577f, 8) , (register, 0x206, 1)
read_point, (register, 0x30, 8) COPY (const, 0x8, 8)
read_point, (register, 0x38, 8) COPY (register, 0x18, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405407, 8)
read_point,  ---  CALL (ram, 0x4019b0, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
read_point, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
read_point,  ---  CBRANCH (ram, 0x4050d0, 8) , (unique, 0xce80, 1)
read_point, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0x2, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x2, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0x2, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x40508c, 8) , (unique, 0xc680, 1)
read_point, (register, 0x1200, 8) COPY (ram, 0x411218, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
read_point, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
read_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
read_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (unique, 0x5280, 8)
read_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
read_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (unique, 0x5280, 8)
read_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x204, 1) COPY (const, 0x0, 1)
read_point, (register, 0x207, 1) COPY (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x40509e, 8) , (register, 0x202, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x40509e, 8) , (unique, 0xc680, 1)
read_point, (register, 0x0, 8) COPY (const, 0x2, 8)
read_point,  ---  BRANCH (ram, 0x40519d, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
read_point, (register, 0x80, 8) COPY (unique, 0x3800, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
read_point, (register, 0x8, 8) COPY (unique, 0x3800, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x1e, 8) , (register, 0x20, 8)
read_point, (register, 0x10, 8) COPY (unique, 0x3800, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x30, 8) COPY (const, 0x411283, 8)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40545e, 8)
read_point,  ---  CALL (ram, 0x401750, 8)
read_point, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x3, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x3, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x3, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x405226, 8) , (unique, 0xc680, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x4, 8) , (register, 0xa0, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x58800, 1) INT_AND (register, 0x0, 1) , (const, 0x1, 1)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x58800, 1) , (const, 0x0, 1)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x58800, 1) , (const, 0x0, 1)
read_point, (unique, 0x12c00, 1) INT_AND (unique, 0x58800, 1) , (const, 0xff, 1)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x405502, 8) , (register, 0x206, 1)
read_point, (register, 0x1240, 16) INT_XOR (register, 0x1240, 16) , (register, 0x1240, 16)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
read_point, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
read_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
read_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1240, 8)
read_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
read_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
read_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x204, 1) COPY (const, 0x0, 1)
read_point, (register, 0x207, 1) COPY (const, 0x0, 1)
read_point, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x405670, 8) , (unique, 0xc780, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4054a2, 8)
read_point,  ---  CALL (ram, 0x401700, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x4054fd, 8) , (register, 0x206, 1)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
read_point, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
read_point, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
read_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
read_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1240, 8)
read_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
read_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
read_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x204, 1) COPY (const, 0x0, 1)
read_point, (register, 0x207, 1) COPY (const, 0x0, 1)
read_point, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x40568b, 8) , (unique, 0xc780, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4054d1, 8)
read_point,  ---  CALL (ram, 0x401700, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
read_point, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
read_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
read_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1240, 8)
read_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
read_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
read_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x204, 1) COPY (const, 0x0, 1)
read_point, (register, 0x207, 1) COPY (const, 0x0, 1)
read_point, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x4056a0, 8) , (unique, 0xc780, 1)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4054f0, 8)
read_point,  ---  CALL (ram, 0x401700, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x4056a0, 8) , (unique, 0xc680, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x4, 8) , (register, 0xa0, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x58800, 1) INT_AND (register, 0x0, 1) , (const, 0x2, 1)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x58800, 1) , (const, 0x0, 1)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x58800, 1) , (const, 0x0, 1)
read_point, (unique, 0x12c00, 1) INT_AND (unique, 0x58800, 1) , (const, 0xff, 1)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x4055f8, 8) , (register, 0x206, 1)
read_point, (register, 0x1240, 16) INT_XOR (register, 0x1240, 16) , (register, 0x1240, 16)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
read_point, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
read_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
read_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (register, 0x1240, 8)
read_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
read_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (register, 0x1240, 8)
read_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x204, 1) COPY (const, 0x0, 1)
read_point, (register, 0x207, 1) COPY (const, 0x0, 1)
read_point, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x4055c0, 8) , (unique, 0xc780, 1)
read_point, (register, 0x1200, 8) COPY (register, 0x1220, 8)
read_point, (register, 0x1208, 8) COPY (register, 0x1228, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40552c, 8)
read_point,  ---  CALL (ram, 0x401700, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x14, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x4055f8, 8) , (register, 0x206, 1)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
read_point, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
read_point, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
read_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
read_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1240, 8)
read_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
read_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
read_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x204, 1) COPY (const, 0x0, 1)
read_point, (register, 0x207, 1) COPY (const, 0x0, 1)
read_point, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x4055db, 8) , (unique, 0xc780, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40555e, 8)
read_point,  ---  CALL (ram, 0x401700, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
read_point, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
read_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
read_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1240, 8)
read_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
read_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
read_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x204, 1) COPY (const, 0x0, 1)
read_point, (register, 0x207, 1) COPY (const, 0x0, 1)
read_point, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x405582, 8) , (unique, 0xc780, 1)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405579, 8)
read_point,  ---  CALL (ram, 0x401700, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point,  ---  CBRANCH (ram, 0x4055f8, 8) , (register, 0x206, 1)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
read_point, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
read_point, (register, 0x30, 8) COPY (const, 0x4113d8, 8)
read_point, (register, 0x0, 8) COPY (const, 0x2, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4055a8, 8)
read_point,  ---  CALL (ram, 0x401b10, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x5c, 8) , (register, 0xa0, 8)
read_point, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0xa0, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x28, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
read_point,  ---  BRANCH (ram, 0x405040, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x14, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x405587, 8) , (register, 0x206, 1)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (register, 0x28, 8) COPY (const, 0x1, 8)
read_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
read_point, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
read_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
read_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1240, 8)
read_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
read_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
read_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x204, 1) COPY (const, 0x0, 1)
read_point, (register, 0x207, 1) COPY (const, 0x0, 1)
read_point, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
read_point, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
read_point,  ---  CBRANCH (ram, 0x405553, 8) , (unique, 0xc900, 1)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
read_point, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
read_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
read_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1240, 8)
read_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
read_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
read_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x204, 1) COPY (const, 0x0, 1)
read_point, (register, 0x207, 1) COPY (const, 0x0, 1)
read_point, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x405582, 8) , (unique, 0xc780, 1)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4055eb, 8)
read_point,  ---  CALL (ram, 0x401700, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point,  ---  BRANCH (ram, 0x405582, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)
read_point, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x405650, 8) , (register, 0x206, 1)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x14, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x14, 8)
read_point, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)
read_point, (unique, 0xbc80, 4) COPY (register, 0x10, 4)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
read_point, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x5c, 8) , (register, 0xa0, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x0, 1) COPY (register, 0x206, 1)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
read_point, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x5c, 8) , (register, 0xa0, 8)
read_point, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  BRANCH (ram, 0x4050d5, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x4056a4, 8) , (register, 0x206, 1)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (register, 0x28, 8) COPY (const, 0x1, 8)
read_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
read_point, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
read_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
read_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1240, 8)
read_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
read_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
read_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x204, 1) COPY (const, 0x0, 1)
read_point, (register, 0x207, 1) COPY (const, 0x0, 1)
read_point, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
read_point, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
read_point,  ---  CBRANCH (ram, 0x4054c6, 8) , (unique, 0xc900, 1)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
read_point, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
read_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
read_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1240, 8)
read_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
read_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
read_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x204, 1) COPY (const, 0x0, 1)
read_point, (register, 0x207, 1) COPY (const, 0x0, 1)
read_point, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x4056a0, 8) , (unique, 0xc780, 1)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40569b, 8)
read_point,  ---  CALL (ram, 0x401700, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
read_point,  ---  BRANCH (ram, 0x40558b, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59000, 1) INT_AND (register, 0x10, 1) , (register, 0x10, 1)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
read_point, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x405397, 8) , (unique, 0xc680, 1)
read_point,  ---  BRANCH (ram, 0x405467, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
read_point, (unique, 0x18300, 1) FLOAT_NAN (ram, 0x411420, 8)
read_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
read_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (ram, 0x411420, 8)
read_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
read_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (ram, 0x411420, 8)
read_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x204, 1) COPY (const, 0x0, 1)
read_point, (register, 0x207, 1) COPY (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x4056d4, 8) , (register, 0x202, 1)
read_point,  ---  CBRANCH (ram, 0x405198, 8) , (register, 0x206, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
read_point, (register, 0x38, 8) COPY (unique, 0x3800, 8)
read_point, (register, 0x8, 8) COPY (register, 0xa8, 8)
read_point, (register, 0x10, 8) COPY (const, 0x1, 8)
read_point, (register, 0x30, 8) COPY (const, 0x4, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4056eb, 8)
read_point,  ---  CALL (ram, 0x4019b0, 8)
read_point, (register, 0x1260, 16) INT_XOR (register, 0x1260, 16) , (register, 0x1260, 16)
read_point, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
read_point, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x1260, 8) FLOAT2FLOAT (unique, 0x5200, 4)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x4050bd, 8) , (unique, 0xc680, 1)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
read_point, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
read_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
read_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1200, 8)
read_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
read_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1200, 8)
read_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x204, 1) COPY (const, 0x0, 1)
read_point, (register, 0x207, 1) COPY (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x40571c, 8) , (register, 0x202, 1)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
read_point, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
read_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
read_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1200, 8)
read_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
read_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1200, 8)
read_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x204, 1) COPY (const, 0x0, 1)
read_point, (register, 0x207, 1) COPY (const, 0x0, 1)
read_point, (unique, 0xcb00, 1) BOOL_NEGATE (register, 0x202, 1)
read_point,  ---  CBRANCH (ram, 0x40547c, 8) , (unique, 0xcb00, 1)
read_point, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
read_point, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
read_point, (register, 0x30, 8) COPY (const, 0x411310, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405736, 8)
read_point,  ---  CALL (ram, 0x401b10, 8)
read_point, (register, 0x0, 8) COPY (const, 0x1, 8)
read_point,  ---  BRANCH (ram, 0x4050d5, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
read_point, (unique, 0x18300, 1) FLOAT_NAN (ram, 0x411428, 8)
read_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
read_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (ram, 0x411428, 8)
read_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
read_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (ram, 0x411428, 8)
read_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x204, 1) COPY (const, 0x0, 1)
read_point, (register, 0x207, 1) COPY (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x405754, 8) , (register, 0x202, 1)
read_point,  ---  CBRANCH (ram, 0x405198, 8) , (register, 0x206, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
read_point, (register, 0x38, 8) COPY (unique, 0x3800, 8)
read_point, (register, 0x8, 8) COPY (register, 0xa8, 8)
read_point, (register, 0x10, 8) COPY (const, 0x1, 8)
read_point, (register, 0x30, 8) COPY (const, 0x4, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40576b, 8)
read_point,  ---  CALL (ram, 0x4019b0, 8)
read_point, (register, 0x1200, 16) INT_XOR (register, 0x1200, 16) , (register, 0x1200, 16)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x1200, 8) INT2FLOAT (unique, 0xbc80, 4)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point,  ---  BRANCH (ram, 0x4050b4, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
read_point, (register, 0x38, 8) COPY (unique, 0x3800, 8)
read_point, (register, 0x30, 8) COPY (const, 0x4, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40578e, 8)
read_point,  ---  CALL (ram, 0x4019b0, 8)
read_point, (register, 0x1200, 16) INT_XOR (register, 0x1200, 16) , (register, 0x1200, 16)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x1200, 8) INT2FLOAT (unique, 0xbc80, 4)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5280, 8)
read_point, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
read_point, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
read_point, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
read_point,  ---  CBRANCH (ram, 0x405744, 8) , (unique, 0xd080, 1)
read_point,  ---  BRANCH (ram, 0x4050d0, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
read_point, (register, 0x38, 8) COPY (unique, 0x3800, 8)
read_point, (register, 0x30, 8) COPY (const, 0x4, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4057b4, 8)
read_point,  ---  CALL (ram, 0x4019b0, 8)
read_point, (register, 0x1200, 16) INT_XOR (register, 0x1200, 16) , (register, 0x1200, 16)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
read_point, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x1200, 8) FLOAT2FLOAT (unique, 0x5200, 4)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5280, 8)
read_point, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
read_point, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
read_point, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
read_point,  ---  CBRANCH (ram, 0x4056c4, 8) , (unique, 0xd080, 1)
read_point,  ---  BRANCH (ram, 0x4050d0, 8)
read_point, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
read_point, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
read_point, (register, 0x30, 8) COPY (const, 0x4112d0, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4057e9, 8)
read_point,  ---  CALL (ram, 0x401b10, 8)
read_point, (register, 0x0, 8) COPY (const, 0x1, 8)
read_point,  ---  BRANCH (ram, 0x4050d5, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0xa0, 8)
read_point, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x2c, 8) , (register, 0xa0, 8)
read_point, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
read_point, (register, 0x0, 8) COPY (const, 0x3, 8)
read_point,  ---  BRANCH (ram, 0x4050d5, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0xa0, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x405906, 8) , (register, 0x206, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0xa0, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0xa0, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0xa0, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
read_point, (register, 0x10, 8) COPY (unique, 0x3100, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x30, 8) COPY (const, 0x41128e, 8)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405848, 8)
read_point,  ---  CALL (ram, 0x401750, 8)
read_point, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x40547c, 8) , (register, 0x206, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0xa0, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x4050d0, 8) , (unique, 0xc680, 1)
read_point, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
read_point, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
read_point, (register, 0x30, 8) COPY (const, 0x4112a0, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405878, 8)
read_point,  ---  CALL (ram, 0x401b10, 8)
read_point, (register, 0x0, 8) COPY (const, 0x1, 8)
read_point,  ---  BRANCH (ram, 0x4050d5, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0xa0, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x90, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x405926, 8) , (register, 0x206, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0xa0, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0xa0, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0xa0, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
read_point, (register, 0x10, 8) COPY (unique, 0x3100, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x30, 8) COPY (const, 0x41128e, 8)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4058bc, 8)
read_point,  ---  CALL (ram, 0x401750, 8)
read_point, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point,  ---  CBRANCH (ram, 0x405946, 8) , (register, 0x206, 1)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0xa0, 8)
read_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
read_point, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x4050d0, 8) , (unique, 0xc680, 1)
read_point, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
read_point, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
read_point, (register, 0x30, 8) COPY (const, 0x411358, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4058ed, 8)
read_point,  ---  CALL (ram, 0x401b10, 8)
read_point, (register, 0x0, 8) COPY (const, 0x1, 8)
read_point,  ---  BRANCH (ram, 0x4050d5, 8)
read_point, (register, 0x30, 8) COPY (register, 0x28, 8)
read_point, (register, 0x38, 4) COPY (register, 0x18, 4)
read_point, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405901, 8)
read_point,  ---  CALL (ram, 0x401880, 8)
read_point,  ---  BRANCH (ram, 0x40526d, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x10, 8) COPY (register, 0x18, 8)
read_point, (register, 0x30, 8) COPY (const, 0x41128e, 8)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405918, 8)
read_point,  ---  CALL (ram, 0x401750, 8)
read_point, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x4050d0, 8) , (unique, 0xc680, 1)
read_point,  ---  BRANCH (ram, 0x405835, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x10, 8) COPY (register, 0x18, 8)
read_point, (register, 0x30, 8) COPY (const, 0x41128e, 8)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405938, 8)
read_point,  ---  CALL (ram, 0x401750, 8)
read_point, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x4050d0, 8) , (unique, 0xc680, 1)
read_point,  ---  BRANCH (ram, 0x4058a9, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
read_point, (register, 0x10, 8) COPY (unique, 0x3800, 8)
read_point, (register, 0x200, 1) COPY (const, 0x0, 1)
read_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_point, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
read_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (register, 0x30, 8) COPY (const, 0x41128e, 8)
read_point, (register, 0x38, 8) COPY (register, 0x28, 8)
read_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40595a, 8)
read_point,  ---  CALL (ram, 0x401750, 8)
read_point, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
read_point, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
read_point, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
read_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_point,  ---  CBRANCH (ram, 0x4058d3, 8) , (unique, 0xc680, 1)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)
read_point, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
read_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
read_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
read_point, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
read_point, (register, 0x1240, 8) COPY (register, 0x1220, 8)
read_point, (register, 0x1248, 8) COPY (register, 0x1228, 8)
read_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1200, 8)
read_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1220, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
read_point, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_point,  ---  BRANCH (ram, 0x40547c, 8)
new_reader, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
new_reader, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_reader,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
new_reader, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
new_reader, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_reader,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
new_reader, (register, 0xb8, 8) COPY (register, 0x38, 8)
new_reader, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
new_reader, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_reader,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
new_reader, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
new_reader, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_reader,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
new_reader, (register, 0x38, 8) COPY (const, 0x68, 8)
new_reader, (unique, 0xe780, 8) COPY (register, 0x28, 8)
new_reader, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_reader,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
new_reader, (unique, 0xe780, 8) COPY (register, 0x18, 8)
new_reader, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_reader,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
new_reader, (register, 0xa8, 4) COPY (register, 0x10, 4)
new_reader, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
new_reader, (register, 0xb0, 4) COPY (register, 0x30, 4)
new_reader, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
new_reader, (register, 0xa0, 4) COPY (register, 0x8, 4)
new_reader, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
new_reader, (register, 0x28, 4) COPY (register, 0x80, 4)
new_reader, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
new_reader, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x38, 8)
new_reader, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x38, 8)
new_reader, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x38, 8)
new_reader, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
new_reader, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
new_reader, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
new_reader, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
new_reader, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
new_reader, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
new_reader, (register, 0x18, 4) COPY (register, 0x88, 4)
new_reader, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
new_reader, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
new_reader, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
new_reader, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
new_reader, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
new_reader, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
new_reader, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
new_reader, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
new_reader, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
new_reader, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
new_reader, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
new_reader, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_reader,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4059e8, 8)
new_reader,  ---  CALL (ram, 0x410290, 8)
new_reader, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
new_reader, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
new_reader, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
new_reader, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
new_reader, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
new_reader, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
new_reader, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
new_reader, (register, 0x1228, 8) COPY (const, 0x0, 8)
new_reader, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x5c, 8)
new_reader, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4)
new_reader, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
new_reader, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
new_reader, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
new_reader, (register, 0x1208, 8) COPY (const, 0x0, 8)
new_reader, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)
new_reader, (unique, 0xbd80, 8) COPY (register, 0xb8, 8)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
new_reader, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x2c, 8)
new_reader, (unique, 0xbc80, 4) COPY (register, 0x10, 4)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
new_reader, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
new_reader, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
new_reader, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
new_reader, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8)
new_reader, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
new_reader, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
new_reader, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
new_reader, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
new_reader, (register, 0x1248, 8) COPY (const, 0x0, 8)
new_reader, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)
new_reader, (unique, 0xbc80, 4) COPY (register, 0xb0, 4)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
new_reader, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
new_reader, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
new_reader, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
new_reader, (register, 0x1268, 8) COPY (const, 0x0, 8)
new_reader, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x38, 8)
new_reader, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
new_reader, (unique, 0x3c80, 8) INT_ADD (const, 0x80, 8) , (register, 0x20, 8)
new_reader, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
new_reader, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
new_reader, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
new_reader, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)
new_reader, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
new_reader, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
new_reader, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
new_reader, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
new_reader, (register, 0x1288, 8) COPY (const, 0x0, 8)
new_reader, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x14, 8)
new_reader, (unique, 0xbc80, 4) COPY (register, 0xa8, 4)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
new_reader, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x60, 8)
new_reader, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
new_reader, (unique, 0xbc80, 4) COPY (register, 0xa0, 4)
new_reader,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbc80, 4)
new_reader, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x40, 8)
new_reader, (unique, 0xbc80, 4) COPY (register, 0x10, 4)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
new_reader, (unique, 0x3c80, 8) INT_ADD (const, 0x88, 8) , (register, 0x20, 8)
new_reader, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
new_reader, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
new_reader, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
new_reader, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x30, 8)
new_reader, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
new_reader, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8)
new_reader, (unique, 0xbc80, 4) COPY (register, 0x28, 4)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
new_reader, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x48, 8)
new_reader, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
new_reader, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x28, 8)
new_reader, (unique, 0xbc80, 4) COPY (register, 0x18, 4)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
new_reader, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x50, 8)
new_reader, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
new_reader, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x58, 8)
new_reader, (unique, 0xbc80, 4) COPY (register, 0x10, 4)
new_reader,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
new_reader, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x38, 8)
new_reader, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x38, 8)
new_reader, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x38, 8)
new_reader, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
new_reader, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
new_reader, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
new_reader, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
new_reader, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
new_reader, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
new_reader, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
new_reader, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
new_reader, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
new_reader, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
new_reader, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
new_reader, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
new_reader, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
new_reader, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
new_reader, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
new_reader, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
new_reader, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
new_reader, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
new_reader, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
new_reader, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
new_reader,  ---  RETURN (register, 0x288, 8)
delete_reader,  ---  BRANCH (ram, 0x4018a0, 8)
alter_reader_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
alter_reader_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
alter_reader_parameters, (register, 0x98, 4) COPY (unique, 0xbc80, 4)
alter_reader_parameters, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
alter_reader_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x5c, 8)
alter_reader_parameters, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
alter_reader_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4)
alter_reader_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)
alter_reader_parameters, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
alter_reader_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
alter_reader_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)
alter_reader_parameters, (unique, 0xbd80, 8) COPY (register, 0x30, 8)
alter_reader_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
alter_reader_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)
alter_reader_parameters, (unique, 0xbc80, 4) COPY (register, 0x10, 4)
alter_reader_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
alter_reader_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)
alter_reader_parameters, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
alter_reader_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
alter_reader_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x14, 8)
alter_reader_parameters, (unique, 0xbc80, 4) COPY (register, 0x8, 4)
alter_reader_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
alter_reader_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)
alter_reader_parameters, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
alter_reader_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
alter_reader_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
alter_reader_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
alter_reader_parameters, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
alter_reader_parameters, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
alter_reader_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
alter_reader_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
alter_reader_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
alter_reader_parameters,  ---  CBRANCH (ram, 0x405abe, 8) , (register, 0x206, 1)
alter_reader_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x2c, 8)
alter_reader_parameters, (unique, 0xbc80, 4) COPY (register, 0x80, 4)
alter_reader_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
alter_reader_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
alter_reader_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
alter_reader_parameters, (register, 0x90, 4) COPY (unique, 0xbc80, 4)
alter_reader_parameters, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
alter_reader_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
alter_reader_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
alter_reader_parameters, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
alter_reader_parameters, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
alter_reader_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
alter_reader_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
alter_reader_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
alter_reader_parameters,  ---  CBRANCH (ram, 0x405acd, 8) , (register, 0x206, 1)
alter_reader_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)
alter_reader_parameters, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
alter_reader_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
alter_reader_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
alter_reader_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
alter_reader_parameters, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
alter_reader_parameters, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
alter_reader_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
alter_reader_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
alter_reader_parameters, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
alter_reader_parameters, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
alter_reader_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
alter_reader_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
alter_reader_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
alter_reader_parameters,  ---  CBRANCH (ram, 0x405adb, 8) , (register, 0x206, 1)
alter_reader_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x38, 8)
alter_reader_parameters, (unique, 0xbd80, 8) COPY (register, 0x88, 8)
alter_reader_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
alter_reader_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
alter_reader_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
alter_reader_parameters, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
alter_reader_parameters, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
alter_reader_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
alter_reader_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
alter_reader_parameters, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
alter_reader_parameters, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
alter_reader_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
alter_reader_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
alter_reader_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
alter_reader_parameters,  ---  CBRANCH (ram, 0x405aea, 8) , (register, 0x206, 1)
alter_reader_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
alter_reader_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
alter_reader_parameters, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
alter_reader_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
alter_reader_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x40, 8)
alter_reader_parameters, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
alter_reader_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
alter_reader_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
alter_reader_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
alter_reader_parameters, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
alter_reader_parameters, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
alter_reader_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
alter_reader_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
alter_reader_parameters, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
alter_reader_parameters, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
alter_reader_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
alter_reader_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
alter_reader_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
alter_reader_parameters,  ---  CBRANCH (ram, 0x405af7, 8) , (register, 0x206, 1)
alter_reader_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x48, 8)
alter_reader_parameters, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
alter_reader_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
alter_reader_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
alter_reader_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
alter_reader_parameters, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
alter_reader_parameters, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
alter_reader_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
alter_reader_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
alter_reader_parameters, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
alter_reader_parameters, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
alter_reader_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
alter_reader_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
alter_reader_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
alter_reader_parameters,  ---  CBRANCH (ram, 0x405b04, 8) , (register, 0x206, 1)
alter_reader_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x50, 8)
alter_reader_parameters, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
alter_reader_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
alter_reader_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
alter_reader_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
alter_reader_parameters, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
alter_reader_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
alter_reader_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
alter_reader_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
alter_reader_parameters, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
alter_reader_parameters, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
alter_reader_parameters, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
alter_reader_parameters, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
alter_reader_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
alter_reader_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
alter_reader_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
alter_reader_parameters,  ---  CBRANCH (ram, 0x405b13, 8) , (register, 0x206, 1)
alter_reader_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
alter_reader_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
alter_reader_parameters, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
alter_reader_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
alter_reader_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x58, 8)
alter_reader_parameters, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
alter_reader_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
alter_reader_parameters, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
alter_reader_parameters, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
alter_reader_parameters,  ---  RETURN (register, 0x288, 8)
read_file, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
read_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_file, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
read_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_file, (register, 0xb8, 8) COPY (register, 0x8, 8)
read_file, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
read_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_file, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
read_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_file, (register, 0xa8, 8) COPY (register, 0x30, 8)
read_file, (unique, 0xe780, 8) COPY (register, 0x28, 8)
read_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_file, (unique, 0xe780, 8) COPY (register, 0x18, 8)
read_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_file, (register, 0xa0, 8) COPY (register, 0x38, 8)
read_file, (register, 0x28, 8) COPY (register, 0x10, 8)
read_file, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
read_file, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
read_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_file, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
read_file, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
read_file, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
read_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_file, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)
read_file, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
read_file, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
read_file, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
read_file, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
read_file,  ---  BRANCH (ram, 0x405b52, 8)
read_file, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
read_file, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
read_file, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_file, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
read_file, (register, 0x80, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
read_file, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
read_file, (unique, 0xbc80, 4) COPY (register, 0x80, 4)
read_file,  ---  STORE (const, 0x1b1, 4) , (register, 0xb8, 8) , (unique, 0xbc80, 4)
read_file, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
read_file, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
read_file, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_file, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x80, 4)
read_file, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x80, 4)
read_file, (unique, 0x28600, 4) INT_SUB (register, 0x0, 4) , (register, 0x80, 4)
read_file, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
read_file, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
read_file, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
read_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_file, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
read_file, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
read_file, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
read_file,  ---  CBRANCH (ram, 0x405ba2, 8) , (unique, 0xd080, 1)
read_file, (register, 0x10, 8) INT_SEXT (register, 0x0, 4)
read_file, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
read_file, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
read_file, (register, 0xb0, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)
read_file, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
read_file, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x15cc5, 4)
read_file, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x15cc5, 4)
read_file, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x15cc5, 4)
read_file, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_file, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
read_file, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
read_file, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
read_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_file, (register, 0x8, 8) COPY (register, 0x10, 8)
read_file, (unique, 0x53900, 4) INT_AND (const, 0x7, 4) , (const, 0x3f, 4)
read_file, (unique, 0x53980, 8) COPY (register, 0x10, 8)
read_file, (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53900, 4)
read_file, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
read_file, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
read_file, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
read_file, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
read_file, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
read_file, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
read_file, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
read_file, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
read_file, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
read_file, (unique, 0x15580, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
read_file, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
read_file, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
read_file, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
read_file, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
read_file, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
read_file, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
read_file, (unique, 0x12f80, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
read_file, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
read_file, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
read_file, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
read_file, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
read_file, (unique, 0x13280, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
read_file, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
read_file, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
read_file, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
read_file, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
read_file, (unique, 0x13500, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
read_file, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
read_file, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
read_file, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
read_file, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
read_file, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
read_file, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
read_file, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
read_file, (register, 0x38, 8) COPY (register, 0x18, 8)
read_file, (unique, 0x53900, 4) INT_AND (const, 0x4, 4) , (const, 0x3f, 4)
read_file, (unique, 0x53980, 8) COPY (register, 0x8, 8)
read_file, (register, 0x8, 8) INT_LEFT (register, 0x8, 8) , (unique, 0x53900, 4)
read_file, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
read_file, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
read_file, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
read_file, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
read_file, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
read_file, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
read_file, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
read_file, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
read_file, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
read_file, (unique, 0x15580, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8)
read_file, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
read_file, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
read_file, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
read_file, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
read_file, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
read_file, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
read_file, (unique, 0x12f80, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8)
read_file, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
read_file, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
read_file, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
read_file, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
read_file, (unique, 0x13280, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
read_file, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
read_file, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
read_file, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
read_file, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
read_file, (unique, 0x13500, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)
read_file, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
read_file, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
read_file, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
read_file, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
read_file, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
read_file, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
read_file, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
read_file, (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x8, 8)
read_file, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (register, 0x8, 8)
read_file, (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (register, 0x8, 8)
read_file, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
read_file, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
read_file, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
read_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_file, (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x98967f, 8)
read_file, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (const, 0x98967f, 8)
read_file, (unique, 0x28000, 8) INT_SUB (register, 0x10, 8) , (const, 0x98967f, 8)
read_file, (register, 0x207, 1) INT_SLESS (unique, 0x28000, 8) , (const, 0x0, 8)
read_file, (register, 0x206, 1) INT_EQUAL (unique, 0x28000, 8) , (const, 0x0, 8)
read_file, (unique, 0x12c00, 8) INT_AND (unique, 0x28000, 8) , (const, 0xff, 8)
read_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_file, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
read_file, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
read_file, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
read_file, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc900, 1)
read_file,  ---  CBRANCH (ram, 0x405b82, 8) , (unique, 0x27780, 1)
read_file, (register, 0xb0, 4) COPY (register, 0x0, 4)
read_file, (register, 0x30, 8) INT_SEXT (register, 0xb0, 4)
read_file, (register, 0x0, 8) COPY (register, 0x30, 8)
read_file, (unique, 0x53900, 4) INT_AND (const, 0x7, 4) , (const, 0x3f, 4)
read_file, (unique, 0x53980, 8) COPY (register, 0x30, 8)
read_file, (register, 0x30, 8) INT_LEFT (register, 0x30, 8) , (unique, 0x53900, 4)
read_file, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
read_file, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
read_file, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
read_file, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
read_file, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
read_file, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
read_file, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
read_file, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
read_file, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
read_file, (unique, 0x15580, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
read_file, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
read_file, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
read_file, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
read_file, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
read_file, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
read_file, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
read_file, (unique, 0x12f80, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
read_file, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
read_file, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
read_file, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
read_file, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
read_file, (unique, 0x13280, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
read_file, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
read_file, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
read_file, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
read_file, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
read_file, (unique, 0x13500, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
read_file, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
read_file, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
read_file, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
read_file, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
read_file, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
read_file, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
read_file, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
read_file, (unique, 0x53900, 4) INT_AND (const, 0x4, 4) , (const, 0x3f, 4)
read_file, (unique, 0x53980, 8) COPY (register, 0x0, 8)
read_file, (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53900, 4)
read_file, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
read_file, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
read_file, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
read_file, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
read_file, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
read_file, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
read_file, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
read_file, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
read_file, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
read_file, (unique, 0x15580, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
read_file, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
read_file, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
read_file, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
read_file, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
read_file, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
read_file, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
read_file, (unique, 0x12f80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
read_file, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
read_file, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
read_file, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
read_file, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
read_file, (unique, 0x13280, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
read_file, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
read_file, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
read_file, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
read_file, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
read_file, (unique, 0x13500, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
read_file, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
read_file, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
read_file, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
read_file, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
read_file, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
read_file, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
read_file, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
read_file, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x0, 8)
read_file, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (register, 0x0, 8)
read_file, (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (register, 0x0, 8)
read_file, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
read_file, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
read_file, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
read_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405b98, 8)
read_file,  ---  CALL (ram, 0x4102c0, 8)
read_file, (unique, 0xbc80, 4) COPY (register, 0xb0, 4)
read_file,  ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (unique, 0xbc80, 4)
read_file, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
read_file, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
read_file, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
read_file, (register, 0x18, 8) COPY (register, 0x0, 8)
read_file, (register, 0x80, 8) INT_SEXT (register, 0x80, 4)
read_file, (register, 0x38, 8) COPY (register, 0xa0, 8)
read_file, (register, 0x0, 8) COPY (register, 0x80, 8)
read_file, (unique, 0x53900, 4) INT_AND (const, 0x7, 4) , (const, 0x3f, 4)
read_file, (unique, 0x53980, 8) COPY (register, 0x80, 8)
read_file, (register, 0x80, 8) INT_LEFT (register, 0x80, 8) , (unique, 0x53900, 4)
read_file, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
read_file, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
read_file, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
read_file, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
read_file, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
read_file, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
read_file, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
read_file, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
read_file, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
read_file, (unique, 0x15580, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)
read_file, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
read_file, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
read_file, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
read_file, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
read_file, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
read_file, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
read_file, (unique, 0x12f80, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)
read_file, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
read_file, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
read_file, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
read_file, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
read_file, (unique, 0x13280, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)
read_file, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
read_file, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
read_file, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
read_file, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
read_file, (unique, 0x13500, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)
read_file, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
read_file, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
read_file, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
read_file, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
read_file, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
read_file, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
read_file, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
read_file, (unique, 0x53900, 4) INT_AND (const, 0x4, 4) , (const, 0x3f, 4)
read_file, (unique, 0x53980, 8) COPY (register, 0x0, 8)
read_file, (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53900, 4)
read_file, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
read_file, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
read_file, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
read_file, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
read_file, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
read_file, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
read_file, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
read_file, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
read_file, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
read_file, (unique, 0x15580, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
read_file, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
read_file, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
read_file, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
read_file, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
read_file, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
read_file, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
read_file, (unique, 0x12f80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
read_file, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
read_file, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
read_file, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
read_file, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
read_file, (unique, 0x13280, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
read_file, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
read_file, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
read_file, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
read_file, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
read_file, (unique, 0x13500, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
read_file, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
read_file, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
read_file, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
read_file, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
read_file, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
read_file, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
read_file, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
read_file, (register, 0x200, 1) INT_LESS (register, 0x80, 8) , (register, 0x0, 8)
read_file, (register, 0x20b, 1) INT_SBORROW (register, 0x80, 8) , (register, 0x0, 8)
read_file, (register, 0x80, 8) INT_SUB (register, 0x80, 8) , (register, 0x0, 8)
read_file, (register, 0x207, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)
read_file, (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)
read_file, (unique, 0x12c00, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)
read_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_file, (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)
read_file, (unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8)
read_file, (register, 0x30, 8) COPY (unique, 0x3400, 8)
read_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405bbf, 8)
read_file,  ---  CALL (ram, 0x404fe0, 8)
read_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_file, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_file, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_file, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_file, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_file,  ---  CBRANCH (ram, 0x405b48, 8) , (register, 0x206, 1)
read_file, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x3, 4)
read_file, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x3, 4)
read_file, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x3, 4)
read_file, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_file, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_file, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_file, (unique, 0xbd80, 8) COPY (register, 0x18, 8)
read_file,  ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (unique, 0xbd80, 8)
read_file,  ---  CBRANCH (ram, 0x405c28, 8) , (register, 0x206, 1)
read_file, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0xa0, 8)
read_file, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_file, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
read_file, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
read_file, (unique, 0x3800, 8) INT_ADD (const, 0x5c, 8) , (register, 0xa0, 8)
read_file, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
read_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
read_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_file, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
read_file, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_file, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_file, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_file,  ---  CBRANCH (ram, 0x405bf5, 8) , (register, 0x206, 1)
read_file, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0xa0, 8)
read_file, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_file, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
read_file, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
read_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_file, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
read_file, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
read_file, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
read_file, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
read_file, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
read_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_file, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
read_file, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_file, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_file, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_file, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
read_file, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
read_file, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
read_file, (register, 0x10, 1) COPY (unique, 0xd080, 1)
read_file, (unique, 0x3880, 8) INT_ADD (const, 0xffffffffffffffff, 8) , (register, 0x10, 8)
read_file, (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x1, 8)
read_file, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
read_file, (register, 0x10, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4)
read_file, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
read_file, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (register, 0x8, 4)
read_file, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (register, 0x8, 4)
read_file, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)
read_file, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
read_file, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
read_file, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
read_file, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
read_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_file, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0xa0, 8)
read_file, (unique, 0xbc80, 4) COPY (register, 0x10, 4)
read_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
read_file, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0xa0, 8)
read_file, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_file, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
read_file, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
read_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_file, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
read_file, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_file, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_file, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_file,  ---  CBRANCH (ram, 0x405c0c, 8) , (register, 0x206, 1)
read_file, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0xa0, 8)
read_file, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_file, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_file, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_file, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0xa0, 8)
read_file, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
read_file, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
read_file, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
read_file, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
read_file, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_file, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_file, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_file, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_file,  ---  CBRANCH (ram, 0x405b40, 8) , (unique, 0xc680, 1)
read_file, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
read_file, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
read_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_file, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
read_file, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
read_file, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
read_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_file, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_file, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_file, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_file, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_file, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_file, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_file, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_file,  ---  RETURN (register, 0x288, 8)
read_file, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0xa0, 8)
read_file, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_file, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
read_file, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
read_file, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0xa0, 8)
read_file, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_file, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
read_file, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_file, (unique, 0x3800, 8) INT_ADD (const, 0x5c, 8) , (register, 0xa0, 8)
read_file, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
read_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
read_file, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0xa0, 8)
read_file, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
read_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
read_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_file, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
read_file, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_file, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_file, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_file,  ---  CBRANCH (ram, 0x405c56, 8) , (register, 0x206, 1)
read_file, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0xa0, 8)
read_file, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_file, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_file, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_file, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0xa0, 8)
read_file, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
read_file, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0xa0, 8)
read_file, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
read_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
read_file,  ---  BRANCH (ram, 0x405b40, 8)
read_and_plot_file, (unique, 0xe780, 8) COPY (register, 0x28, 8)
read_and_plot_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_and_plot_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_and_plot_file, (unique, 0xe780, 8) COPY (register, 0x18, 8)
read_and_plot_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_and_plot_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
read_and_plot_file, (register, 0x28, 8) COPY (register, 0x30, 8)
read_and_plot_file, (register, 0x18, 8) COPY (register, 0x38, 8)
read_and_plot_file, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x88, 8)
read_and_plot_file, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x88, 8)
read_and_plot_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x88, 8)
read_and_plot_file, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
read_and_plot_file, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
read_and_plot_file, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
read_and_plot_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_and_plot_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_and_plot_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_and_plot_file,  ---  BRANCH (ram, 0x405c85, 8)
read_and_plot_file, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
read_and_plot_file, (register, 0x30, 8) COPY (unique, 0x3800, 8)
read_and_plot_file, (register, 0x38, 8) COPY (register, 0x28, 8)
read_and_plot_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_and_plot_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405c85, 8)
read_and_plot_file,  ---  CALL (ram, 0x40d5e0, 8)
read_and_plot_file, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
read_and_plot_file, (register, 0x30, 8) COPY (unique, 0x3800, 8)
read_and_plot_file, (register, 0x38, 8) COPY (register, 0x18, 8)
read_and_plot_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_and_plot_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405c92, 8)
read_and_plot_file,  ---  CALL (ram, 0x404fe0, 8)
read_and_plot_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_and_plot_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_and_plot_file, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
read_and_plot_file, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_and_plot_file, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_and_plot_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_and_plot_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_and_plot_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_and_plot_file,  ---  CBRANCH (ram, 0x405c78, 8) , (register, 0x206, 1)
read_and_plot_file, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x3, 4)
read_and_plot_file, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x3, 4)
read_and_plot_file, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x3, 4)
read_and_plot_file, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_and_plot_file, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_and_plot_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_and_plot_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_and_plot_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_and_plot_file,  ---  CBRANCH (ram, 0x405cf0, 8) , (register, 0x206, 1)
read_and_plot_file, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
read_and_plot_file, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_and_plot_file, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
read_and_plot_file, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
read_and_plot_file, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x5c, 8)
read_and_plot_file, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
read_and_plot_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4)
read_and_plot_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_and_plot_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_and_plot_file, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
read_and_plot_file, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_and_plot_file, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_and_plot_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_and_plot_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_and_plot_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_and_plot_file,  ---  CBRANCH (ram, 0x405cbc, 8) , (register, 0x206, 1)
read_and_plot_file, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
read_and_plot_file, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_and_plot_file, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
read_and_plot_file, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
read_and_plot_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_and_plot_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_and_plot_file, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
read_and_plot_file, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
read_and_plot_file, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
read_and_plot_file, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
read_and_plot_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_and_plot_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_and_plot_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_and_plot_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_and_plot_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_and_plot_file, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
read_and_plot_file, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_and_plot_file, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_and_plot_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_and_plot_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_and_plot_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_and_plot_file, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
read_and_plot_file, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
read_and_plot_file, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
read_and_plot_file, (register, 0x10, 1) COPY (unique, 0xd080, 1)
read_and_plot_file, (unique, 0x3880, 8) INT_ADD (const, 0xffffffffffffffff, 8) , (register, 0x10, 8)
read_and_plot_file, (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x1, 8)
read_and_plot_file, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
read_and_plot_file, (register, 0x10, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4)
read_and_plot_file, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
read_and_plot_file, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (register, 0x8, 4)
read_and_plot_file, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (register, 0x8, 4)
read_and_plot_file, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)
read_and_plot_file, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
read_and_plot_file, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
read_and_plot_file, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
read_and_plot_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_and_plot_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_and_plot_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_and_plot_file, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
read_and_plot_file, (unique, 0xbc80, 4) COPY (register, 0x10, 4)
read_and_plot_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
read_and_plot_file, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x14, 8)
read_and_plot_file, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_and_plot_file, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
read_and_plot_file, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
read_and_plot_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_and_plot_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_and_plot_file, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
read_and_plot_file, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_and_plot_file, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_and_plot_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_and_plot_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_and_plot_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_and_plot_file,  ---  CBRANCH (ram, 0x405ccd, 8) , (register, 0x206, 1)
read_and_plot_file, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
read_and_plot_file, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_and_plot_file, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_and_plot_file, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_and_plot_file, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x60, 8)
read_and_plot_file, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_and_plot_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_and_plot_file, (register, 0x38, 8) COPY (register, 0x28, 8)
read_and_plot_file, (unique, 0x3800, 8) INT_ADD (const, 0xc, 8) , (register, 0x20, 8)
read_and_plot_file, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
read_and_plot_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
read_and_plot_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_and_plot_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405cd9, 8)
read_and_plot_file,  ---  CALL (ram, 0x40e9e0, 8)
read_and_plot_file, (unique, 0x3800, 8) INT_ADD (const, 0xc, 8) , (register, 0x20, 8)
read_and_plot_file, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
read_and_plot_file, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
read_and_plot_file, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_and_plot_file, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
read_and_plot_file, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
read_and_plot_file, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
read_and_plot_file, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
read_and_plot_file, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
read_and_plot_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_and_plot_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_and_plot_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_and_plot_file, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
read_and_plot_file,  ---  CBRANCH (ram, 0x405c85, 8) , (unique, 0xc680, 1)
read_and_plot_file, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x88, 8)
read_and_plot_file, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x88, 8)
read_and_plot_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x88, 8)
read_and_plot_file, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
read_and_plot_file, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
read_and_plot_file, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
read_and_plot_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
read_and_plot_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_and_plot_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_and_plot_file, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_and_plot_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_and_plot_file, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_and_plot_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_and_plot_file, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
read_and_plot_file, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
read_and_plot_file,  ---  RETURN (register, 0x288, 8)
read_and_plot_file, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x14, 8)
read_and_plot_file, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_and_plot_file, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
read_and_plot_file, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
read_and_plot_file, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
read_and_plot_file, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_and_plot_file, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
read_and_plot_file, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
read_and_plot_file, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x5c, 8)
read_and_plot_file, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
read_and_plot_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4)
read_and_plot_file, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
read_and_plot_file, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
read_and_plot_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4)
read_and_plot_file, (register, 0x200, 1) COPY (const, 0x0, 1)
read_and_plot_file, (register, 0x20b, 1) COPY (const, 0x0, 1)
read_and_plot_file, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
read_and_plot_file, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
read_and_plot_file, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
read_and_plot_file, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
read_and_plot_file, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
read_and_plot_file, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
read_and_plot_file, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
read_and_plot_file,  ---  CBRANCH (ram, 0x405d12, 8) , (register, 0x206, 1)
read_and_plot_file, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
read_and_plot_file, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
read_and_plot_file, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
read_and_plot_file, (register, 0x1208, 8) COPY (const, 0x0, 8)
read_and_plot_file, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x60, 8)
read_and_plot_file, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
read_and_plot_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
read_and_plot_file, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
read_and_plot_file, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
read_and_plot_file,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
read_and_plot_file, (register, 0x38, 8) COPY (register, 0x28, 8)
read_and_plot_file, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
read_and_plot_file,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405d1d, 8)
read_and_plot_file,  ---  CALL (ram, 0x40e9e0, 8)
read_and_plot_file,  ---  BRANCH (ram, 0x405c85, 8)
scale1, (register, 0x1240, 8) COPY (register, 0x1220, 8)
scale1, (register, 0x1248, 8) COPY (register, 0x1228, 8)
scale1, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
scale1, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
scale1,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
scale1, (unique, 0xe780, 8) COPY (register, 0x28, 8)
scale1, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
scale1,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
scale1, (unique, 0xe780, 8) COPY (register, 0x18, 8)
scale1, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
scale1,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
scale1, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1200, 8)
scale1, (register, 0x12a0, 8) COPY (register, 0x1200, 8)
scale1, (register, 0x12a8, 8) COPY (register, 0x1208, 8)
scale1, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x20, 8)
scale1, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x20, 8)
scale1, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x20, 8)
scale1, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
scale1, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
scale1, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
scale1, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
scale1, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
scale1, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
scale1, (register, 0x1280, 8) COPY (ram, 0x4111f0, 8)
scale1, (register, 0x1288, 8) COPY (const, 0x0, 8)
scale1, (register, 0x1260, 8) COPY (register, 0x1240, 8)
scale1, (register, 0x1268, 8) COPY (register, 0x1248, 8)
scale1, (register, 0x1240, 8) COPY (register, 0x1200, 8)
scale1, (register, 0x1248, 8) COPY (register, 0x1208, 8)
scale1, (register, 0x1200, 8) COPY (ram, 0x4111e0, 8)
scale1, (register, 0x1208, 8) COPY (const, 0x0, 8)
scale1, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (ram, 0x411660, 8)
scale1, (register, 0x1400, 8) COPY (register, 0x1240, 8)
scale1, (register, 0x1410, 8) COPY (register, 0x1220, 8)
scale1, (unique, 0x70980, 1) FLOAT_LESS (register, 0x1400, 8) , (register, 0x1410, 8)
scale1, (unique, 0x70a00, 8) INT_ZEXT (unique, 0x70980, 1)
scale1, (register, 0x1400, 8) INT_MULT (unique, 0x70a00, 8) , (const, 0xffffffffffffffff, 8)
scale1, (register, 0x1240, 8) COPY (register, 0x1400, 8)
scale1, (register, 0x1280, 8) INT_AND (register, 0x1280, 8) , (register, 0x1240, 8)
scale1, (register, 0x1288, 8) INT_AND (register, 0x1288, 8) , (register, 0x1248, 8)
scale1, (unique, 0x69780, 8) INT_NEGATE (register, 0x1240, 8)
scale1, (register, 0x1240, 8) INT_AND (unique, 0x69780, 8) , (register, 0x1200, 8)
scale1, (unique, 0x69880, 8) INT_NEGATE (register, 0x1248, 8)
scale1, (register, 0x1248, 8) INT_AND (unique, 0x69880, 8) , (register, 0x1208, 8)
scale1, (register, 0x1200, 16) INT_XOR (register, 0x1200, 16) , (register, 0x1200, 16)
scale1, (register, 0x1240, 16) INT_OR (register, 0x1240, 16) , (register, 0x1280, 16)
scale1, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1260, 8)
scale1, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
scale1, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
scale1, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
scale1, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1240, 8)
scale1, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
scale1, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
scale1, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
scale1, (register, 0x20b, 1) COPY (const, 0x0, 1)
scale1, (register, 0x204, 1) COPY (const, 0x0, 1)
scale1, (register, 0x207, 1) COPY (const, 0x0, 1)
scale1, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
scale1,  ---  CBRANCH (ram, 0x405eb7, 8) , (unique, 0xc580, 1)
scale1, (register, 0x1200, 8) COPY (register, 0x1240, 8)
scale1, (register, 0x1208, 8) COPY (register, 0x1248, 8)
scale1, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
scale1, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
scale1,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
scale1, (register, 0xa0, 8) COPY (register, 0x38, 8)
scale1, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
scale1, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
scale1,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
scale1, (register, 0x18, 8) COPY (register, 0x30, 8)
scale1, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
scale1, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
scale1,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
scale1, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
scale1,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405da8, 8)
scale1,  ---  CALL (ram, 0x401700, 8)
scale1, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
scale1,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405dad, 8)
scale1,  ---  CALL (ram, 0x401ae0, 8)
scale1, (register, 0x1220, 8) COPY (register, 0x1200, 8)
scale1, (register, 0x1228, 8) COPY (register, 0x1208, 8)
scale1, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
scale1,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
scale1, (register, 0x1200, 8) COPY (ram, 0x411670, 8)
scale1, (register, 0x1208, 8) COPY (const, 0x0, 8)
scale1, (unique, 0xacc80, 16) COPY (ram, 0x411720, 16)
scale1, (unique, 0xacd00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x0, 4)
scale1, (register, 0x1220, 8) INT_XOR (register, 0x1220, 8) , (unique, 0xacd00, 8)
scale1, (unique, 0xace00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x8, 4)
scale1, (register, 0x1228, 8) INT_XOR (register, 0x1228, 8) , (unique, 0xace00, 8)
scale1, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
scale1,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405dcb, 8)
scale1,  ---  CALL (ram, 0x401950, 8)
scale1, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
scale1, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
scale1, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
scale1, (register, 0x1248, 8) COPY (const, 0x0, 8)
scale1, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
scale1, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
scale1, (register, 0x1268, 8) COPY (const, 0x0, 8)
scale1, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1200, 8)
scale1, (register, 0x1200, 8) COPY (ram, 0x411678, 8)
scale1, (register, 0x1208, 8) COPY (const, 0x0, 8)
scale1, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
scale1, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
scale1, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
scale1, (register, 0x12a8, 8) COPY (const, 0x0, 8)
scale1, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
scale1, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
scale1, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
scale1, (register, 0x12c8, 8) COPY (const, 0x0, 8)
scale1, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
scale1, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
scale1, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
scale1, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1240, 8)
scale1, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
scale1, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
scale1, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
scale1, (register, 0x20b, 1) COPY (const, 0x0, 1)
scale1, (register, 0x204, 1) COPY (const, 0x0, 1)
scale1, (register, 0x207, 1) COPY (const, 0x0, 1)
scale1, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
scale1, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
scale1,  ---  CBRANCH (ram, 0x405e68, 8) , (unique, 0xc900, 1)
scale1, (register, 0x1200, 8) COPY (ram, 0x411680, 8)
scale1, (register, 0x1208, 8) COPY (const, 0x0, 8)
scale1, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
scale1, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
scale1, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
scale1, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1240, 8)
scale1, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
scale1, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
scale1, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
scale1, (register, 0x20b, 1) COPY (const, 0x0, 1)
scale1, (register, 0x204, 1) COPY (const, 0x0, 1)
scale1, (register, 0x207, 1) COPY (const, 0x0, 1)
scale1, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
scale1, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
scale1,  ---  CBRANCH (ram, 0x405ea8, 8) , (unique, 0xc900, 1)
scale1, (register, 0x1200, 8) COPY (ram, 0x411688, 8)
scale1, (register, 0x1208, 8) COPY (const, 0x0, 8)
scale1, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
scale1, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
scale1, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
scale1, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1240, 8)
scale1, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
scale1, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
scale1, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
scale1, (register, 0x20b, 1) COPY (const, 0x0, 1)
scale1, (register, 0x204, 1) COPY (const, 0x0, 1)
scale1, (register, 0x207, 1) COPY (const, 0x0, 1)
scale1, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
scale1, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
scale1,  ---  CBRANCH (ram, 0x405eb0, 8) , (unique, 0xc900, 1)
scale1, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12c0, 8)
scale1, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12a0, 8)
scale1, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
scale1, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12c0, 8) , (register, 0x12a0, 8)
scale1, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
scale1, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12c0, 8) , (register, 0x12a0, 8)
scale1, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
scale1, (register, 0x20b, 1) COPY (const, 0x0, 1)
scale1, (register, 0x204, 1) COPY (const, 0x0, 1)
scale1, (register, 0x207, 1) COPY (const, 0x0, 1)
scale1, (register, 0x1220, 8) COPY (register, 0x1260, 8)
scale1, (register, 0x1228, 8) COPY (register, 0x1268, 8)
scale1, (register, 0x1200, 8) COPY (ram, 0x411670, 8)
scale1, (register, 0x1208, 8) COPY (const, 0x0, 8)
scale1, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
scale1, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
scale1,  ---  CBRANCH (ram, 0x405e4a, 8) , (unique, 0xc900, 1)
scale1, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
scale1,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405e2f, 8)
scale1,  ---  CALL (ram, 0x401950, 8)
scale1, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (ram, 0x411690, 8)
scale1, (register, 0x200, 1) COPY (const, 0x0, 1)
scale1, (register, 0x20b, 1) COPY (const, 0x0, 1)
scale1, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
scale1, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
scale1, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
scale1, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
scale1, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
scale1, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
scale1, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
scale1, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
scale1, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
scale1,  ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (unique, 0x5280, 8)
scale1, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
scale1,  ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0xbc80, 4)
scale1, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x20, 8)
scale1, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x20, 8)
scale1, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x20, 8)
scale1, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
scale1, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
scale1, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
scale1, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
scale1, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
scale1, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
scale1, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
scale1, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
scale1, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
scale1, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
scale1, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
scale1, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
scale1, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
scale1, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
scale1,  ---  RETURN (register, 0x288, 8)
scale1, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
scale1,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405e4f, 8)
scale1,  ---  CALL (ram, 0x401950, 8)
scale1, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (ram, 0x411670, 8)
scale1, (register, 0x200, 1) COPY (const, 0x0, 1)
scale1, (register, 0x20b, 1) COPY (const, 0x0, 1)
scale1, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
scale1, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
scale1, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
scale1, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
scale1, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
scale1, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
scale1, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
scale1, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
scale1, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
scale1,  ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (unique, 0x5280, 8)
scale1,  ---  BRANCH (ram, 0x405e3f, 8)
scale1, (register, 0x200, 1) COPY (const, 0x0, 1)
scale1, (register, 0x20b, 1) COPY (const, 0x0, 1)
scale1, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
scale1, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
scale1, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
scale1, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
scale1, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
scale1, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
scale1, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
scale1, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
scale1, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12c0, 8)
scale1, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12a0, 8)
scale1, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
scale1, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12c0, 8) , (register, 0x12a0, 8)
scale1, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
scale1, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12c0, 8) , (register, 0x12a0, 8)
scale1, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
scale1, (register, 0x20b, 1) COPY (const, 0x0, 1)
scale1, (register, 0x204, 1) COPY (const, 0x0, 1)
scale1, (register, 0x207, 1) COPY (const, 0x0, 1)
scale1, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
scale1,  ---  CBRANCH (ram, 0x405ee2, 8) , (unique, 0xc780, 1)
scale1, (register, 0x0, 8) INT_SEXT (register, 0x28, 4)
scale1, (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
scale1, (unique, 0x3580, 8) INT_ADD (const, 0x411640, 8) , (unique, 0x3480, 8)
scale1, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3580, 8)
scale1, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
scale1, (register, 0x12e8, 8) COPY (const, 0x0, 8)
scale1, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
scale1,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
scale1, (register, 0x1220, 8) COPY (register, 0x1260, 8)
scale1, (register, 0x1228, 8) COPY (register, 0x1268, 8)
scale1, (register, 0x1200, 8) COPY (ram, 0x411670, 8)
scale1, (register, 0x1208, 8) COPY (const, 0x0, 8)
scale1, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
scale1,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405e92, 8)
scale1,  ---  CALL (ram, 0x401950, 8)
scale1, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
scale1, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
scale1, (register, 0x0, 4) COPY (register, 0x28, 4)
scale1, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
scale1, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
scale1,  ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (unique, 0x5280, 8)
scale1,  ---  BRANCH (ram, 0x405e3f, 8)
scale1, (register, 0x28, 8) COPY (const, 0x1, 8)
scale1,  ---  BRANCH (ram, 0x405e6a, 8)
scale1, (register, 0x28, 8) COPY (const, 0x2, 8)
scale1,  ---  BRANCH (ram, 0x405e6a, 8)
scale1, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
scale1, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
scale1, (register, 0x30, 8) COPY (const, 0x411430, 8)
scale1, (register, 0x1200, 8) COPY (register, 0x1240, 8)
scale1, (register, 0x1208, 8) COPY (register, 0x1248, 8)
scale1, (register, 0x0, 8) COPY (const, 0x1, 8)
scale1, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
scale1,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405ed8, 8)
scale1,  ---  CALL (ram, 0x401b10, 8)
scale1, (register, 0x38, 8) COPY (const, 0x1, 8)
scale1, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
scale1,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405ee2, 8)
scale1,  ---  CALL (ram, 0x4017a0, 8)
scale1, (register, 0x0, 8) INT_SEXT (register, 0x28, 4)
scale1, (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
scale1, (unique, 0x3580, 8) INT_ADD (const, 0x411640, 8) , (unique, 0x3480, 8)
scale1, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3580, 8)
scale1, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
scale1, (register, 0x1208, 8) COPY (const, 0x0, 8)
scale1, (unique, 0xacc80, 16) COPY (ram, 0x411720, 16)
scale1, (unique, 0xacd00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x0, 4)
scale1, (register, 0x1200, 8) INT_XOR (register, 0x1200, 8) , (unique, 0xacd00, 8)
scale1, (unique, 0xace00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x8, 4)
scale1, (register, 0x1208, 8) INT_XOR (register, 0x1208, 8) , (unique, 0xace00, 8)
scale1, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
scale1,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
scale1,  ---  BRANCH (ram, 0x405e81, 8)
prepare_axis, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
prepare_axis, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
prepare_axis, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
prepare_axis, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
prepare_axis, (unique, 0xe780, 8) COPY (register, 0x28, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
prepare_axis, (unique, 0xe780, 8) COPY (register, 0x18, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
prepare_axis, (register, 0x12a0, 8) COPY (register, 0x1200, 8)
prepare_axis, (register, 0x12a8, 8) COPY (register, 0x1208, 8)
prepare_axis, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x88, 8)
prepare_axis, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x88, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x88, 8)
prepare_axis, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
prepare_axis, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
prepare_axis, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
prepare_axis, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1220, 8)
prepare_axis, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
prepare_axis, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1220, 8)
prepare_axis, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
prepare_axis, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1220, 8)
prepare_axis, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x204, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x207, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbd80, 8) COPY (register, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x74, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
prepare_axis, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
prepare_axis,  ---  CBRANCH (ram, 0x406764, 8) , (unique, 0xc900, 1)
prepare_axis, (register, 0xb0, 8) COPY (register, 0x38, 8)
prepare_axis, (register, 0x18, 8) COPY (register, 0x30, 8)
prepare_axis, (register, 0xa8, 4) COPY (register, 0x80, 4)
prepare_axis, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
prepare_axis, (register, 0x28, 4) COPY (register, 0x88, 4)
prepare_axis, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
prepare_axis,  ---  CBRANCH (ram, 0x405f57, 8) , (register, 0x202, 1)
prepare_axis,  ---  CBRANCH (ram, 0x406290, 8) , (register, 0x206, 1)
prepare_axis, (unique, 0x3c80, 8) INT_ADD (const, 0xc0, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
prepare_axis, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
prepare_axis, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
prepare_axis, (register, 0x12c0, 8) COPY (ram, 0x4111f0, 8)
prepare_axis, (register, 0x12c8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
prepare_axis,  ---  CBRANCH (ram, 0x4062ed, 8) , (unique, 0xc680, 1)
prepare_axis, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
prepare_axis, (unique, 0x18300, 1) FLOAT_NAN (ram, 0x411668, 8)
prepare_axis, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
prepare_axis, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (ram, 0x411668, 8)
prepare_axis, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
prepare_axis, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (ram, 0x411668, 8)
prepare_axis, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x204, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x207, 1) COPY (const, 0x0, 1)
prepare_axis,  ---  CBRANCH (ram, 0x4063e0, 8) , (register, 0x202, 1)
prepare_axis, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
prepare_axis,  ---  CBRANCH (ram, 0x4063e0, 8) , (unique, 0xc680, 1)
prepare_axis, (register, 0x1200, 8) COPY (register, 0x12a0, 8)
prepare_axis, (register, 0x1208, 8) COPY (register, 0x12a8, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x74, 8) , (register, 0x20, 8)
prepare_axis, (register, 0x30, 8) COPY (unique, 0x3800, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
prepare_axis, (register, 0x38, 8) COPY (unique, 0x3800, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1228, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405fa7, 8)
prepare_axis,  ---  CALL (ram, 0x405d30, 8)
prepare_axis, (register, 0x1260, 8) COPY (ram, 0x411698, 8)
prepare_axis, (register, 0x1268, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12a8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1288, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x12a0, 8)
prepare_axis,  ---  CBRANCH (ram, 0x40633e, 8) , (register, 0x206, 1)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0x59200, 4) INT_AND (register, 0xa8, 4) , (register, 0xa8, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
prepare_axis,  ---  CBRANCH (ram, 0x4065c0, 8) , (unique, 0xc680, 1)
prepare_axis, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1260, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1228, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x12a0, 8) FLOAT_ADD (register, 0x12a0, 8) , (register, 0x1280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x1200, 8) COPY (register, 0x12a0, 8)
prepare_axis, (register, 0x1208, 8) COPY (register, 0x12a8, 8)
prepare_axis, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (register, 0x1220, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x405ffd, 8)
prepare_axis,  ---  CALL (ram, 0x401ae0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1288, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x28, 4) TRUNC (register, 0x1200, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1208, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1228, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (register, 0x1220, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x406026, 8)
prepare_axis,  ---  CALL (ram, 0x401740, 8)
prepare_axis, (register, 0xa0, 4) TRUNC (register, 0x1200, 8)
prepare_axis, (register, 0x1200, 16) INT_XOR (register, 0x1200, 16) , (register, 0x1200, 16)
prepare_axis, (register, 0x12a0, 16) INT_XOR (register, 0x12a0, 16) , (register, 0x12a0, 16)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1228, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1268, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x12a0, 8) INT2FLOAT (register, 0x28, 4)
prepare_axis, (register, 0x1200, 8) INT2FLOAT (register, 0xa0, 4)
prepare_axis, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x1220, 8)
prepare_axis, (register, 0x12c0, 8) COPY (register, 0x12a0, 8)
prepare_axis, (register, 0x12c8, 8) COPY (register, 0x12a8, 8)
prepare_axis, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1220, 8)
prepare_axis, (register, 0x1280, 8) COPY (register, 0x1200, 8)
prepare_axis, (register, 0x1288, 8) COPY (register, 0x1208, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x12a0, 8)
prepare_axis, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1280, 8)
prepare_axis, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x1260, 8)
prepare_axis, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1200, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x74, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0xb8, 4) COPY (unique, 0xbc80, 4)
prepare_axis, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
prepare_axis, (register, 0x200, 1) INT_LESS (register, 0xb8, 4) , (const, 0x1, 4)
prepare_axis, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 4) , (const, 0x1, 4)
prepare_axis, (unique, 0x28200, 4) INT_SUB (register, 0xb8, 4) , (const, 0x1, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis,  ---  CBRANCH (ram, 0x4063cc, 8) , (register, 0x206, 1)
prepare_axis, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
prepare_axis, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
prepare_axis, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
prepare_axis,  ---  CBRANCH (ram, 0x4064e0, 8) , (unique, 0xd080, 1)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0x59200, 4) INT_AND (register, 0xb8, 4) , (register, 0xb8, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
prepare_axis,  ---  CBRANCH (ram, 0x406520, 8) , (unique, 0xc680, 1)
prepare_axis, (register, 0x1240, 8) COPY (register, 0x1220, 8)
prepare_axis, (register, 0x1248, 8) COPY (register, 0x1228, 8)
prepare_axis, (register, 0x1200, 8) COPY (register, 0x12c0, 8)
prepare_axis, (register, 0x1208, 8) COPY (register, 0x12c8, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (ram, 0x411670, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (register, 0x1240, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4060c9, 8)
prepare_axis,  ---  CALL (ram, 0x401740, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1248, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1208, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (register, 0x1240, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4060e4, 8)
prepare_axis,  ---  CALL (ram, 0x401ae0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1268, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x10, 4) TRUNC (register, 0x1200, 8)
prepare_axis, (register, 0x8, 4) TRUNC (register, 0x1260, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1248, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12c8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1228, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12a8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1288, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (register, 0x8, 4)
prepare_axis, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (register, 0x8, 4)
prepare_axis, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x8, 4)
prepare_axis, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x1d, 4)
prepare_axis, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x1d, 4)
prepare_axis, (unique, 0x28200, 4) INT_SUB (register, 0x10, 4) , (const, 0x1d, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
prepare_axis, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
prepare_axis, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
prepare_axis,  ---  CBRANCH (ram, 0x406548, 8) , (unique, 0xd080, 1)
prepare_axis, (unique, 0x3c80, 8) INT_ADD (const, 0xc0, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
prepare_axis, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
prepare_axis, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1268, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
prepare_axis, (register, 0x8, 1) COPY (unique, 0xc680, 1)
prepare_axis, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1260, 8)
prepare_axis, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
prepare_axis, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
prepare_axis, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1260, 8) , (register, 0x1240, 8)
prepare_axis, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
prepare_axis, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1260, 8) , (register, 0x1240, 8)
prepare_axis, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x204, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x207, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
prepare_axis, (register, 0x10, 1) COPY (unique, 0xc580, 1)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x10, 1) INT_AND (register, 0x10, 1) , (register, 0x8, 1)
prepare_axis, (register, 0x207, 1) INT_SLESS (register, 0x10, 1) , (const, 0x0, 1)
prepare_axis, (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x12c00, 1) INT_AND (register, 0x10, 1) , (const, 0xff, 1)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
prepare_axis,  ---  CBRANCH (ram, 0x406788, 8) , (unique, 0xc680, 1)
prepare_axis, (register, 0x12c0, 8) FLOAT_DIV (register, 0x12c0, 8) , (register, 0x1240, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xba80, 1) COPY (register, 0x8, 1)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xba80, 1)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x1200, 8) COPY (register, 0x12c0, 8)
prepare_axis, (register, 0x1208, 8) COPY (register, 0x12c8, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x406165, 8)
prepare_axis,  ---  CALL (ram, 0x401740, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1248, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x38, 4) TRUNC (register, 0x1200, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1208, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (register, 0x1240, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbc80, 4) COPY (register, 0x38, 4)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x406182, 8)
prepare_axis,  ---  CALL (ram, 0x401ae0, 8)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x80, 4) INT_XOR (register, 0x80, 4) , (register, 0x80, 4)
prepare_axis, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (register, 0x200, 1) INT_LESS (register, 0xb8, 4) , (const, 0xfffffffe, 4)
prepare_axis, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 4) , (const, 0xfffffffe, 4)
prepare_axis, (unique, 0x28200, 4) INT_SUB (register, 0xb8, 4) , (const, 0xfffffffe, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
prepare_axis, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
prepare_axis, (register, 0x30, 4) TRUNC (register, 0x1200, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1)
prepare_axis, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1248, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1228, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12a8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1288, 8) COPY (const, 0x0, 8)
prepare_axis,  ---  CBRANCH (ram, 0x4061be, 8) , (register, 0x206, 1)
prepare_axis, (register, 0x10, 4) COPY (register, 0x30, 4)
prepare_axis, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x80, 4) INT_XOR (register, 0x80, 4) , (register, 0x80, 4)
prepare_axis, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (register, 0x38, 4)
prepare_axis, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (register, 0x38, 4)
prepare_axis, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x38, 4)
prepare_axis, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x1d, 4)
prepare_axis, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x1d, 4)
prepare_axis, (unique, 0x28200, 4) INT_SUB (register, 0x10, 4) , (const, 0x1d, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
prepare_axis, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
prepare_axis, (register, 0x80, 1) COPY (unique, 0xce80, 1)
prepare_axis, (unique, 0x3c80, 8) INT_ADD (const, 0xc8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
prepare_axis, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
prepare_axis, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12e8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0x59000, 1) INT_AND (register, 0x8, 1) , (register, 0x8, 1)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)
prepare_axis, (unique, 0xbc80, 4) COPY (register, 0x10, 4)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3c80, 8) INT_ADD (const, 0xd0, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
prepare_axis, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
prepare_axis, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x10, 8)
prepare_axis, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x38, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x68, 8)
prepare_axis, (unique, 0xbc80, 4) COPY (register, 0x10, 4)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
prepare_axis, (unique, 0x3c80, 8) INT_ADD (const, 0xd8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
prepare_axis, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
prepare_axis, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12e8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12c8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (unique, 0xbd80, 8)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x8, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x70, 8)
prepare_axis, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x28, 8)
prepare_axis, (unique, 0xbc80, 4) COPY (register, 0x28, 4)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x6c, 8)
prepare_axis, (unique, 0xbc80, 4) COPY (register, 0x10, 4)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
prepare_axis, (register, 0x10, 4) INT_ZEXT (register, 0x8, 1)
prepare_axis, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x2c, 8)
prepare_axis, (unique, 0xbc80, 4) COPY (register, 0xa0, 4)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x18, 8)
prepare_axis, (unique, 0xbc80, 4) COPY (register, 0x10, 4)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x50, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x30, 8)
prepare_axis, (unique, 0xbc80, 4) COPY (register, 0x80, 4)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x40, 8)
prepare_axis, (unique, 0xbc80, 4) COPY (register, 0x38, 4)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x44, 8)
prepare_axis, (unique, 0xbc80, 4) COPY (register, 0x30, 4)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x4c, 8)
prepare_axis, (unique, 0xbc80, 4) COPY (register, 0xa8, 4)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x78, 8)
prepare_axis, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4)
prepare_axis,  ---  CBRANCH (ram, 0x4064d0, 8) , (register, 0x206, 1)
prepare_axis, (register, 0x1200, 8) COPY (ram, 0x4116b0, 8)
prepare_axis, (register, 0x1208, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
prepare_axis, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1280, 8)
prepare_axis, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
prepare_axis, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1280, 8)
prepare_axis, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
prepare_axis, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1280, 8)
prepare_axis, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x204, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x207, 1) COPY (const, 0x0, 1)
prepare_axis,  ---  CBRANCH (ram, 0x4064d0, 8) , (register, 0x200, 1)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x48, 8)
prepare_axis, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4)
prepare_axis, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x88, 8)
prepare_axis, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x88, 8)
prepare_axis, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x88, 8)
prepare_axis, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
prepare_axis, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
prepare_axis, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
prepare_axis, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
prepare_axis, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
prepare_axis, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
prepare_axis, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
prepare_axis, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
prepare_axis, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
prepare_axis, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  RETURN (register, 0x288, 8)
prepare_axis, (register, 0x12e0, 8) COPY (ram, 0x4111f0, 8)
prepare_axis, (register, 0x12e8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1208, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12e0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4062b9, 8)
prepare_axis,  ---  CALL (ram, 0x401ae0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12a8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x1200, 8) COPY (register, 0x12a0, 8)
prepare_axis, (register, 0x1208, 8) COPY (register, 0x12a8, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4062d4, 8)
prepare_axis,  ---  CALL (ram, 0x401740, 8)
prepare_axis, (unique, 0x3c80, 8) INT_ADD (const, 0xc0, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
prepare_axis, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
prepare_axis, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
prepare_axis, (register, 0x12a0, 8) COPY (register, 0x1200, 8)
prepare_axis, (register, 0x12a8, 8) COPY (register, 0x1208, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1248, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis,  ---  CBRANCH (ram, 0x405f74, 8) , (register, 0x206, 1)
prepare_axis, (register, 0x1200, 8) COPY (register, 0x12a0, 8)
prepare_axis, (register, 0x1208, 8) COPY (register, 0x12a8, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x74, 8) , (register, 0x20, 8)
prepare_axis, (register, 0x30, 8) COPY (unique, 0x3800, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
prepare_axis, (register, 0x38, 8) COPY (unique, 0x3800, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1228, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40630c, 8)
prepare_axis,  ---  CALL (ram, 0x405d30, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12c8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12a8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12c0, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
prepare_axis, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12c0, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12c0, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x204, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x207, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
prepare_axis,  ---  CBRANCH (ram, 0x406700, 8) , (unique, 0xc580, 1)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1288, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (register, 0x1260, 8) COPY (ram, 0x411698, 8)
prepare_axis, (register, 0x1268, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x12a0, 8)
prepare_axis, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
prepare_axis,  ---  CBRANCH (ram, 0x405fc7, 8) , (unique, 0xc680, 1)
prepare_axis, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1280, 8)
prepare_axis, (register, 0x12c0, 8) COPY (register, 0x12a0, 8)
prepare_axis, (register, 0x12c8, 8) COPY (register, 0x12a8, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12e8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x1260, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x1200, 8) COPY (register, 0x12c0, 8)
prepare_axis, (register, 0x1208, 8) COPY (register, 0x12c8, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (register, 0x12e0, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40637b, 8)
prepare_axis,  ---  CALL (ram, 0x401740, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1268, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x28, 4) TRUNC (register, 0x1200, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x1200, 8) COPY (register, 0x1260, 8)
prepare_axis, (register, 0x1208, 8) COPY (register, 0x1268, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4063a0, 8)
prepare_axis,  ---  CALL (ram, 0x401ae0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x74, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0xb8, 4) COPY (unique, 0xbc80, 4)
prepare_axis, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
prepare_axis, (register, 0xa0, 4) TRUNC (register, 0x1200, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1228, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1288, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x200, 1) INT_LESS (register, 0xb8, 4) , (const, 0x1, 4)
prepare_axis, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 4) , (const, 0x1, 4)
prepare_axis, (unique, 0x28200, 4) INT_SUB (register, 0xb8, 4) , (const, 0x1, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12a8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12c8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
prepare_axis,  ---  CBRANCH (ram, 0x406083, 8) , (unique, 0xc680, 1)
prepare_axis, (register, 0x1240, 8) COPY (ram, 0x4116a8, 8)
prepare_axis, (register, 0x1248, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1220, 8)
prepare_axis,  ---  BRANCH (ram, 0x40611b, 8)
prepare_axis, (register, 0x1200, 8) COPY (register, 0x1240, 8)
prepare_axis, (register, 0x1208, 8) COPY (register, 0x1248, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4063fb, 8)
prepare_axis,  ---  CALL (ram, 0x401700, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x406400, 8)
prepare_axis,  ---  CALL (ram, 0x401ae0, 8)
prepare_axis, (register, 0x8, 4) TRUNC (register, 0x1200, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1248, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12a8, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis,  ---  CBRANCH (ram, 0x4066f0, 8) , (register, 0x207, 1)
prepare_axis, (register, 0x30, 8) COPY (const, 0x0, 8)
prepare_axis,  ---  CBRANCH (ram, 0x406745, 8) , (register, 0x206, 1)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1228, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
prepare_axis, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (register, 0x1260, 8) COPY (ram, 0x411670, 8)
prepare_axis, (register, 0x1268, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
prepare_axis, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
prepare_axis, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1, 4)
prepare_axis, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1, 4)
prepare_axis, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
prepare_axis, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1260, 8)
prepare_axis, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (register, 0x8, 4)
prepare_axis, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (register, 0x8, 4)
prepare_axis, (unique, 0x28600, 4) INT_SUB (register, 0x10, 4) , (register, 0x8, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0xcc00, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
prepare_axis,  ---  CBRANCH (ram, 0x406438, 8) , (unique, 0xcc00, 1)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
prepare_axis,  ---  CBRANCH (ram, 0x406530, 8) , (unique, 0xc680, 1)
prepare_axis, (register, 0x12c0, 8) COPY (ram, 0x411730, 8)
prepare_axis, (register, 0x12c8, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x1200, 8) COPY (register, 0x1220, 8)
prepare_axis, (register, 0x1208, 8) COPY (register, 0x1228, 8)
prepare_axis, (register, 0x1260, 8) COPY (ram, 0x411698, 8)
prepare_axis, (register, 0x1268, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x1200, 8) INT_AND (register, 0x1200, 8) , (register, 0x12c0, 8)
prepare_axis, (register, 0x1208, 8) INT_AND (register, 0x1208, 8) , (register, 0x12c8, 8)
prepare_axis, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1260, 8)
prepare_axis, (register, 0x1280, 8) COPY (register, 0x1240, 8)
prepare_axis, (register, 0x1288, 8) COPY (register, 0x1248, 8)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
prepare_axis, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x1220, 8)
prepare_axis, (register, 0x1280, 8) INT_AND (register, 0x1280, 8) , (register, 0x12c0, 8)
prepare_axis, (register, 0x1288, 8) INT_AND (register, 0x1288, 8) , (register, 0x12c8, 8)
prepare_axis, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
prepare_axis, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1280, 8)
prepare_axis, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
prepare_axis, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1280, 8)
prepare_axis, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
prepare_axis, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1280, 8)
prepare_axis, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x204, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x207, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
prepare_axis, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
prepare_axis,  ---  CBRANCH (ram, 0x4064c3, 8) , (unique, 0xc900, 1)
prepare_axis, (register, 0x1280, 8) COPY (register, 0x1220, 8)
prepare_axis, (register, 0x1288, 8) COPY (register, 0x1228, 8)
prepare_axis, (register, 0x12e0, 8) COPY (register, 0x1240, 8)
prepare_axis, (register, 0x12e8, 8) COPY (register, 0x1248, 8)
prepare_axis, (register, 0x10, 1) COPY (const, 0x1, 1)
prepare_axis, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x1220, 8)
prepare_axis, (register, 0x12e0, 8) FLOAT_SUB (register, 0x12e0, 8) , (register, 0x1280, 8)
prepare_axis, (register, 0x1280, 8) COPY (register, 0x12e0, 8)
prepare_axis, (register, 0x1288, 8) COPY (register, 0x12e8, 8)
prepare_axis, (register, 0x1280, 8) INT_AND (register, 0x1280, 8) , (register, 0x12c0, 8)
prepare_axis, (register, 0x1288, 8) INT_AND (register, 0x1288, 8) , (register, 0x12c8, 8)
prepare_axis, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
prepare_axis, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1280, 8)
prepare_axis, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
prepare_axis, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1280, 8)
prepare_axis, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
prepare_axis, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1280, 8)
prepare_axis, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x204, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x207, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
prepare_axis, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
prepare_axis,  ---  CBRANCH (ram, 0x4064c3, 8) , (unique, 0xc900, 1)
prepare_axis, (register, 0x1280, 8) COPY (ram, 0x4116a0, 8)
prepare_axis, (register, 0x1288, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x12e0, 8) COPY (register, 0x1240, 8)
prepare_axis, (register, 0x12e8, 8) COPY (register, 0x1248, 8)
prepare_axis, (register, 0x10, 1) COPY (const, 0x3, 1)
prepare_axis, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1220, 8)
prepare_axis, (register, 0x12e0, 8) FLOAT_SUB (register, 0x12e0, 8) , (register, 0x1280, 8)
prepare_axis, (register, 0x1280, 8) COPY (register, 0x12e0, 8)
prepare_axis, (register, 0x1288, 8) COPY (register, 0x12e8, 8)
prepare_axis, (register, 0x1280, 8) INT_AND (register, 0x1280, 8) , (register, 0x12c0, 8)
prepare_axis, (register, 0x1288, 8) INT_AND (register, 0x1288, 8) , (register, 0x12c8, 8)
prepare_axis, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
prepare_axis, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1280, 8)
prepare_axis, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
prepare_axis, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1280, 8)
prepare_axis, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
prepare_axis, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1280, 8)
prepare_axis, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x204, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x207, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
prepare_axis,  ---  CBRANCH (ram, 0x406720, 8) , (unique, 0xc780, 1)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x74, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbc80, 4) COPY (register, 0x10, 4)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
prepare_axis,  ---  BRANCH (ram, 0x405fb5, 8)
prepare_axis, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x48, 8)
prepare_axis, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4)
prepare_axis,  ---  BRANCH (ram, 0x406278, 8)
prepare_axis, (register, 0x200, 1) INT_LESS (register, 0xb8, 4) , (const, 0x3, 4)
prepare_axis, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 4) , (const, 0x3, 4)
prepare_axis, (unique, 0x28200, 4) INT_SUB (register, 0xb8, 4) , (const, 0x3, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
prepare_axis, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
prepare_axis, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
prepare_axis,  ---  CBRANCH (ram, 0x406520, 8) , (unique, 0xd080, 1)
prepare_axis, (register, 0x1240, 8) COPY (register, 0x1220, 8)
prepare_axis, (register, 0x1248, 8) COPY (register, 0x1228, 8)
prepare_axis, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (ram, 0x411660, 8)
prepare_axis, (unique, 0x3c80, 8) INT_ADD (const, 0xc0, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
prepare_axis, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
prepare_axis, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
prepare_axis, (register, 0x8, 1) COPY (unique, 0xc680, 1)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12e8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12e0, 8)
prepare_axis, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
prepare_axis, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
prepare_axis, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12e0, 8) , (register, 0x1240, 8)
prepare_axis, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
prepare_axis, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12e0, 8) , (register, 0x1240, 8)
prepare_axis, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x204, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x207, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
prepare_axis, (register, 0x10, 1) COPY (unique, 0xc580, 1)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x10, 1) INT_AND (register, 0x10, 1) , (register, 0x8, 1)
prepare_axis, (register, 0x207, 1) INT_SLESS (register, 0x10, 1) , (const, 0x0, 1)
prepare_axis, (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x12c00, 1) INT_AND (register, 0x10, 1) , (const, 0xff, 1)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis,  ---  CBRANCH (ram, 0x40613c, 8) , (register, 0x206, 1)
prepare_axis, (register, 0x8, 4) COPY (register, 0x10, 4)
prepare_axis, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
prepare_axis, (register, 0x1240, 8) COPY (register, 0x12e0, 8)
prepare_axis, (register, 0x1248, 8) COPY (register, 0x12e8, 8)
prepare_axis,  ---  BRANCH (ram, 0x40613c, 8)
prepare_axis, (register, 0x1240, 8) COPY (register, 0x1220, 8)
prepare_axis, (register, 0x1248, 8) COPY (register, 0x1228, 8)
prepare_axis,  ---  BRANCH (ram, 0x4064f2, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12c8, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x12c0, 8) FLOAT_DIV (register, 0x12c0, 8) , (register, 0x1220, 8)
prepare_axis, (register, 0x1220, 8) COPY (register, 0x12c0, 8)
prepare_axis, (register, 0x1228, 8) COPY (register, 0x12c8, 8)
prepare_axis,  ---  BRANCH (ram, 0x40644b, 8)
prepare_axis, (register, 0x1240, 8) COPY (register, 0x1220, 8)
prepare_axis, (register, 0x1248, 8) COPY (register, 0x1228, 8)
prepare_axis, (register, 0x1200, 8) COPY (register, 0x12c0, 8)
prepare_axis, (register, 0x1208, 8) COPY (register, 0x12c8, 8)
prepare_axis, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (ram, 0x411660, 8)
prepare_axis, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (register, 0x1240, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x406567, 8)
prepare_axis,  ---  CALL (ram, 0x401740, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1248, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1208, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (register, 0x1240, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x406582, 8)
prepare_axis,  ---  CALL (ram, 0x401ae0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1268, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x10, 4) TRUNC (register, 0x1200, 8)
prepare_axis, (register, 0x8, 4) TRUNC (register, 0x1260, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1248, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12c8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1228, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12a8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1288, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (register, 0x8, 4)
prepare_axis, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (register, 0x8, 4)
prepare_axis, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x8, 4)
prepare_axis, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x1d, 4)
prepare_axis, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x1d, 4)
prepare_axis, (unique, 0x28200, 4) INT_SUB (register, 0x10, 4) , (const, 0x1d, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
prepare_axis, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
prepare_axis,  ---  CBRANCH (ram, 0x40611b, 8) , (unique, 0xce80, 1)
prepare_axis,  ---  BRANCH (ram, 0x4063cc, 8)
prepare_axis, (register, 0x1220, 8) COPY (register, 0x12a0, 8)
prepare_axis, (register, 0x1228, 8) COPY (register, 0x12a8, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x1200, 8) COPY (ram, 0x411670, 8)
prepare_axis, (register, 0x1208, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4065dd, 8)
prepare_axis,  ---  CALL (ram, 0x401950, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1228, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x1200, 8) COPY (ram, 0x411670, 8)
prepare_axis, (register, 0x1208, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4065f6, 8)
prepare_axis,  ---  CALL (ram, 0x401950, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1248, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x1280, 8) COPY (register, 0x1200, 8)
prepare_axis, (register, 0x1288, 8) COPY (register, 0x1208, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1268, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x1240, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1260, 8)
prepare_axis, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x1200, 8) COPY (register, 0x1240, 8)
prepare_axis, (register, 0x1208, 8) COPY (register, 0x1248, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x406633, 8)
prepare_axis,  ---  CALL (ram, 0x401ae0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1288, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1228, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0xa0, 4) TRUNC (register, 0x1200, 8)
prepare_axis, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1280, 8)
prepare_axis, (register, 0x1200, 8) COPY (register, 0x1220, 8)
prepare_axis, (register, 0x1208, 8) COPY (register, 0x1228, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x406657, 8)
prepare_axis,  ---  CALL (ram, 0x401740, 8)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (register, 0x28, 4) TRUNC (register, 0x1200, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1268, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12a8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
prepare_axis, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
prepare_axis,  ---  CBRANCH (ram, 0x406690, 8) , (unique, 0xce80, 1)
prepare_axis, (register, 0x1200, 16) INT_XOR (register, 0x1200, 16) , (register, 0x1200, 16)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x1200, 8) INT2FLOAT (register, 0xa0, 4)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x406686, 8)
prepare_axis,  ---  CALL (ram, 0x401700, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1268, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x12a0, 8) COPY (register, 0x1200, 8)
prepare_axis, (register, 0x12a8, 8) COPY (register, 0x1208, 8)
prepare_axis, (register, 0x1200, 16) INT_XOR (register, 0x1200, 16) , (register, 0x1200, 16)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0xa0, 4) INT_XOR (register, 0xa0, 4) , (register, 0xa0, 4)
prepare_axis, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x1200, 8) INT2FLOAT (register, 0x28, 4)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
prepare_axis, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4066b4, 8)
prepare_axis,  ---  CALL (ram, 0x401700, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12a8, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x1280, 8) COPY (register, 0x1200, 8)
prepare_axis, (register, 0x1288, 8) COPY (register, 0x1208, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1268, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x12c0, 8) COPY (register, 0x12a0, 8)
prepare_axis, (register, 0x12c8, 8) COPY (register, 0x12a8, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x12a0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1228, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1280, 8)
prepare_axis, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x1260, 8)
prepare_axis, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1200, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis,  ---  BRANCH (ram, 0x406074, 8)
prepare_axis, (register, 0x200, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x20b, 1) INT_SBORROW (const, 0x0, 4) , (register, 0x8, 4)
prepare_axis, (register, 0x8, 4) INT_2COMP (register, 0x8, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
prepare_axis, (register, 0x30, 8) COPY (const, 0x1, 8)
prepare_axis,  ---  BRANCH (ram, 0x406423, 8)
prepare_axis, (register, 0x12c0, 8) COPY (ram, 0x4111f0, 8)
prepare_axis, (register, 0x12c8, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x74, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis,  ---  BRANCH (ram, 0x406324, 8)
prepare_axis, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (ram, 0x411660, 8)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
prepare_axis, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1220, 8)
prepare_axis, (register, 0x12c0, 8) INT_AND (register, 0x12c0, 8) , (register, 0x1240, 8)
prepare_axis, (register, 0x12c8, 8) INT_AND (register, 0x12c8, 8) , (register, 0x1248, 8)
prepare_axis, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
prepare_axis, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12c0, 8)
prepare_axis, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
prepare_axis, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x12c0, 8)
prepare_axis, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
prepare_axis, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x12c0, 8)
prepare_axis, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x204, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x207, 1) COPY (const, 0x0, 1)
prepare_axis, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
prepare_axis, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
prepare_axis, (register, 0x10, 1) COPY (unique, 0xc900, 1)
prepare_axis, (unique, 0x3480, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8)
prepare_axis, (unique, 0x3580, 8) INT_ADD (const, 0xfffffffffffffffe, 8) , (unique, 0x3480, 8)
prepare_axis, (register, 0x10, 4) SUBPIECE (unique, 0x3580, 8) , (const, 0x0, 4)
prepare_axis, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
prepare_axis,  ---  BRANCH (ram, 0x4064c3, 8)
prepare_axis, (register, 0x1260, 8) COPY (ram, 0x411698, 8)
prepare_axis, (register, 0x1268, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1228, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x1200, 8) COPY (register, 0x1260, 8)
prepare_axis, (register, 0x1208, 8) COPY (register, 0x1268, 8)
prepare_axis, (register, 0x12c0, 8) COPY (ram, 0x411730, 8)
prepare_axis, (register, 0x12c8, 8) COPY (const, 0x0, 8)
prepare_axis,  ---  BRANCH (ram, 0x406467, 8)
prepare_axis, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
prepare_axis, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
prepare_axis, (register, 0x30, 8) COPY (const, 0x411468, 8)
prepare_axis, (register, 0x200, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x20b, 1) COPY (const, 0x0, 1)
prepare_axis, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
prepare_axis, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
prepare_axis, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
prepare_axis, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
prepare_axis, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
prepare_axis, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
prepare_axis, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
prepare_axis, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40677e, 8)
prepare_axis,  ---  CALL (ram, 0x401b10, 8)
prepare_axis, (register, 0x38, 8) COPY (const, 0x1, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x406788, 8)
prepare_axis,  ---  CALL (ram, 0x4017a0, 8)
prepare_axis, (register, 0x1200, 8) COPY (register, 0x12c0, 8)
prepare_axis, (register, 0x1208, 8) COPY (register, 0x12c8, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xba80, 1) COPY (register, 0x10, 1)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xba80, 1)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4067a7, 8)
prepare_axis,  ---  CALL (ram, 0x401740, 8)
prepare_axis, (register, 0x38, 4) TRUNC (register, 0x1200, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1208, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbc80, 4) COPY (register, 0x38, 4)
prepare_axis,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
prepare_axis, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
prepare_axis,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4067ba, 8)
prepare_axis,  ---  CALL (ram, 0x401ae0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1)
prepare_axis, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
prepare_axis, (register, 0x30, 4) TRUNC (register, 0x1200, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1248, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
prepare_axis, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1228, 8) COPY (const, 0x0, 8)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x12a8, 8) COPY (const, 0x0, 8)
prepare_axis, (register, 0x8, 4) COPY (register, 0x10, 4)
prepare_axis, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
prepare_axis, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
prepare_axis, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
prepare_axis, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
prepare_axis, (register, 0x1288, 8) COPY (const, 0x0, 8)
prepare_axis,  ---  BRANCH (ram, 0x4061b0, 8)
plot_errorbar, (unique, 0xe780, 8) COPY (register, 0x28, 8)
plot_errorbar, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_errorbar,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
plot_errorbar, (unique, 0xe780, 8) COPY (register, 0x18, 8)
plot_errorbar, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_errorbar,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
plot_errorbar, (register, 0x18, 8) COPY (register, 0x38, 8)
plot_errorbar, (register, 0x28, 8) COPY (register, 0x30, 8)
plot_errorbar, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x18, 8)
plot_errorbar, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x18, 8)
plot_errorbar, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x18, 8)
plot_errorbar, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
plot_errorbar, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
plot_errorbar, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_errorbar, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_errorbar,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x406804, 8)
plot_errorbar,  ---  CALL (ram, 0x4018e0, 8)
plot_errorbar, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_errorbar, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_errorbar, (register, 0x30, 8) COPY (const, 0x411244, 8)
plot_errorbar, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_errorbar,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x406811, 8)
plot_errorbar,  ---  CALL (ram, 0x401a10, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x10, 8)
plot_errorbar, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
plot_errorbar, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x406bee, 8) , (register, 0x206, 1)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
plot_errorbar, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
plot_errorbar, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x13e0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x13e8, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x407008, 8) , (unique, 0xc680, 1)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x8, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1280, 8) COPY (register, 0x1260, 8)
plot_errorbar, (register, 0x1288, 8) COPY (register, 0x1268, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1340, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1348, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
plot_errorbar, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_errorbar, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1340, 8)
plot_errorbar, (register, 0x13c0, 8) COPY (register, 0x1340, 8)
plot_errorbar, (register, 0x13c8, 8) COPY (register, 0x1348, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1328, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1308, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x12c0, 8) COPY (register, 0x12e0, 8)
plot_errorbar, (register, 0x12c8, 8) COPY (register, 0x12e8, 8)
plot_errorbar, (register, 0x13c0, 8) FLOAT_MULT (register, 0x13c0, 8) , (register, 0x1320, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1220, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x40, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x13a0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x13a8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1300, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (ram, 0x4116a8, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1360, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1368, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1320, 8)
plot_errorbar, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
plot_errorbar,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1380, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1388, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1200, 8) COPY (register, 0x1260, 8)
plot_errorbar, (register, 0x1208, 8) COPY (register, 0x1268, 8)
plot_errorbar, (register, 0x1260, 8) COPY (register, 0x12c0, 8)
plot_errorbar, (register, 0x1268, 8) COPY (register, 0x12c8, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x13e0, 8)
plot_errorbar, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1260, 8) , (register, 0x13c0, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x4068c5, 8) , (unique, 0x79100, 1)
plot_errorbar, (register, 0x1260, 8) COPY (register, 0x13c0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x13a0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x12a0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1200, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x407070, 8) , (register, 0x206, 1)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x18, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x12a0, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1300, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1380, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x12e0, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1360, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x40691a, 8) , (register, 0x206, 1)
plot_errorbar, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1280, 8)
plot_errorbar, (register, 0x1280, 8) COPY (register, 0x1200, 8)
plot_errorbar, (register, 0x1288, 8) COPY (register, 0x1208, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1340, 8)
plot_errorbar, (unique, 0x79100, 1) FLOAT_LESS (register, 0x12c0, 8) , (register, 0x13c0, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x406924, 8) , (unique, 0x79100, 1)
plot_errorbar, (register, 0x12c0, 8) COPY (register, 0x13c0, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1280, 8)
plot_errorbar, (register, 0x13a0, 8) FLOAT_MULT (register, 0x13a0, 8) , (register, 0x12c0, 8)
plot_errorbar, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1320, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
plot_errorbar, (register, 0x13a0, 8) FLOAT_MULT (register, 0x13a0, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x13e0, 8)
plot_errorbar, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x13a0, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x406956, 8) , (register, 0x206, 1)
plot_errorbar, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x12a0, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (register, 0x1200, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (register, 0x1208, 8)
plot_errorbar, (register, 0x1200, 8) COPY (register, 0x1300, 8)
plot_errorbar, (register, 0x1208, 8) COPY (register, 0x1308, 8)
plot_errorbar, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_errorbar, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x12a0, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1380, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x12e0, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1360, 8)
plot_errorbar, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_errorbar,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x406975, 8)
plot_errorbar,  ---  CALL (ram, 0x4019f0, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
plot_errorbar, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
plot_errorbar, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1308, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1328, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x407050, 8) , (register, 0x206, 1)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x8, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x12a0, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
plot_errorbar, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_errorbar, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1340, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1348, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1220, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1380, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1388, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1320, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1360, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1368, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1340, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1300, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x4070e8, 8) , (register, 0x206, 1)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x1380, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (register, 0x1360, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1280, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1280, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1200, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x12e0, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x12c0, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x406a44, 8) , (register, 0x206, 1)
plot_errorbar, (register, 0x13a0, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x13a8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x13a0, 8) FLOAT_SUB (register, 0x13a0, 8) , (register, 0x12a0, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (register, 0x13a0, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (register, 0x13a8, 8)
plot_errorbar, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12a0, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1320, 8)
plot_errorbar, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1340, 8)
plot_errorbar, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1300, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x4070d0, 8) , (register, 0x206, 1)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x18, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1308, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1300, 8) FLOAT_SUB (register, 0x1300, 8) , (register, 0x1380, 8)
plot_errorbar, (register, 0x1300, 8) FLOAT_DIV (register, 0x1300, 8) , (register, 0x1360, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (register, 0x1300, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x12a0, 8)
plot_errorbar, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_errorbar, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x1200, 8)
plot_errorbar, (register, 0x12e0, 8) FLOAT_MULT (register, 0x12e0, 8) , (register, 0x1280, 8)
plot_errorbar, (register, 0x1200, 8) COPY (register, 0x12e0, 8)
plot_errorbar, (register, 0x1208, 8) COPY (register, 0x12e8, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12c0, 8)
plot_errorbar, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_errorbar,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x406a98, 8)
plot_errorbar,  ---  CALL (ram, 0x4019f0, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
plot_errorbar, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
plot_errorbar, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x13e0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x13e8, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x4070b0, 8) , (register, 0x206, 1)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x8, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1280, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1340, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1348, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
plot_errorbar, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_errorbar, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1308, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1340, 8)
plot_errorbar, (register, 0x13c0, 8) COPY (register, 0x1340, 8)
plot_errorbar, (register, 0x13c8, 8) COPY (register, 0x1348, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1328, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x12c0, 8) COPY (register, 0x1300, 8)
plot_errorbar, (register, 0x12c8, 8) COPY (register, 0x1308, 8)
plot_errorbar, (register, 0x13c0, 8) FLOAT_MULT (register, 0x13c0, 8) , (register, 0x12e0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1220, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x40, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1380, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1388, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1320, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1360, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1368, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x13a0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x13a8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x12e0, 8)
plot_errorbar, (register, 0x1200, 8) COPY (register, 0x1260, 8)
plot_errorbar, (register, 0x1208, 8) COPY (register, 0x1268, 8)
plot_errorbar, (register, 0x1260, 8) COPY (register, 0x12c0, 8)
plot_errorbar, (register, 0x1268, 8) COPY (register, 0x12c8, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x13e0, 8)
plot_errorbar, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1260, 8) , (register, 0x13c0, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x406b3c, 8) , (unique, 0x79100, 1)
plot_errorbar, (register, 0x1260, 8) COPY (register, 0x13c0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1380, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1200, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x407090, 8) , (register, 0x206, 1)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x12a0, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1320, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x13a0, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1300, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1360, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x406b93, 8) , (register, 0x206, 1)
plot_errorbar, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1280, 8)
plot_errorbar, (register, 0x1280, 8) COPY (register, 0x1200, 8)
plot_errorbar, (register, 0x1288, 8) COPY (register, 0x1208, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1340, 8)
plot_errorbar, (unique, 0x79100, 1) FLOAT_LESS (register, 0x12c0, 8) , (register, 0x13c0, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x406b9d, 8) , (unique, 0x79100, 1)
plot_errorbar, (register, 0x12c0, 8) COPY (register, 0x13c0, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1280, 8)
plot_errorbar, (register, 0x1380, 8) FLOAT_MULT (register, 0x1380, 8) , (register, 0x12c0, 8)
plot_errorbar, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12e0, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
plot_errorbar, (register, 0x1380, 8) FLOAT_MULT (register, 0x1380, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x13e0, 8)
plot_errorbar, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1380, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x406bce, 8) , (register, 0x206, 1)
plot_errorbar, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x12a0, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (register, 0x1200, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (register, 0x1208, 8)
plot_errorbar, (register, 0x1200, 8) COPY (register, 0x1320, 8)
plot_errorbar, (register, 0x1208, 8) COPY (register, 0x1328, 8)
plot_errorbar, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_errorbar, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x12a0, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x13a0, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1300, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1360, 8)
plot_errorbar, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_errorbar,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x406bee, 8)
plot_errorbar,  ---  CALL (ram, 0x4019f0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x14, 8)
plot_errorbar, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_errorbar, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x406fd0, 8) , (register, 0x206, 1)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
plot_errorbar, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
plot_errorbar, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x13e0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x13e8, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x406fe0, 8) , (unique, 0xc680, 1)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x28, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (register, 0x1260, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (register, 0x1268, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1360, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1368, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
plot_errorbar, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_errorbar, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1340, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1348, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1360, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x13c0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x13c8, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1220, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1340, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x13e0, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x407030, 8) , (register, 0x206, 1)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_errorbar, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x12c0, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x1280, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1328, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x13a0, 8) COPY (register, 0x1360, 8)
plot_errorbar, (register, 0x13a8, 8) COPY (register, 0x1368, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1308, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (register, 0x12e0, 8) COPY (register, 0x1320, 8)
plot_errorbar, (register, 0x12e8, 8) COPY (register, 0x1328, 8)
plot_errorbar, (register, 0x13a0, 8) FLOAT_MULT (register, 0x13a0, 8) , (register, 0x1340, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1320, 8)
plot_errorbar, (register, 0x12e0, 8) FLOAT_MULT (register, 0x12e0, 8) , (register, 0x1300, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x40, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1380, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1388, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_ADD (register, 0x12c0, 8) , (register, 0x1200, 8)
plot_errorbar, (register, 0x1240, 8) COPY (register, 0x12e0, 8)
plot_errorbar, (register, 0x1248, 8) COPY (register, 0x12e8, 8)
plot_errorbar, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x13a0, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x406cbe, 8) , (unique, 0x79100, 1)
plot_errorbar, (register, 0x1240, 8) COPY (register, 0x13a0, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1300, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1380, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_ADD (register, 0x12c0, 8) , (register, 0x13c0, 8)
plot_errorbar, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_errorbar, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
plot_errorbar,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1240, 8) COPY (ram, 0x4116a8, 8)
plot_errorbar, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
plot_errorbar,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x12c0, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x406cfc, 8) , (register, 0x206, 1)
plot_errorbar, (register, 0x12c0, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x12a0, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (register, 0x12c0, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (register, 0x12c8, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x1360, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x12a0, 8)
plot_errorbar, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1340, 8)
plot_errorbar, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x13e0, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x406d23, 8) , (register, 0x206, 1)
plot_errorbar, (register, 0x12a0, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (register, 0x1280, 8)
plot_errorbar, (register, 0x1280, 8) COPY (register, 0x12a0, 8)
plot_errorbar, (register, 0x1288, 8) COPY (register, 0x12a8, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1320, 8)
plot_errorbar, (unique, 0x79100, 1) FLOAT_LESS (register, 0x12e0, 8) , (register, 0x13a0, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x406d2d, 8) , (unique, 0x79100, 1)
plot_errorbar, (register, 0x12e0, 8) COPY (register, 0x13a0, 8)
plot_errorbar, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_errorbar, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
plot_errorbar, (register, 0x1380, 8) FLOAT_MULT (register, 0x1380, 8) , (register, 0x12e0, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1300, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
plot_errorbar, (register, 0x1380, 8) FLOAT_MULT (register, 0x1380, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x13c0, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1380, 8)
plot_errorbar, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_errorbar,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x406d53, 8)
plot_errorbar,  ---  CALL (ram, 0x4019f0, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
plot_errorbar, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
plot_errorbar, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1340, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1348, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x13a0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x13a8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1380, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1388, 8) COPY (const, 0x0, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x407160, 8) , (register, 0x206, 1)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x13a0, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (register, 0x1380, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1200, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
plot_errorbar, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_errorbar, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1360, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1368, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x12a0, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1308, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1220, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1360, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1340, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x407140, 8) , (register, 0x206, 1)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_errorbar, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1280, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1328, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1320, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x28, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x13a0, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1300, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_DIV (register, 0x12c0, 8) , (register, 0x1380, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1200, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x12e0, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x406e32, 8) , (register, 0x206, 1)
plot_errorbar, (register, 0x1380, 8) COPY (register, 0x12c0, 8)
plot_errorbar, (register, 0x1388, 8) COPY (register, 0x12c8, 8)
plot_errorbar, (register, 0x12c0, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x1380, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x12c0, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (register, 0x12a0, 8) FLOAT_ADD (register, 0x12a0, 8) , (register, 0x1220, 8)
plot_errorbar, (register, 0x1220, 8) COPY (register, 0x1360, 8)
plot_errorbar, (register, 0x1228, 8) COPY (register, 0x1368, 8)
plot_errorbar, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12a0, 8)
plot_errorbar, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1340, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x406e5c, 8) , (register, 0x206, 1)
plot_errorbar, (register, 0x12a0, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (register, 0x1280, 8)
plot_errorbar, (register, 0x1280, 8) COPY (register, 0x12a0, 8)
plot_errorbar, (register, 0x1288, 8) COPY (register, 0x12a8, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (register, 0x1320, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (register, 0x1328, 8)
plot_errorbar, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_errorbar, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x1280, 8)
plot_errorbar, (register, 0x1280, 8) COPY (register, 0x1300, 8)
plot_errorbar, (register, 0x1288, 8) COPY (register, 0x1308, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x12a0, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1200, 8)
plot_errorbar, (register, 0x12e0, 8) FLOAT_ADD (register, 0x12e0, 8) , (register, 0x1280, 8)
plot_errorbar, (register, 0x1200, 8) COPY (register, 0x12e0, 8)
plot_errorbar, (register, 0x1208, 8) COPY (register, 0x12e8, 8)
plot_errorbar, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_errorbar,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x406e82, 8)
plot_errorbar,  ---  CALL (ram, 0x4019f0, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
plot_errorbar, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
plot_errorbar, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x13e0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x13e8, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar,  ---  CBRANCH (ram, 0x407120, 8) , (register, 0x206, 1)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x12a0, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1360, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1368, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
plot_errorbar, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_errorbar, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1340, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1348, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1360, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x13c0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x13c8, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1220, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1340, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x13e0, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x407100, 8) , (register, 0x206, 1)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_errorbar, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x12c0, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x1280, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1328, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x13a0, 8) COPY (register, 0x1360, 8)
plot_errorbar, (register, 0x13a8, 8) COPY (register, 0x1368, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1308, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (register, 0x12e0, 8) COPY (register, 0x1320, 8)
plot_errorbar, (register, 0x12e8, 8) COPY (register, 0x1328, 8)
plot_errorbar, (register, 0x13a0, 8) FLOAT_MULT (register, 0x13a0, 8) , (register, 0x1340, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1320, 8)
plot_errorbar, (register, 0x12e0, 8) FLOAT_MULT (register, 0x12e0, 8) , (register, 0x1300, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x40, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1380, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1388, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_ADD (register, 0x12c0, 8) , (register, 0x1200, 8)
plot_errorbar, (register, 0x1240, 8) COPY (register, 0x12e0, 8)
plot_errorbar, (register, 0x1248, 8) COPY (register, 0x12e8, 8)
plot_errorbar, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x13a0, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x406f4f, 8) , (unique, 0x79100, 1)
plot_errorbar, (register, 0x1240, 8) COPY (register, 0x13a0, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1300, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1380, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_ADD (register, 0x12c0, 8) , (register, 0x13c0, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x12c0, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x406f79, 8) , (register, 0x206, 1)
plot_errorbar, (register, 0x12c0, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x12a0, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (register, 0x12c0, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (register, 0x12c8, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x1360, 8)
plot_errorbar, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_errorbar, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_errorbar, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_errorbar, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_errorbar, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x12a0, 8)
plot_errorbar, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1340, 8)
plot_errorbar, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x13e0, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x406fa0, 8) , (register, 0x206, 1)
plot_errorbar, (register, 0x12a0, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (register, 0x1280, 8)
plot_errorbar, (register, 0x1280, 8) COPY (register, 0x12a0, 8)
plot_errorbar, (register, 0x1288, 8) COPY (register, 0x12a8, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1320, 8)
plot_errorbar, (unique, 0x79100, 1) FLOAT_LESS (register, 0x12e0, 8) , (register, 0x13a0, 8)
plot_errorbar,  ---  CBRANCH (ram, 0x406faa, 8) , (unique, 0x79100, 1)
plot_errorbar, (register, 0x12e0, 8) COPY (register, 0x13a0, 8)
plot_errorbar, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_errorbar, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
plot_errorbar, (register, 0x1380, 8) FLOAT_MULT (register, 0x1380, 8) , (register, 0x12e0, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1300, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
plot_errorbar, (register, 0x1380, 8) FLOAT_MULT (register, 0x1380, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x13c0, 8)
plot_errorbar, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1380, 8)
plot_errorbar, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_errorbar,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x406fd0, 8)
plot_errorbar,  ---  CALL (ram, 0x4019f0, 8)
plot_errorbar, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_errorbar, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_errorbar, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x18, 8)
plot_errorbar, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x18, 8)
plot_errorbar, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x18, 8)
plot_errorbar, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
plot_errorbar, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
plot_errorbar, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
plot_errorbar, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_errorbar, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_errorbar, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_errorbar, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_errorbar, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_errorbar, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_errorbar, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_errorbar,  ---  BRANCH (ram, 0x401860, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x28, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x12a0, 8)
plot_errorbar,  ---  BRANCH (ram, 0x406c2e, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x8, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
plot_errorbar, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1280, 8)
plot_errorbar,  ---  BRANCH (ram, 0x406851, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_errorbar, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_DIV (register, 0x12c0, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1280, 8) COPY (register, 0x12c0, 8)
plot_errorbar, (register, 0x1288, 8) COPY (register, 0x12c8, 8)
plot_errorbar,  ---  BRANCH (ram, 0x406c84, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x8, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (register, 0x1260, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (register, 0x1268, 8)
plot_errorbar,  ---  BRANCH (ram, 0x4069b3, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x18, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (register, 0x1240, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (register, 0x1248, 8)
plot_errorbar,  ---  BRANCH (ram, 0x4068f3, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (register, 0x1240, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (register, 0x1248, 8)
plot_errorbar,  ---  BRANCH (ram, 0x406b6b, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x8, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1280, 8) COPY (register, 0x1260, 8)
plot_errorbar, (register, 0x1288, 8) COPY (register, 0x1268, 8)
plot_errorbar,  ---  BRANCH (ram, 0x406ad5, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x18, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (register, 0x1380, 8)
plot_errorbar, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (register, 0x1360, 8)
plot_errorbar,  ---  BRANCH (ram, 0x406a7c, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1380, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (register, 0x1360, 8)
plot_errorbar,  ---  BRANCH (ram, 0x406a13, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_errorbar, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x12c0, 8) FLOAT_DIV (register, 0x12c0, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1280, 8) COPY (register, 0x12c0, 8)
plot_errorbar, (register, 0x1288, 8) COPY (register, 0x12c8, 8)
plot_errorbar,  ---  BRANCH (ram, 0x406f15, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x12a0, 8) COPY (register, 0x1260, 8)
plot_errorbar, (register, 0x12a8, 8) COPY (register, 0x1268, 8)
plot_errorbar,  ---  BRANCH (ram, 0x406ebf, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_errorbar, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_errorbar, (register, 0x1280, 8) COPY (register, 0x1240, 8)
plot_errorbar, (register, 0x1288, 8) COPY (register, 0x1248, 8)
plot_errorbar,  ---  BRANCH (ram, 0x406df0, 8)
plot_errorbar, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_errorbar, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_errorbar, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_errorbar, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x13a0, 8)
plot_errorbar, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (register, 0x1380, 8)
plot_errorbar,  ---  BRANCH (ram, 0x406d9c, 8)
print_tick_label, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
print_tick_label, (unique, 0xe780, 8) COPY (register, 0x28, 8)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
print_tick_label, (register, 0x28, 8) COPY (register, 0x30, 8)
print_tick_label, (unique, 0xe780, 8) COPY (register, 0x18, 8)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
print_tick_label, (register, 0x1240, 8) COPY (register, 0x1200, 8)
print_tick_label, (register, 0x1248, 8) COPY (register, 0x1208, 8)
print_tick_label, (register, 0x18, 8) COPY (register, 0x38, 8)
print_tick_label, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0xf0, 8)
print_tick_label, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0xf0, 8)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0xf0, 8)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
print_tick_label, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x18, 8)
print_tick_label, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
print_tick_label, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x1, 4)
print_tick_label, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
print_tick_label, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x1, 4)
print_tick_label, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
print_tick_label, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x1, 4)
print_tick_label, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
print_tick_label, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
print_tick_label,  ---  CBRANCH (ram, 0x4074c0, 8) , (register, 0x206, 1)
print_tick_label, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
print_tick_label, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
print_tick_label, (register, 0x1228, 8) COPY (const, 0x0, 8)
print_tick_label, (register, 0x1280, 16) INT_XOR (register, 0x1280, 16) , (register, 0x1280, 16)
print_tick_label, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
print_tick_label, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1280, 8)
print_tick_label, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
print_tick_label, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (register, 0x1280, 8)
print_tick_label, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
print_tick_label, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1280, 8)
print_tick_label, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x204, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x207, 1) COPY (const, 0x0, 1)
print_tick_label,  ---  CBRANCH (ram, 0x407278, 8) , (register, 0x202, 1)
print_tick_label, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
print_tick_label,  ---  CBRANCH (ram, 0x407278, 8) , (unique, 0xc680, 1)
print_tick_label, (register, 0x12a0, 16) INT_XOR (register, 0x12a0, 16) , (register, 0x12a0, 16)
print_tick_label, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
print_tick_label, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12a0, 8)
print_tick_label, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
print_tick_label, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (register, 0x12a0, 8)
print_tick_label, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
print_tick_label, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (register, 0x12a0, 8)
print_tick_label, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x204, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x207, 1) COPY (const, 0x0, 1)
print_tick_label,  ---  CBRANCH (ram, 0x407430, 8) , (register, 0x202, 1)
print_tick_label, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
print_tick_label,  ---  CBRANCH (ram, 0x407430, 8) , (unique, 0xc680, 1)
print_tick_label, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x18, 8)
print_tick_label, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
print_tick_label, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
print_tick_label, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
print_tick_label, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
print_tick_label, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
print_tick_label, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
print_tick_label, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label,  ---  CBRANCH (ram, 0x407260, 8) , (register, 0x206, 1)
print_tick_label, (register, 0x200, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
print_tick_label, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
print_tick_label,  ---  CBRANCH (ram, 0x40726b, 8) , (unique, 0xc680, 1)
print_tick_label, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
print_tick_label, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
print_tick_label, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
print_tick_label, (register, 0x1208, 8) COPY (const, 0x0, 8)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x38, 8) COPY (unique, 0x3800, 8)
print_tick_label, (register, 0x30, 8) COPY (const, 0x4115ba, 8)
print_tick_label, (register, 0x0, 8) COPY (const, 0x1, 8)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4071fe, 8)
print_tick_label,  ---  CALL (ram, 0x401920, 8)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x38, 8) COPY (unique, 0x3800, 8)
print_tick_label, (register, 0x30, 8) COPY (const, 0x2e, 8)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40720d, 8)
print_tick_label,  ---  CALL (ram, 0x401990, 8)
print_tick_label, (register, 0x200, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
print_tick_label, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
print_tick_label, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
print_tick_label, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label,  ---  CBRANCH (ram, 0x407510, 8) , (register, 0x206, 1)
print_tick_label, (register, 0x8, 8) COPY (register, 0x0, 8)
print_tick_label, (register, 0x200, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
print_tick_label, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label,  ---  BRANCH (ram, 0x40722e, 8)
print_tick_label, (register, 0x80, 4) COPY (register, 0x8, 4)
print_tick_label, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
print_tick_label, (register, 0x200, 1) INT_LESS (register, 0x80, 4) , (register, 0x0, 4)
print_tick_label, (register, 0x20b, 1) INT_SBORROW (register, 0x80, 4) , (register, 0x0, 4)
print_tick_label, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (register, 0x0, 4)
print_tick_label, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x12c00, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (register, 0x200, 1) INT_LESS (register, 0x30, 1) , (const, 0x30, 1)
print_tick_label, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 1) , (const, 0x30, 1)
print_tick_label, (unique, 0x27d00, 1) INT_SUB (register, 0x30, 1) , (const, 0x30, 1)
print_tick_label, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
print_tick_label, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
print_tick_label, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
print_tick_label, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
print_tick_label,  ---  CBRANCH (ram, 0x40722e, 8) , (unique, 0x27780, 1)
print_tick_label, (register, 0x10, 4) COPY (register, 0x80, 4)
print_tick_label, (register, 0x200, 1) INT_CARRY (register, 0x8, 8) , (const, 0x1, 8)
print_tick_label, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 8) , (const, 0x1, 8)
print_tick_label, (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
print_tick_label, (unique, 0x12c00, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
print_tick_label, (register, 0x30, 4) INT_ZEXT (unique, 0xbb00, 1)
print_tick_label, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
print_tick_label, (register, 0x200, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (unique, 0x59000, 1) INT_AND (register, 0x30, 1) , (register, 0x30, 1)
print_tick_label, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
print_tick_label, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
print_tick_label,  ---  CBRANCH (ram, 0x407220, 8) , (unique, 0xc680, 1)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
print_tick_label, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
print_tick_label, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
print_tick_label, (register, 0x1208, 8) COPY (const, 0x0, 8)
print_tick_label, (register, 0x30, 8) COPY (const, 0x4115bf, 8)
print_tick_label, (register, 0x38, 8) COPY (register, 0x18, 8)
print_tick_label, (register, 0x0, 8) COPY (const, 0x1, 8)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x407252, 8)
print_tick_label,  ---  CALL (ram, 0x401920, 8)
print_tick_label, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0xf0, 8)
print_tick_label, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0xf0, 8)
print_tick_label, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0xf0, 8)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
print_tick_label, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  RETURN (register, 0x288, 8)
print_tick_label, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x4c, 8)
print_tick_label, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
print_tick_label, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
print_tick_label, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
print_tick_label, (register, 0x200, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
print_tick_label, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label,  ---  CBRANCH (ram, 0x407527, 8) , (register, 0x206, 1)
print_tick_label, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x50, 8)
print_tick_label, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
print_tick_label, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
print_tick_label, (register, 0x1208, 8) COPY (const, 0x0, 8)
print_tick_label,  ---  BRANCH (ram, 0x4071ea, 8)
print_tick_label, (register, 0x1260, 8) COPY (ram, 0x411730, 8)
print_tick_label, (register, 0x1268, 8) COPY (const, 0x0, 8)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
print_tick_label, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
print_tick_label, (register, 0x1240, 8) INT_AND (register, 0x1240, 8) , (register, 0x1260, 8)
print_tick_label, (register, 0x1248, 8) INT_AND (register, 0x1248, 8) , (register, 0x1268, 8)
print_tick_label, (unique, 0x5300, 16) COPY (register, 0x1260, 16)
print_tick_label,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5300, 16)
print_tick_label, (register, 0x1200, 8) COPY (register, 0x1240, 8)
print_tick_label, (register, 0x1208, 8) COPY (register, 0x1248, 8)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x407297, 8)
print_tick_label,  ---  CALL (ram, 0x401700, 8)
print_tick_label, (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
print_tick_label, (unique, 0x79300, 16) COPY (unique, 0x5300, 16)
print_tick_label, (register, 0x1260, 8) SUBPIECE (unique, 0x79300, 16) , (const, 0x0, 4)
print_tick_label, (register, 0x1268, 8) SUBPIECE (unique, 0x79300, 16) , (const, 0x8, 4)
print_tick_label, (register, 0x1200, 8) INT_AND (register, 0x1200, 8) , (register, 0x1260, 8)
print_tick_label, (register, 0x1208, 8) INT_AND (register, 0x1208, 8) , (register, 0x1268, 8)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
print_tick_label, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
print_tick_label, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
print_tick_label, (register, 0x1228, 8) COPY (const, 0x0, 8)
print_tick_label, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
print_tick_label, (unique, 0x18300, 1) FLOAT_NAN (ram, 0x4116b8, 8)
print_tick_label, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
print_tick_label, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (ram, 0x4116b8, 8)
print_tick_label, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
print_tick_label, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (ram, 0x4116b8, 8)
print_tick_label, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x204, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x207, 1) COPY (const, 0x0, 1)
print_tick_label,  ---  CBRANCH (ram, 0x4071bd, 8) , (register, 0x200, 1)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
print_tick_label, (register, 0xa0, 8) COPY (unique, 0x3800, 8)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
print_tick_label, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
print_tick_label, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
print_tick_label, (register, 0x1208, 8) COPY (const, 0x0, 8)
print_tick_label, (register, 0x30, 8) COPY (const, 0x4115c4, 8)
print_tick_label, (register, 0x0, 8) COPY (const, 0x1, 8)
print_tick_label, (register, 0x38, 8) COPY (register, 0xa0, 8)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4072d1, 8)
print_tick_label,  ---  CALL (ram, 0x401920, 8)
print_tick_label, (register, 0x30, 8) COPY (const, 0x65, 8)
print_tick_label, (register, 0x38, 8) COPY (register, 0xa0, 8)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4072de, 8)
print_tick_label,  ---  CALL (ram, 0x401990, 8)
print_tick_label, (register, 0x200, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
print_tick_label, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
print_tick_label, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
print_tick_label, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label,  ---  CBRANCH (ram, 0x407252, 8) , (register, 0x206, 1)
print_tick_label, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x18, 8)
print_tick_label, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
print_tick_label, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x1, 4)
print_tick_label, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
print_tick_label, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x1, 4)
print_tick_label, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
print_tick_label, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x1, 4)
print_tick_label, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label,  ---  CBRANCH (ram, 0x407480, 8) , (register, 0x206, 1)
print_tick_label, (register, 0x12e0, 16) INT_XOR (register, 0x12e0, 16) , (register, 0x12e0, 16)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
print_tick_label, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
print_tick_label, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
print_tick_label, (register, 0x12c8, 8) COPY (const, 0x0, 8)
print_tick_label, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12c0, 8)
print_tick_label, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12e0, 8)
print_tick_label, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
print_tick_label, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12c0, 8) , (register, 0x12e0, 8)
print_tick_label, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
print_tick_label, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12c0, 8) , (register, 0x12e0, 8)
print_tick_label, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x204, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x207, 1) COPY (const, 0x0, 1)
print_tick_label,  ---  CBRANCH (ram, 0x407307, 8) , (register, 0x202, 1)
print_tick_label,  ---  CBRANCH (ram, 0x407468, 8) , (register, 0x206, 1)
print_tick_label, (unique, 0x3c80, 8) INT_ADD (const, 0xb0, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x38, 8) COPY (unique, 0x3c80, 8)
print_tick_label, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0xa0, 8)
print_tick_label, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0xa0, 8)
print_tick_label, (unique, 0x28700, 8) INT_SUB (register, 0x0, 8) , (register, 0xa0, 8)
print_tick_label, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
print_tick_label, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
print_tick_label, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (register, 0x10, 8) COPY (register, 0x38, 8)
print_tick_label, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
print_tick_label,  ---  CBRANCH (ram, 0x40734b, 8) , (unique, 0xc780, 1)
print_tick_label, (register, 0x30, 8) COPY (register, 0x0, 8)
print_tick_label, (unique, 0x3c80, 8) INT_ADD (const, 0xb0, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x38, 8) COPY (unique, 0x3c80, 8)
print_tick_label, (register, 0x200, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
print_tick_label, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0xa0, 8)
print_tick_label, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (register, 0xa0, 8)
print_tick_label, (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (register, 0xa0, 8)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
print_tick_label, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
print_tick_label, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
print_tick_label, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x1, 8)
print_tick_label, (unique, 0x3400, 8) INT_ADD (register, 0xa0, 8) , (unique, 0x3300, 8)
print_tick_label, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
print_tick_label, (register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1)
print_tick_label, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
print_tick_label, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x1, 8)
print_tick_label, (unique, 0x3400, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8)
print_tick_label, (unique, 0xba80, 1) COPY (register, 0x8, 1)
print_tick_label,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xba80, 1)
print_tick_label, (register, 0x200, 1) INT_CARRY (register, 0x10, 8) , (const, 0x1, 8)
print_tick_label, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 8) , (const, 0x1, 8)
print_tick_label, (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
print_tick_label, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x30, 8)
print_tick_label, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (register, 0x30, 8)
print_tick_label, (unique, 0x28700, 8) INT_SUB (register, 0x10, 8) , (register, 0x30, 8)
print_tick_label, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
print_tick_label, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
print_tick_label, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
print_tick_label,  ---  CBRANCH (ram, 0x407330, 8) , (unique, 0xc680, 1)
print_tick_label, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0xa0, 8)
print_tick_label, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0xa0, 8)
print_tick_label, (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0xa0, 8)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
print_tick_label, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
print_tick_label, (unique, 0x3400, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8)
print_tick_label, (register, 0x10, 8) COPY (unique, 0x3400, 8)
print_tick_label, (register, 0x200, 1) INT_CARRY (register, 0xa0, 8) , (register, 0x0, 8)
print_tick_label, (register, 0x20b, 1) INT_SCARRY (register, 0xa0, 8) , (register, 0x0, 8)
print_tick_label, (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (register, 0x0, 8)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)
print_tick_label, (unique, 0x12c00, 8) INT_AND (register, 0xa0, 8) , (const, 0xff, 8)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0xbb00, 1) COPY (const, 0x0, 1)
print_tick_label,  ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbb00, 1)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x10, 8) COPY (unique, 0x3800, 8)
print_tick_label, (register, 0x30, 8) COPY (const, 0x41128e, 8)
print_tick_label, (register, 0x200, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
print_tick_label, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40735f, 8)
print_tick_label,  ---  CALL (ram, 0x401780, 8)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x24, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x10, 8) COPY (unique, 0x3800, 8)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x1, 8) , (register, 0xa0, 8)
print_tick_label, (register, 0x38, 8) COPY (unique, 0x3800, 8)
print_tick_label, (register, 0x200, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
print_tick_label, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (register, 0x30, 8) COPY (const, 0x411280, 8)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x407375, 8)
print_tick_label,  ---  CALL (ram, 0x401780, 8)
print_tick_label, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x18, 8)
print_tick_label, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
print_tick_label, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
print_tick_label, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
print_tick_label, (register, 0x200, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
print_tick_label, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
print_tick_label,  ---  CBRANCH (ram, 0x407517, 8) , (unique, 0xc680, 1)
print_tick_label, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
print_tick_label, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
print_tick_label, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
print_tick_label, (register, 0x12e8, 8) COPY (const, 0x0, 8)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
print_tick_label, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
print_tick_label, (register, 0x1220, 16) INT_XOR (register, 0x1220, 16) , (register, 0x1220, 16)
print_tick_label, (register, 0x1200, 8) COPY (ram, 0x411670, 8)
print_tick_label, (register, 0x1208, 8) COPY (const, 0x0, 8)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x24, 8) , (register, 0x20, 8)
print_tick_label, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
print_tick_label, (register, 0x1220, 8) INT2FLOAT (unique, 0xbc80, 4)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4073a2, 8)
print_tick_label,  ---  CALL (ram, 0x401950, 8)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
print_tick_label, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
print_tick_label, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
print_tick_label, (register, 0x12c8, 8) COPY (const, 0x0, 8)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x38, 8) COPY (unique, 0x3800, 8)
print_tick_label, (register, 0x30, 8) COPY (const, 0x41159d, 8)
print_tick_label, (register, 0x0, 8) COPY (const, 0x1, 8)
print_tick_label, (register, 0x12c0, 8) FLOAT_DIV (register, 0x12c0, 8) , (register, 0x1200, 8)
print_tick_label, (register, 0x1200, 8) COPY (register, 0x12c0, 8)
print_tick_label, (register, 0x1208, 8) COPY (register, 0x12c8, 8)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4073c4, 8)
print_tick_label,  ---  CALL (ram, 0x401920, 8)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x70, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x38, 8) COPY (unique, 0x3800, 8)
print_tick_label, (register, 0x30, 8) COPY (const, 0x2e, 8)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4073d3, 8)
print_tick_label,  ---  CALL (ram, 0x401990, 8)
print_tick_label, (register, 0x200, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
print_tick_label, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
print_tick_label, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
print_tick_label, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label,  ---  CBRANCH (ram, 0x407544, 8) , (register, 0x206, 1)
print_tick_label, (register, 0x8, 8) COPY (register, 0x0, 8)
print_tick_label, (register, 0x200, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
print_tick_label, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label,  ---  BRANCH (ram, 0x4073f3, 8)
print_tick_label, (register, 0x38, 4) COPY (register, 0x8, 4)
print_tick_label, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
print_tick_label, (register, 0x200, 1) INT_LESS (register, 0x38, 4) , (register, 0x0, 4)
print_tick_label, (register, 0x20b, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x0, 4)
print_tick_label, (register, 0x38, 4) INT_SUB (register, 0x38, 4) , (register, 0x0, 4)
print_tick_label, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x12c00, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (register, 0x200, 1) INT_LESS (register, 0x30, 1) , (const, 0x30, 1)
print_tick_label, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 1) , (const, 0x30, 1)
print_tick_label, (unique, 0x27d00, 1) INT_SUB (register, 0x30, 1) , (const, 0x30, 1)
print_tick_label, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
print_tick_label, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
print_tick_label, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
print_tick_label, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
print_tick_label,  ---  CBRANCH (ram, 0x4073f3, 8) , (unique, 0x27780, 1)
print_tick_label, (register, 0x10, 4) COPY (register, 0x38, 4)
print_tick_label, (register, 0x200, 1) INT_CARRY (register, 0x8, 8) , (const, 0x1, 8)
print_tick_label, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 8) , (const, 0x1, 8)
print_tick_label, (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
print_tick_label, (unique, 0x12c00, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
print_tick_label, (register, 0x30, 4) INT_ZEXT (unique, 0xbb00, 1)
print_tick_label, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
print_tick_label, (register, 0x200, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (unique, 0x59000, 1) INT_AND (register, 0x30, 1) , (register, 0x30, 1)
print_tick_label, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
print_tick_label, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
print_tick_label,  ---  CBRANCH (ram, 0x4073e8, 8) , (unique, 0xc680, 1)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x24, 8) , (register, 0x20, 8)
print_tick_label, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
print_tick_label, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
print_tick_label, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
print_tick_label, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
print_tick_label, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
print_tick_label, (register, 0x1208, 8) COPY (const, 0x0, 8)
print_tick_label, (register, 0x38, 8) COPY (register, 0x18, 8)
print_tick_label, (register, 0x30, 8) COPY (const, 0x4115a0, 8)
print_tick_label, (register, 0x0, 8) COPY (const, 0x1, 8)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40741b, 8)
print_tick_label,  ---  CALL (ram, 0x401920, 8)
print_tick_label, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0xf0, 8)
print_tick_label, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0xf0, 8)
print_tick_label, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0xf0, 8)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
print_tick_label, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  RETURN (register, 0x288, 8)
print_tick_label, (register, 0x1240, 8) COPY (ram, 0x411730, 8)
print_tick_label, (register, 0x1248, 8) COPY (const, 0x0, 8)
print_tick_label, (register, 0x1220, 8) INT_AND (register, 0x1220, 8) , (register, 0x1240, 8)
print_tick_label, (register, 0x1228, 8) INT_AND (register, 0x1228, 8) , (register, 0x1248, 8)
print_tick_label, (unique, 0x5300, 16) COPY (register, 0x1240, 16)
print_tick_label,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5300, 16)
print_tick_label, (register, 0x1200, 8) COPY (register, 0x1220, 8)
print_tick_label, (register, 0x1208, 8) COPY (register, 0x1228, 8)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x407449, 8)
print_tick_label,  ---  CALL (ram, 0x401700, 8)
print_tick_label, (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
print_tick_label, (unique, 0x79300, 16) COPY (unique, 0x5300, 16)
print_tick_label, (register, 0x1240, 8) SUBPIECE (unique, 0x79300, 16) , (const, 0x0, 4)
print_tick_label, (register, 0x1248, 8) SUBPIECE (unique, 0x79300, 16) , (const, 0x8, 4)
print_tick_label, (register, 0x1200, 8) INT_AND (register, 0x1200, 8) , (register, 0x1240, 8)
print_tick_label, (register, 0x1208, 8) INT_AND (register, 0x1208, 8) , (register, 0x1248, 8)
print_tick_label, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
print_tick_label, (unique, 0x18300, 1) FLOAT_NAN (ram, 0x4116b8, 8)
print_tick_label, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
print_tick_label, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (ram, 0x4116b8, 8)
print_tick_label, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
print_tick_label, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (ram, 0x4116b8, 8)
print_tick_label, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x204, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x207, 1) COPY (const, 0x0, 1)
print_tick_label, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
print_tick_label,  ---  CBRANCH (ram, 0x4072b4, 8) , (unique, 0xc580, 1)
print_tick_label,  ---  BRANCH (ram, 0x4071d1, 8)
print_tick_label, (unique, 0xbb00, 1) COPY (const, 0x30, 1)
print_tick_label,  ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0xbb00, 1)
print_tick_label, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)
print_tick_label, (unique, 0xbb00, 1) COPY (const, 0x0, 1)
print_tick_label,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1)
print_tick_label, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0xf0, 8)
print_tick_label, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0xf0, 8)
print_tick_label, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0xf0, 8)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
print_tick_label, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  RETURN (register, 0x288, 8)
print_tick_label, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x4c, 8)
print_tick_label, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
print_tick_label, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
print_tick_label, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
print_tick_label, (register, 0x200, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
print_tick_label, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
print_tick_label,  ---  CBRANCH (ram, 0x4072f1, 8) , (unique, 0xc680, 1)
print_tick_label, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
print_tick_label, (register, 0x38, 8) COPY (unique, 0x3100, 8)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x24, 8) , (register, 0x20, 8)
print_tick_label, (register, 0x10, 8) COPY (unique, 0x3800, 8)
print_tick_label, (register, 0x30, 8) COPY (const, 0x411280, 8)
print_tick_label, (register, 0x200, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
print_tick_label, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4074a0, 8)
print_tick_label,  ---  CALL (ram, 0x401780, 8)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x24, 8) , (register, 0x20, 8)
print_tick_label, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
print_tick_label, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
print_tick_label, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
print_tick_label, (register, 0x30, 8) COPY (const, 0x4115aa, 8)
print_tick_label, (register, 0x38, 8) COPY (register, 0x18, 8)
print_tick_label, (register, 0x200, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
print_tick_label, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4074b3, 8)
print_tick_label,  ---  CALL (ram, 0x401920, 8)
print_tick_label,  ---  BRANCH (ram, 0x407252, 8)
print_tick_label, (register, 0x1220, 8) COPY (register, 0x1200, 8)
print_tick_label, (register, 0x1228, 8) COPY (register, 0x1208, 8)
print_tick_label, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8)
print_tick_label, (register, 0x1200, 8) COPY (ram, 0x411670, 8)
print_tick_label, (register, 0x1208, 8) COPY (const, 0x0, 8)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4074d5, 8)
print_tick_label,  ---  CALL (ram, 0x401950, 8)
print_tick_label, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x18, 8)
print_tick_label, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
print_tick_label, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x1, 4)
print_tick_label, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
print_tick_label, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x1, 4)
print_tick_label, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
print_tick_label, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x1, 4)
print_tick_label, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label, (register, 0x1240, 8) COPY (register, 0x1200, 8)
print_tick_label, (register, 0x1248, 8) COPY (register, 0x1208, 8)
print_tick_label, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
print_tick_label, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
print_tick_label, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
print_tick_label,  ---  CBRANCH (ram, 0x4071a5, 8) , (unique, 0xc680, 1)
print_tick_label, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
print_tick_label, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
print_tick_label, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
print_tick_label, (register, 0x1228, 8) COPY (const, 0x0, 8)
print_tick_label, (register, 0x1200, 8) COPY (ram, 0x411670, 8)
print_tick_label, (register, 0x1208, 8) COPY (const, 0x0, 8)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4074fd, 8)
print_tick_label,  ---  CALL (ram, 0x401950, 8)
print_tick_label, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
print_tick_label, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
print_tick_label, (register, 0x1248, 8) COPY (const, 0x0, 8)
print_tick_label, (register, 0x1220, 8) COPY (register, 0x1200, 8)
print_tick_label, (register, 0x1228, 8) COPY (register, 0x1208, 8)
print_tick_label,  ---  BRANCH (ram, 0x4071a9, 8)
print_tick_label, (register, 0x200, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
print_tick_label, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label,  ---  BRANCH (ram, 0x40723a, 8)
print_tick_label, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x50, 8)
print_tick_label, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
print_tick_label, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
print_tick_label, (register, 0x12e8, 8) COPY (const, 0x0, 8)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
print_tick_label, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
print_tick_label,  ---  BRANCH (ram, 0x40738b, 8)
print_tick_label, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
print_tick_label, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
print_tick_label, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
print_tick_label, (register, 0x1208, 8) COPY (const, 0x0, 8)
print_tick_label, (register, 0x30, 8) COPY (const, 0x4115b5, 8)
print_tick_label, (register, 0x38, 8) COPY (register, 0x18, 8)
print_tick_label, (register, 0x0, 8) COPY (const, 0x1, 8)
print_tick_label, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
print_tick_label,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40753f, 8)
print_tick_label,  ---  CALL (ram, 0x401920, 8)
print_tick_label,  ---  BRANCH (ram, 0x407252, 8)
print_tick_label, (register, 0x200, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x20b, 1) COPY (const, 0x0, 1)
print_tick_label, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
print_tick_label, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
print_tick_label, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
print_tick_label, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
print_tick_label, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
print_tick_label, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
print_tick_label, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
print_tick_label, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
print_tick_label,  ---  BRANCH (ram, 0x4073ff, 8)
plot_abscissa_log_subsubtick, (unique, 0xe780, 8) COPY (register, 0x18, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
plot_abscissa_log_subsubtick, (register, 0x18, 8) COPY (register, 0x38, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x830, 8)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x830, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x830, 8)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x28, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x38, 8) , (const, 0xb8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) COPY (register, 0x1200, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) COPY (register, 0x1208, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x50, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
plot_abscissa_log_subsubtick, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_abscissa_log_subsubtick, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (register, 0x1200, 8)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_abscissa_log_subsubtick, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1200, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
plot_abscissa_log_subsubtick, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407640, 8) , (unique, 0xc900, 1)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x38, 8) , (const, 0x1d8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x40759f, 8) , (unique, 0x79100, 1)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (register, 0x12e0, 8) FLOAT_MULT (register, 0x12e0, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xc0, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1e0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4075d2, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x401a20, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x4075f3, 8) , (unique, 0x79100, 1)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xc8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x407600, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x4017c0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (ram, 0x411698, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (register, 0x1220, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (register, 0x1228, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1200, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
plot_abscissa_log_subsubtick, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407634, 8) , (unique, 0xc900, 1)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1280, 8)
plot_abscissa_log_subsubtick, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
plot_abscissa_log_subsubtick, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_abscissa_log_subsubtick, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1280, 8) , (register, 0x1200, 8)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_abscissa_log_subsubtick, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1280, 8) , (register, 0x1200, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407660, 8) , (unique, 0xc780, 1)
plot_abscissa_log_subsubtick, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x830, 8)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x830, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x830, 8)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  RETURN (register, 0x288, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x38, 8) , (const, 0x1d8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x12e0, 8) FLOAT_MULT (register, 0x12e0, 8) , (register, 0x1200, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x4075af, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x10c, 8)
plot_abscissa_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
plot_abscissa_log_subsubtick, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x4077f0, 8) , (unique, 0xc680, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
plot_abscissa_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_abscissa_log_subsubtick, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x2, 4)
plot_abscissa_log_subsubtick, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407920, 8) , (register, 0x206, 1)
plot_abscissa_log_subsubtick, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407b60, 8) , (unique, 0xc780, 1)
plot_abscissa_log_subsubtick, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x3, 4)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x3, 4)
plot_abscissa_log_subsubtick, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x3, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407a60, 8) , (register, 0x206, 1)
plot_abscissa_log_subsubtick, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4, 4)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4, 4)
plot_abscissa_log_subsubtick, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407634, 8) , (unique, 0xc680, 1)
plot_abscissa_log_subsubtick, (register, 0x12c0, 16) INT_XOR (register, 0x12c0, 16) , (register, 0x12c0, 16)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a8, 8)
plot_abscissa_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
plot_abscissa_log_subsubtick, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
plot_abscissa_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407e18, 8) , (unique, 0xc680, 1)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
plot_abscissa_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
plot_abscissa_log_subsubtick, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407f40, 8) , (register, 0x206, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40773e, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x4017d0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12c0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12c0, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12c0, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x408010, 8) , (unique, 0xc780, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
plot_abscissa_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
plot_abscissa_log_subsubtick, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407f58, 8) , (register, 0x206, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (register, 0x1260, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (register, 0x1268, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4077e6, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x4018f0, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x407634, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) COPY (register, 0x1280, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) COPY (register, 0x1288, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (ram, 0x411670, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x407801, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x401950, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
plot_abscissa_log_subsubtick, (register, 0x10, 8) COPY (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) COPY (register, 0x1200, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) COPY (register, 0x1208, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xc0, 8)
plot_abscissa_log_subsubtick, (register, 0x30, 8) COPY (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 8) COPY (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40781f, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x407180, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a8, 8)
plot_abscissa_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_abscissa_log_subsubtick, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407cb8, 8) , (unique, 0xc680, 1)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
plot_abscissa_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_abscissa_log_subsubtick, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x12c0, 16) INT_XOR (register, 0x12c0, 16) , (register, 0x12c0, 16)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (ram, 0x4116c8, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (register, 0x12c0, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (register, 0x12c8, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (ram, 0x4116c0, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1400, 8) COPY (register, 0x1200, 8)
plot_abscissa_log_subsubtick, (register, 0x1410, 8) COPY (register, 0x12e0, 8)
plot_abscissa_log_subsubtick, (unique, 0x70b00, 1) FLOAT_LESSEQUAL (register, 0x1400, 8) , (register, 0x1410, 8)
plot_abscissa_log_subsubtick, (unique, 0x70b80, 8) INT_ZEXT (unique, 0x70b00, 1)
plot_abscissa_log_subsubtick, (register, 0x1400, 8) INT_MULT (unique, 0x70b80, 8) , (const, 0xffffffffffffffff, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (register, 0x1400, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) INT_AND (register, 0x1240, 8) , (register, 0x1200, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) INT_AND (register, 0x1248, 8) , (register, 0x1208, 8)
plot_abscissa_log_subsubtick, (unique, 0x69780, 8) INT_NEGATE (register, 0x1200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) INT_AND (unique, 0x69780, 8) , (register, 0x1260, 8)
plot_abscissa_log_subsubtick, (unique, 0x69880, 8) INT_NEGATE (register, 0x1208, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) INT_AND (unique, 0x69880, 8) , (register, 0x1268, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (register, 0x12e0, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (register, 0x12e8, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 16) INT_OR (register, 0x1200, 16) , (register, 0x1240, 16)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (ram, 0x411730, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) INT_AND (register, 0x1240, 8) , (register, 0x1260, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) INT_AND (register, 0x1248, 8) , (register, 0x1268, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1200, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x408048, 8) , (register, 0x206, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4078fc, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x4017d0, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (register, 0x8, 8) COPY (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x10, 8) COPY (const, 0x74, 8)
plot_abscissa_log_subsubtick, (register, 0x30, 8) COPY (const, 0x63, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x407913, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x401a50, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x138, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) INT_CARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
plot_abscissa_log_subsubtick, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) INT_SCARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
plot_abscissa_log_subsubtick, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd00, 4)
plot_abscissa_log_subsubtick, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x40766e, 8)
plot_abscissa_log_subsubtick, (register, 0x12a0, 16) INT_XOR (register, 0x12a0, 16) , (register, 0x12a0, 16)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a8, 8)
plot_abscissa_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_abscissa_log_subsubtick, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407b80, 8) , (unique, 0xc680, 1)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
plot_abscissa_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x98, 4) COPY (unique, 0xbc80, 4)
plot_abscissa_log_subsubtick, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407df0, 8) , (unique, 0xc680, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4079ae, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x4017d0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12a0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x408060, 8) , (unique, 0xc780, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
plot_abscissa_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x90, 4) COPY (unique, 0xbc80, 4)
plot_abscissa_log_subsubtick, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1200, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407fa8, 8) , (register, 0x206, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x407a54, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x4018f0, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x4076b0, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_abscissa_log_subsubtick, (register, 0x30, 8) COPY (const, 0x41124a, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x407a6d, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x401a10, 8)
plot_abscissa_log_subsubtick, (register, 0x12c0, 16) INT_XOR (register, 0x12c0, 16) , (register, 0x12c0, 16)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
plot_abscissa_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_abscissa_log_subsubtick, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12c0, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407dc8, 8) , (unique, 0xc680, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x407ada, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x4017d0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
plot_abscissa_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_abscissa_log_subsubtick, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407fc0, 8) , (register, 0x206, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x407b45, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x4018f0, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_abscissa_log_subsubtick, (register, 0x30, 8) COPY (const, 0x411244, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x407b52, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x401a10, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x40792a, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
plot_abscissa_log_subsubtick, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407634, 8) , (unique, 0xc680, 1)
plot_abscissa_log_subsubtick, (register, 0x12e0, 16) INT_XOR (register, 0x12e0, 16) , (register, 0x12e0, 16)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x4076b0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
plot_abscissa_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
plot_abscissa_log_subsubtick, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407db0, 8) , (register, 0x206, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x407c02, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x4017d0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12c0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12c0, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12c0, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x408078, 8) , (unique, 0xc780, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
plot_abscissa_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
plot_abscissa_log_subsubtick, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407fd8, 8) , (register, 0x206, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (register, 0x1260, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (register, 0x1268, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x407cac, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x4018f0, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x4076b0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
plot_abscissa_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_abscissa_log_subsubtick, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x12a0, 16) INT_XOR (register, 0x12a0, 16) , (register, 0x12a0, 16)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (ram, 0x4116c0, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) COPY (register, 0x12a0, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) COPY (register, 0x12a8, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (ram, 0x4116c8, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1400, 8) COPY (register, 0x1220, 8)
plot_abscissa_log_subsubtick, (register, 0x1410, 8) COPY (register, 0x1280, 8)
plot_abscissa_log_subsubtick, (unique, 0x70b00, 1) FLOAT_LESSEQUAL (register, 0x1400, 8) , (register, 0x1410, 8)
plot_abscissa_log_subsubtick, (unique, 0x70b80, 8) INT_ZEXT (unique, 0x70b00, 1)
plot_abscissa_log_subsubtick, (register, 0x1400, 8) INT_MULT (unique, 0x70b80, 8) , (const, 0xffffffffffffffff, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) COPY (register, 0x1400, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) INT_AND (register, 0x1240, 8) , (register, 0x1220, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) INT_AND (register, 0x1248, 8) , (register, 0x1228, 8)
plot_abscissa_log_subsubtick, (unique, 0x69780, 8) INT_NEGATE (register, 0x1220, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) INT_AND (unique, 0x69780, 8) , (register, 0x1260, 8)
plot_abscissa_log_subsubtick, (unique, 0x69880, 8) INT_NEGATE (register, 0x1228, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) INT_AND (unique, 0x69880, 8) , (register, 0x1268, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 16) INT_OR (register, 0x1220, 16) , (register, 0x1240, 16)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (ram, 0x411730, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) INT_AND (register, 0x1240, 8) , (register, 0x1280, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) INT_AND (register, 0x1248, 8) , (register, 0x1288, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x408028, 8) , (register, 0x206, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (register, 0x1260, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (register, 0x1268, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x407d87, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x4017d0, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (register, 0x8, 8) COPY (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x10, 8) COPY (const, 0x62, 8)
plot_abscissa_log_subsubtick, (register, 0x30, 8) COPY (const, 0x63, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x407d9e, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x401a50, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x138, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) INT_CARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
plot_abscissa_log_subsubtick, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) INT_SCARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
plot_abscissa_log_subsubtick, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd00, 4)
plot_abscissa_log_subsubtick, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x40766e, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x407be8, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1280, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x407ac0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1280, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x407994, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
plot_abscissa_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
plot_abscissa_log_subsubtick, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407f90, 8) , (register, 0x206, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x407e98, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x4017d0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1260, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407ff8, 8) , (unique, 0xc780, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
plot_abscissa_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_abscissa_log_subsubtick, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_abscissa_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_abscissa_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_abscissa_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_abscissa_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1200, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick,  ---  CBRANCH (ram, 0x407f78, 8) , (register, 0x206, 1)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_abscissa_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
plot_abscissa_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_abscissa_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x407f38, 8)
plot_abscissa_log_subsubtick,  ---  CALL (ram, 0x4018f0, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x407634, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x407724, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (register, 0x1260, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (register, 0x1268, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x4077cc, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x407f1e, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x407e7e, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x407a3a, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x407b2b, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (register, 0x1260, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (register, 0x1268, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x407c92, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (ram, 0x411720, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) INT_XOR (register, 0x1200, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) INT_XOR (register, 0x1208, 8) , (register, 0x1248, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x407ee7, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (ram, 0x411720, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) INT_XOR (register, 0x1220, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) INT_XOR (register, 0x1228, 8) , (register, 0x1248, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x40778d, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (register, 0x1260, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (register, 0x1268, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x407d6d, 8)
plot_abscissa_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_abscissa_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x4078e2, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (ram, 0x411720, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1200, 8) INT_XOR (register, 0x1200, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (register, 0x1208, 8) INT_XOR (register, 0x1208, 8) , (register, 0x1248, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x4079fd, 8)
plot_abscissa_log_subsubtick, (register, 0x1240, 8) COPY (ram, 0x411720, 8)
plot_abscissa_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_abscissa_log_subsubtick, (register, 0x1220, 8) INT_XOR (register, 0x1220, 8) , (register, 0x1240, 8)
plot_abscissa_log_subsubtick, (register, 0x1228, 8) INT_XOR (register, 0x1228, 8) , (register, 0x1248, 8)
plot_abscissa_log_subsubtick,  ---  BRANCH (ram, 0x407c51, 8)
plot_ordinate_log_subsubtick, (unique, 0xe780, 8) COPY (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
plot_ordinate_log_subsubtick, (register, 0x18, 8) COPY (register, 0x38, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x830, 8)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x830, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x830, 8)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x78, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x38, 8) , (const, 0xb8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) COPY (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (register, 0x1228, 8) COPY (register, 0x1208, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x50, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_ordinate_log_subsubtick, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_ordinate_log_subsubtick, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
plot_ordinate_log_subsubtick, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408180, 8) , (unique, 0xc900, 1)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x38, 8) , (const, 0x1d8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x4080df, 8) , (unique, 0x79100, 1)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x140, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1e0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408112, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x401a20, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408133, 8) , (unique, 0x79100, 1)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x148, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408140, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x4017c0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (ram, 0x411698, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (register, 0x1220, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (register, 0x1228, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
plot_ordinate_log_subsubtick, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408174, 8) , (unique, 0xc900, 1)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1280, 8)
plot_ordinate_log_subsubtick, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_ordinate_log_subsubtick, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1280, 8) , (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_ordinate_log_subsubtick, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1280, 8) , (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x4081a0, 8) , (unique, 0xc780, 1)
plot_ordinate_log_subsubtick, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x830, 8)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x830, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x830, 8)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  RETURN (register, 0x288, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x38, 8) , (const, 0x1d8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x4080ef, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x18c, 8)
plot_ordinate_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
plot_ordinate_log_subsubtick, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_ordinate_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408320, 8) , (unique, 0xc680, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
plot_ordinate_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_ordinate_log_subsubtick, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x2, 4)
plot_ordinate_log_subsubtick, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408480, 8) , (register, 0x206, 1)
plot_ordinate_log_subsubtick, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x4088f8, 8) , (unique, 0xc780, 1)
plot_ordinate_log_subsubtick, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x3, 4)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x3, 4)
plot_ordinate_log_subsubtick, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x3, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x4087f0, 8) , (register, 0x206, 1)
plot_ordinate_log_subsubtick, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4, 4)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4, 4)
plot_ordinate_log_subsubtick, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408174, 8) , (unique, 0xc680, 1)
plot_ordinate_log_subsubtick, (register, 0x1280, 16) INT_XOR (register, 0x1280, 16) , (register, 0x1280, 16)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x128, 8)
plot_ordinate_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
plot_ordinate_log_subsubtick, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x4085c0, 8) , (unique, 0xc680, 1)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
plot_ordinate_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
plot_ordinate_log_subsubtick, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
plot_ordinate_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408938, 8) , (unique, 0xc680, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408272, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x4017d0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
plot_ordinate_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
plot_ordinate_log_subsubtick, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408ac8, 8) , (register, 0x206, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1260, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408b78, 8) , (unique, 0xc780, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408319, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x4018f0, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x408174, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) COPY (register, 0x1280, 8)
plot_ordinate_log_subsubtick, (register, 0x1228, 8) COPY (register, 0x1288, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (ram, 0x411670, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408331, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x401950, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)
plot_ordinate_log_subsubtick, (register, 0x10, 8) COPY (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) COPY (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (register, 0x1228, 8) COPY (register, 0x1208, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x140, 8)
plot_ordinate_log_subsubtick, (register, 0x30, 8) COPY (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40834f, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x407180, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x128, 8)
plot_ordinate_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_ordinate_log_subsubtick, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408960, 8) , (register, 0x206, 1)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
plot_ordinate_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_ordinate_log_subsubtick, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408b90, 8) , (register, 0x206, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x12e0, 16) INT_XOR (register, 0x12e0, 16) , (register, 0x12e0, 16)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x12a0, 8) COPY (ram, 0x4116c8, 8)
plot_ordinate_log_subsubtick, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) COPY (ram, 0x4116c0, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (register, 0x12e0, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (register, 0x12e8, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1400, 8) COPY (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (register, 0x1410, 8) COPY (register, 0x12c0, 8)
plot_ordinate_log_subsubtick, (unique, 0x70b00, 1) FLOAT_LESSEQUAL (register, 0x1400, 8) , (register, 0x1410, 8)
plot_ordinate_log_subsubtick, (unique, 0x70b80, 8) INT_ZEXT (unique, 0x70b00, 1)
plot_ordinate_log_subsubtick, (register, 0x1400, 8) INT_MULT (unique, 0x70b80, 8) , (const, 0xffffffffffffffff, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (register, 0x1400, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) INT_AND (register, 0x1260, 8) , (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) INT_AND (register, 0x1268, 8) , (register, 0x1208, 8)
plot_ordinate_log_subsubtick, (unique, 0x69780, 8) INT_NEGATE (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) INT_AND (unique, 0x69780, 8) , (register, 0x12a0, 8)
plot_ordinate_log_subsubtick, (unique, 0x69880, 8) INT_NEGATE (register, 0x1208, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) INT_AND (unique, 0x69880, 8) , (register, 0x12a8, 8)
plot_ordinate_log_subsubtick, (register, 0x12a0, 8) COPY (register, 0x12c0, 8)
plot_ordinate_log_subsubtick, (register, 0x12a8, 8) COPY (register, 0x12c8, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 16) INT_OR (register, 0x1200, 16) , (register, 0x1260, 16)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) COPY (ram, 0x411730, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) INT_AND (register, 0x1260, 8) , (register, 0x12a0, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) INT_AND (register, 0x1268, 8) , (register, 0x12a8, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1260, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40842f, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x4017d0, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (register, 0x30, 8) COPY (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40843c, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x4016f0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (register, 0x8, 8) COPY (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x10, 8) COPY (const, 0x63, 8)
plot_ordinate_log_subsubtick, (register, 0x30, 8) COPY (const, 0x6c, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408459, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x401a50, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1b0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1b8, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) INT_CARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
plot_ordinate_log_subsubtick, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) INT_SCARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
plot_ordinate_log_subsubtick, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd00, 4)
plot_ordinate_log_subsubtick, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x78c00, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1220, 8)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408472, 8) , (unique, 0x78c00, 1)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) COPY (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1b0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x4081ae, 8)
plot_ordinate_log_subsubtick, (register, 0x12c0, 16) INT_XOR (register, 0x12c0, 16) , (register, 0x12c0, 16)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x128, 8)
plot_ordinate_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_ordinate_log_subsubtick, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x4086d8, 8) , (unique, 0xc680, 1)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
plot_ordinate_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x98, 4) COPY (unique, 0xbc80, 4)
plot_ordinate_log_subsubtick, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
plot_ordinate_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408a50, 8) , (unique, 0xc680, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408511, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x4017d0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
plot_ordinate_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x90, 4) COPY (unique, 0xbc80, 4)
plot_ordinate_log_subsubtick, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408b40, 8) , (register, 0x206, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12a0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408be8, 8) , (unique, 0xc780, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4085ba, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x4018f0, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x4081ed, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
plot_ordinate_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
plot_ordinate_log_subsubtick, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_ordinate_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408910, 8) , (unique, 0xc680, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408627, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x4017d0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
plot_ordinate_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_ordinate_log_subsubtick, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408ae0, 8) , (register, 0x206, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408b60, 8) , (unique, 0xc780, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4086d0, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x4018f0, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x408174, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
plot_ordinate_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
plot_ordinate_log_subsubtick, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
plot_ordinate_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408aa0, 8) , (unique, 0xc680, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408741, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x4017d0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
plot_ordinate_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
plot_ordinate_log_subsubtick, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408b00, 8) , (register, 0x206, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12e0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12e0, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12e0, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408bd0, 8) , (unique, 0xc780, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4087ea, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x4018f0, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x4081ed, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (register, 0x30, 8) COPY (const, 0x41124a, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4087fd, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x401a10, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
plot_ordinate_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_ordinate_log_subsubtick, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408a78, 8) , (unique, 0xc680, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x12e0, 16) INT_XOR (register, 0x12e0, 16) , (register, 0x12e0, 16)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x12e0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408870, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x4017d0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
plot_ordinate_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_ordinate_log_subsubtick, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408b20, 8) , (register, 0x206, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4088e1, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x4018f0, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (register, 0x30, 8) COPY (const, 0x411244, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4088ee, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x401a10, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x40848a, 8)
plot_ordinate_log_subsubtick, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
plot_ordinate_log_subsubtick, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408174, 8) , (unique, 0xc680, 1)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x4081e3, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x4085e1, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x40822c, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
plot_ordinate_log_subsubtick, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_ordinate_log_subsubtick, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_ordinate_log_subsubtick, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_ordinate_log_subsubtick, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_ordinate_log_subsubtick, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_ordinate_log_subsubtick, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_ordinate_log_subsubtick,  ---  CBRANCH (ram, 0x408bb0, 8) , (register, 0x206, 1)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (register, 0x12e0, 16) INT_XOR (register, 0x12e0, 16) , (register, 0x12e0, 16)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x12a0, 8) COPY (ram, 0x4116c8, 8)
plot_ordinate_log_subsubtick, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (register, 0x12e0, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) COPY (register, 0x12e8, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) COPY (ram, 0x4116c0, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1400, 8) COPY (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (register, 0x1410, 8) COPY (register, 0x12c0, 8)
plot_ordinate_log_subsubtick, (unique, 0x70b00, 1) FLOAT_LESSEQUAL (register, 0x1400, 8) , (register, 0x1410, 8)
plot_ordinate_log_subsubtick, (unique, 0x70b80, 8) INT_ZEXT (unique, 0x70b00, 1)
plot_ordinate_log_subsubtick, (register, 0x1400, 8) INT_MULT (unique, 0x70b80, 8) , (const, 0xffffffffffffffff, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) COPY (register, 0x1400, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) INT_AND (register, 0x1260, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) INT_AND (register, 0x1268, 8) , (register, 0x1248, 8)
plot_ordinate_log_subsubtick, (unique, 0x69780, 8) INT_NEGATE (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) INT_AND (unique, 0x69780, 8) , (register, 0x12a0, 8)
plot_ordinate_log_subsubtick, (unique, 0x69880, 8) INT_NEGATE (register, 0x1248, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) INT_AND (unique, 0x69880, 8) , (register, 0x12a8, 8)
plot_ordinate_log_subsubtick, (register, 0x12a0, 8) COPY (register, 0x12c0, 8)
plot_ordinate_log_subsubtick, (register, 0x12a8, 8) COPY (register, 0x12c8, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 16) INT_OR (register, 0x1240, 16) , (register, 0x1260, 16)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1280, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) COPY (ram, 0x411730, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) INT_AND (register, 0x1260, 8) , (register, 0x12a0, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) INT_AND (register, 0x1268, 8) , (register, 0x12a8, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1260, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1240, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408a22, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x4017d0, 8)
plot_ordinate_log_subsubtick, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
plot_ordinate_log_subsubtick, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (register, 0x30, 8) COPY (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408a2f, 8)
plot_ordinate_log_subsubtick,  ---  CALL (ram, 0x4016f0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (register, 0x8, 8) COPY (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
plot_ordinate_log_subsubtick,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x10, 8) COPY (const, 0x63, 8)
plot_ordinate_log_subsubtick, (register, 0x30, 8) COPY (const, 0x72, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x408451, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x4084cb, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x40882e, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x4086fb, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x4082af, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x408664, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x408780, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x4088ad, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x408550, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) COPY (ram, 0x411720, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) INT_XOR (register, 0x1240, 8) , (register, 0x1260, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) INT_XOR (register, 0x1248, 8) , (register, 0x1268, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x4086be, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) COPY (ram, 0x411720, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) INT_XOR (register, 0x1200, 8) , (register, 0x1260, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) INT_XOR (register, 0x1208, 8) , (register, 0x1268, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x408307, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x40839a, 8)
plot_ordinate_log_subsubtick, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
plot_ordinate_log_subsubtick, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x40898d, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) COPY (ram, 0x411720, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1200, 8) INT_XOR (register, 0x1200, 8) , (register, 0x1260, 8)
plot_ordinate_log_subsubtick, (register, 0x1208, 8) INT_XOR (register, 0x1208, 8) , (register, 0x1268, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x4087d8, 8)
plot_ordinate_log_subsubtick, (register, 0x1260, 8) COPY (ram, 0x411720, 8)
plot_ordinate_log_subsubtick, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_ordinate_log_subsubtick, (register, 0x1240, 8) INT_XOR (register, 0x1240, 8) , (register, 0x1260, 8)
plot_ordinate_log_subsubtick, (register, 0x1248, 8) INT_XOR (register, 0x1248, 8) , (register, 0x1268, 8)
plot_ordinate_log_subsubtick,  ---  BRANCH (ram, 0x4085a8, 8)
compute_outcode, (register, 0x1240, 8) COPY (ram, 0x411698, 8)
compute_outcode, (register, 0x1248, 8) COPY (const, 0x0, 8)
compute_outcode, (register, 0x0, 8) COPY (const, 0x4, 8)
compute_outcode, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)
compute_outcode, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
compute_outcode, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
compute_outcode, (register, 0x1268, 8) COPY (const, 0x0, 8)
compute_outcode, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x28, 8)
compute_outcode, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
compute_outcode, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
compute_outcode, (register, 0x1288, 8) COPY (const, 0x0, 8)
compute_outcode, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1240, 8)
compute_outcode, (unique, 0x3200, 8) INT_ADD (register, 0x38, 8) , (const, 0x80, 8)
compute_outcode, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
compute_outcode, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
compute_outcode, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x1260, 8)
compute_outcode, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
compute_outcode, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1280, 8)
compute_outcode, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
compute_outcode, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1280, 8)
compute_outcode, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
compute_outcode, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1280, 8)
compute_outcode, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
compute_outcode, (register, 0x20b, 1) COPY (const, 0x0, 1)
compute_outcode, (register, 0x204, 1) COPY (const, 0x0, 1)
compute_outcode, (register, 0x207, 1) COPY (const, 0x0, 1)
compute_outcode, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
compute_outcode, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
compute_outcode,  ---  CBRANCH (ram, 0x408c42, 8) , (unique, 0xc900, 1)
compute_outcode, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)
compute_outcode, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
compute_outcode, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
compute_outcode, (register, 0x1288, 8) COPY (const, 0x0, 8)
compute_outcode, (register, 0x200, 1) COPY (const, 0x0, 1)
compute_outcode, (register, 0x20b, 1) COPY (const, 0x0, 1)
compute_outcode, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
compute_outcode, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
compute_outcode, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
compute_outcode, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
compute_outcode, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
compute_outcode, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compute_outcode, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compute_outcode, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compute_outcode, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x1260, 8)
compute_outcode, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1280, 8)
compute_outcode, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
compute_outcode, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
compute_outcode, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1280, 8) , (register, 0x1200, 8)
compute_outcode, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
compute_outcode, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1280, 8) , (register, 0x1200, 8)
compute_outcode, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
compute_outcode, (register, 0x20b, 1) COPY (const, 0x0, 1)
compute_outcode, (register, 0x204, 1) COPY (const, 0x0, 1)
compute_outcode, (register, 0x207, 1) COPY (const, 0x0, 1)
compute_outcode, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
compute_outcode, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
compute_outcode, (register, 0x0, 1) COPY (unique, 0xc900, 1)
compute_outcode, (unique, 0x53300, 4) INT_AND (const, 0x3, 4) , (const, 0x1f, 4)
compute_outcode, (unique, 0x53380, 4) COPY (register, 0x0, 4)
compute_outcode, (register, 0x0, 4) INT_LEFT (register, 0x0, 4) , (unique, 0x53300, 4)
compute_outcode, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
compute_outcode, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53300, 4) , (const, 0x0, 4)
compute_outcode, (unique, 0x15080, 4) INT_SUB (unique, 0x53300, 4) , (const, 0x1, 4)
compute_outcode, (unique, 0x15100, 4) INT_LEFT (unique, 0x53380, 4) , (unique, 0x15080, 4)
compute_outcode, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 4) , (const, 0x0, 4)
compute_outcode, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
compute_outcode, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
compute_outcode, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
compute_outcode, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
compute_outcode, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53300, 4) , (const, 0x1, 4)
compute_outcode, (unique, 0x15580, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
compute_outcode, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
compute_outcode, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
compute_outcode, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
compute_outcode, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
compute_outcode, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
compute_outcode, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53300, 4) , (const, 0x0, 4)
compute_outcode, (unique, 0x12f80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
compute_outcode, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
compute_outcode, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
compute_outcode, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
compute_outcode, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
compute_outcode, (unique, 0x13280, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
compute_outcode, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
compute_outcode, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
compute_outcode, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
compute_outcode, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
compute_outcode, (unique, 0x13500, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
compute_outcode, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 4)
compute_outcode, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
compute_outcode, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
compute_outcode, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
compute_outcode, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
compute_outcode, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
compute_outcode, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
compute_outcode, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x78, 8)
compute_outcode, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
compute_outcode, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
compute_outcode, (register, 0x1208, 8) COPY (const, 0x0, 8)
compute_outcode, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
compute_outcode, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
compute_outcode, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
compute_outcode, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
compute_outcode, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (register, 0x1200, 8)
compute_outcode, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
compute_outcode, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (register, 0x1200, 8)
compute_outcode, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
compute_outcode, (register, 0x20b, 1) COPY (const, 0x0, 1)
compute_outcode, (register, 0x204, 1) COPY (const, 0x0, 1)
compute_outcode, (register, 0x207, 1) COPY (const, 0x0, 1)
compute_outcode, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
compute_outcode, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
compute_outcode,  ---  CBRANCH (ram, 0x408c70, 8) , (unique, 0xc900, 1)
compute_outcode, (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)
compute_outcode, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
compute_outcode, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
compute_outcode, (register, 0x1208, 8) COPY (const, 0x0, 8)
compute_outcode, (register, 0x10, 4) COPY (register, 0x0, 4)
compute_outcode, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
compute_outcode, (register, 0x200, 1) COPY (const, 0x0, 1)
compute_outcode, (register, 0x20b, 1) COPY (const, 0x0, 1)
compute_outcode, (register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0x2, 4)
compute_outcode, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
compute_outcode, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
compute_outcode, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
compute_outcode, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
compute_outcode, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compute_outcode, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compute_outcode, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compute_outcode, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1240, 8)
compute_outcode, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
compute_outcode, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1220, 8)
compute_outcode, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
compute_outcode, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1220, 8)
compute_outcode, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
compute_outcode, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1220, 8)
compute_outcode, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
compute_outcode, (register, 0x20b, 1) COPY (const, 0x0, 1)
compute_outcode, (register, 0x204, 1) COPY (const, 0x0, 1)
compute_outcode, (register, 0x207, 1) COPY (const, 0x0, 1)
compute_outcode, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
compute_outcode, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
compute_outcode, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
compute_outcode, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc900, 1)
compute_outcode,  ---  CBRANCH (ram, 0x408c66, 8) , (unique, 0x27780, 1)
compute_outcode, (register, 0x0, 4) COPY (register, 0x10, 4)
compute_outcode, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
compute_outcode, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
compute_outcode,  ---  RETURN (register, 0x288, 8)
compute_outcode, (register, 0x200, 1) COPY (const, 0x0, 1)
compute_outcode, (register, 0x20b, 1) COPY (const, 0x0, 1)
compute_outcode, (register, 0x0, 4) INT_OR (register, 0x0, 4) , (const, 0x1, 4)
compute_outcode, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
compute_outcode, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
compute_outcode, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
compute_outcode, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
compute_outcode, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
compute_outcode, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
compute_outcode, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
compute_outcode, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
compute_outcode, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
compute_outcode,  ---  RETURN (register, 0x288, 8)
new_multigrapher, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
new_multigrapher, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
new_multigrapher, (register, 0xb8, 8) COPY (register, 0x10, 8)
new_multigrapher, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
new_multigrapher, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
new_multigrapher, (register, 0xa0, 8) COPY (register, 0x30, 8)
new_multigrapher, (unique, 0xe780, 8) COPY (register, 0x28, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
new_multigrapher, (unique, 0xe780, 8) COPY (register, 0x18, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
new_multigrapher, (register, 0xa8, 8) COPY (register, 0x88, 8)
new_multigrapher, (register, 0xb0, 8) COPY (register, 0x80, 8)
new_multigrapher, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x18, 8)
new_multigrapher, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x18, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x18, 8)
new_multigrapher, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
new_multigrapher, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
new_multigrapher, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
new_multigrapher, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
new_multigrapher, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
new_multigrapher, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0xbd80, 8) COPY (register, 0x38, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8)
new_multigrapher, (register, 0x38, 8) COPY (const, 0x238, 8)
new_multigrapher, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
new_multigrapher, (unique, 0xbd80, 8) COPY (register, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408cad, 8)
new_multigrapher,  ---  CALL (ram, 0x410290, 8)
new_multigrapher, (register, 0x28, 8) COPY (register, 0x0, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408cb5, 8)
new_multigrapher,  ---  CALL (ram, 0x401ad0, 8)
new_multigrapher, (register, 0x10, 8) COPY (register, 0xa0, 8)
new_multigrapher, (register, 0x18, 8) COPY (register, 0x0, 8)
new_multigrapher, (register, 0x30, 8) COPY (const, 0x4115c7, 8)
new_multigrapher, (register, 0x38, 8) COPY (register, 0x0, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408cc8, 8)
new_multigrapher,  ---  CALL (ram, 0x401a30, 8)
new_multigrapher, (register, 0x10, 8) COPY (register, 0xb8, 8)
new_multigrapher, (register, 0x30, 8) COPY (const, 0x4115d0, 8)
new_multigrapher, (register, 0x38, 8) COPY (register, 0x18, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408cd8, 8)
new_multigrapher,  ---  CALL (ram, 0x401a30, 8)
new_multigrapher, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
new_multigrapher, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
new_multigrapher, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
new_multigrapher, (register, 0x30, 8) COPY (const, 0x4115db, 8)
new_multigrapher, (register, 0x38, 8) COPY (register, 0x18, 8)
new_multigrapher, (register, 0x10, 8) COPY (register, 0x8, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408ced, 8)
new_multigrapher,  ---  CALL (ram, 0x401a30, 8)
new_multigrapher, (register, 0x10, 8) COPY (register, 0xb0, 8)
new_multigrapher, (register, 0x30, 8) COPY (const, 0x4115e9, 8)
new_multigrapher, (register, 0x38, 8) COPY (register, 0x18, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408cfd, 8)
new_multigrapher,  ---  CALL (ram, 0x401a30, 8)
new_multigrapher, (register, 0x10, 8) COPY (register, 0xa8, 8)
new_multigrapher, (register, 0x30, 8) COPY (const, 0x4115f9, 8)
new_multigrapher, (register, 0x38, 8) COPY (register, 0x18, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408d0d, 8)
new_multigrapher,  ---  CALL (ram, 0x401a30, 8)
new_multigrapher, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
new_multigrapher, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
new_multigrapher, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
new_multigrapher, (register, 0x30, 8) COPY (const, 0x411607, 8)
new_multigrapher, (register, 0x38, 8) COPY (register, 0x18, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408d1f, 8)
new_multigrapher,  ---  CALL (ram, 0x401a30, 8)
new_multigrapher, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
new_multigrapher, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
new_multigrapher, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
new_multigrapher, (register, 0x30, 8) COPY (const, 0x411610, 8)
new_multigrapher, (register, 0x38, 8) COPY (register, 0x18, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408d31, 8)
new_multigrapher,  ---  CALL (ram, 0x401a30, 8)
new_multigrapher, (register, 0x8, 8) COPY (ram, 0x613cf8, 8)
new_multigrapher, (register, 0x10, 8) COPY (ram, 0x613d00, 8)
new_multigrapher, (register, 0x200, 1) COPY (const, 0x0, 1)
new_multigrapher, (register, 0x20b, 1) COPY (const, 0x0, 1)
new_multigrapher, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
new_multigrapher, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
new_multigrapher, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
new_multigrapher, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
new_multigrapher, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
new_multigrapher, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
new_multigrapher, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
new_multigrapher, (register, 0x80, 8) COPY (register, 0x18, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408d4d, 8)
new_multigrapher,  ---  CALL (ram, 0x401830, 8)
new_multigrapher, (register, 0x200, 1) COPY (const, 0x0, 1)
new_multigrapher, (register, 0x20b, 1) COPY (const, 0x0, 1)
new_multigrapher, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
new_multigrapher, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
new_multigrapher, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
new_multigrapher, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
new_multigrapher, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
new_multigrapher, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
new_multigrapher, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
new_multigrapher, (register, 0xa8, 8) COPY (register, 0x0, 8)
new_multigrapher,  ---  CBRANCH (ram, 0x408dc0, 8) , (register, 0x206, 1)
new_multigrapher, (register, 0x38, 8) COPY (register, 0x18, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408d5d, 8)
new_multigrapher,  ---  CALL (ram, 0x4019e0, 8)
new_multigrapher, (unique, 0xbd80, 8) COPY (register, 0xa8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (unique, 0xbd80, 8)
new_multigrapher, (register, 0x38, 8) COPY (register, 0xa8, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408d69, 8)
new_multigrapher,  ---  CALL (ram, 0x4017e0, 8)
new_multigrapher, (register, 0x200, 1) COPY (const, 0x0, 1)
new_multigrapher, (register, 0x20b, 1) COPY (const, 0x0, 1)
new_multigrapher, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
new_multigrapher, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
new_multigrapher, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
new_multigrapher, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
new_multigrapher, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
new_multigrapher,  ---  CBRANCH (ram, 0x408dc0, 8) , (register, 0x207, 1)
new_multigrapher, (register, 0x200, 1) COPY (const, 0x0, 1)
new_multigrapher, (register, 0x20b, 1) COPY (const, 0x0, 1)
new_multigrapher, (unique, 0x59300, 8) INT_AND (register, 0xa0, 8) , (register, 0xa0, 8)
new_multigrapher, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
new_multigrapher, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
new_multigrapher, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
new_multigrapher, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
new_multigrapher, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
new_multigrapher, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
new_multigrapher, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x10, 8)
new_multigrapher, (unique, 0xbd80, 8) COPY (register, 0xa0, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8)
new_multigrapher, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
new_multigrapher,  ---  CBRANCH (ram, 0x408db0, 8) , (unique, 0xc680, 1)
new_multigrapher, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
new_multigrapher, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
new_multigrapher, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
new_multigrapher, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
new_multigrapher, (register, 0x200, 1) COPY (const, 0x0, 1)
new_multigrapher, (register, 0x20b, 1) COPY (const, 0x0, 1)
new_multigrapher, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
new_multigrapher, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
new_multigrapher, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
new_multigrapher, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
new_multigrapher, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
new_multigrapher,  ---  CBRANCH (ram, 0x408db0, 8) , (register, 0x206, 1)
new_multigrapher, (register, 0x1220, 16) INT_XOR (register, 0x1220, 16) , (register, 0x1220, 16)
new_multigrapher, (register, 0x38, 8) COPY (register, 0xa8, 8)
new_multigrapher, (register, 0x1260, 8) COPY (ram, 0x4116d0, 8)
new_multigrapher, (register, 0x1268, 8) COPY (const, 0x0, 8)
new_multigrapher, (register, 0x1200, 8) COPY (register, 0x1220, 8)
new_multigrapher, (register, 0x1208, 8) COPY (register, 0x1228, 8)
new_multigrapher, (register, 0x1240, 8) COPY (register, 0x1260, 8)
new_multigrapher, (register, 0x1248, 8) COPY (register, 0x1268, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408d9a, 8)
new_multigrapher,  ---  CALL (ram, 0x401790, 8)
new_multigrapher, (register, 0x0, 8) COPY (register, 0x28, 8)
new_multigrapher, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x18, 8)
new_multigrapher, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x18, 8)
new_multigrapher, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x18, 8)
new_multigrapher, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
new_multigrapher, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
new_multigrapher, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
new_multigrapher, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
new_multigrapher, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
new_multigrapher, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
new_multigrapher, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
new_multigrapher, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
new_multigrapher, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
new_multigrapher, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
new_multigrapher, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
new_multigrapher, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
new_multigrapher, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
new_multigrapher, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  RETURN (register, 0x288, 8)
new_multigrapher, (register, 0x38, 8) COPY (register, 0xa8, 8)
new_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
new_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408db8, 8)
new_multigrapher,  ---  CALL (ram, 0x401730, 8)
new_multigrapher,  ---  BRANCH (ram, 0x408d7e, 8)
new_multigrapher, (register, 0x200, 1) COPY (const, 0x0, 1)
new_multigrapher, (register, 0x20b, 1) COPY (const, 0x0, 1)
new_multigrapher, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
new_multigrapher, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
new_multigrapher, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
new_multigrapher, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
new_multigrapher, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
new_multigrapher, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
new_multigrapher, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
new_multigrapher, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
new_multigrapher,  ---  BRANCH (ram, 0x408d9d, 8)
delete_multigrapher, (unique, 0xe780, 8) COPY (register, 0x28, 8)
delete_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
delete_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
delete_multigrapher, (unique, 0xe780, 8) COPY (register, 0x18, 8)
delete_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
delete_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
delete_multigrapher, (register, 0x28, 8) COPY (register, 0x38, 8)
delete_multigrapher, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
delete_multigrapher, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
delete_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
delete_multigrapher, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
delete_multigrapher, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
delete_multigrapher, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
delete_multigrapher, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
delete_multigrapher, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
delete_multigrapher, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
delete_multigrapher, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
delete_multigrapher, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
delete_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
delete_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408de1, 8)
delete_multigrapher,  ---  CALL (ram, 0x4017b0, 8)
delete_multigrapher, (register, 0x200, 1) COPY (const, 0x0, 1)
delete_multigrapher, (register, 0x20b, 1) COPY (const, 0x0, 1)
delete_multigrapher, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
delete_multigrapher, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
delete_multigrapher, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
delete_multigrapher, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
delete_multigrapher, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
delete_multigrapher, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
delete_multigrapher, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
delete_multigrapher, (register, 0x18, 4) COPY (register, 0x0, 4)
delete_multigrapher, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
delete_multigrapher,  ---  CBRANCH (ram, 0x408df2, 8) , (register, 0x207, 1)
delete_multigrapher, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
delete_multigrapher, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
delete_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
delete_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408df0, 8)
delete_multigrapher,  ---  CALL (ram, 0x401940, 8)
delete_multigrapher, (register, 0x18, 4) COPY (register, 0x0, 4)
delete_multigrapher, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
delete_multigrapher, (register, 0x38, 8) COPY (register, 0x28, 8)
delete_multigrapher, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
delete_multigrapher,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408dfa, 8)
delete_multigrapher,  ---  CALL (ram, 0x4018a0, 8)
delete_multigrapher, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
delete_multigrapher, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
delete_multigrapher, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
delete_multigrapher, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
delete_multigrapher, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
delete_multigrapher, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
delete_multigrapher, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
delete_multigrapher, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
delete_multigrapher, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
delete_multigrapher, (register, 0x0, 4) COPY (register, 0x18, 4)
delete_multigrapher, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
delete_multigrapher, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
delete_multigrapher, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
delete_multigrapher, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
delete_multigrapher, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
delete_multigrapher, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
delete_multigrapher, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
delete_multigrapher,  ---  RETURN (register, 0x288, 8)
begin_graph,  ---  BRANCHIND (ram, 0x6132d8, 8)
begin_graph, (unique, 0xe780, 8) COPY (register, 0x18, 8)
begin_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
begin_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
begin_graph, (register, 0x18, 8) COPY (register, 0x38, 8)
begin_graph, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x20, 8)
begin_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x20, 8)
begin_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x20, 8)
begin_graph, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
begin_graph, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
begin_graph, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
begin_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
begin_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
begin_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
begin_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
begin_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
begin_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
begin_graph, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
begin_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
begin_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
begin_graph, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
begin_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
begin_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
begin_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
begin_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
begin_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
begin_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x408e32, 8)
begin_graph,  ---  CALL (ram, 0x4018e0, 8)
begin_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
begin_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
begin_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
begin_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
begin_graph, (register, 0x1280, 8) COPY (ram, 0x4116d0, 8)
begin_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
begin_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
begin_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
begin_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
begin_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
begin_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
begin_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
begin_graph, (register, 0x12a0, 8) COPY (register, 0x1240, 8)
begin_graph, (register, 0x12a8, 8) COPY (register, 0x1248, 8)
begin_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
begin_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
begin_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
begin_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
begin_graph, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x20, 8)
begin_graph, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x20, 8)
begin_graph, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x20, 8)
begin_graph, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
begin_graph, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
begin_graph, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
begin_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
begin_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
begin_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
begin_graph, (register, 0x1240, 16) INT_XOR (register, 0x1240, 16) , (register, 0x1240, 16)
begin_graph, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x1280, 8)
begin_graph, (register, 0x1260, 8) COPY (register, 0x1200, 8)
begin_graph, (register, 0x1268, 8) COPY (register, 0x1208, 8)
begin_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1220, 8)
begin_graph, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
begin_graph, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
begin_graph, (register, 0x1220, 8) COPY (register, 0x1240, 8)
begin_graph, (register, 0x1228, 8) COPY (register, 0x1248, 8)
begin_graph,  ---  BRANCH (ram, 0x401850, 8)
end_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
end_graph,  ---  BRANCH (ram, 0x401860, 8)
set_graph_parameters, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
set_graph_parameters, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
set_graph_parameters, (register, 0x98, 8) COPY (register, 0x30, 8)
set_graph_parameters, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
set_graph_parameters, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
set_graph_parameters, (register, 0x90, 8) COPY (register, 0x10, 8)
set_graph_parameters, (unique, 0xe780, 8) COPY (register, 0x28, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
set_graph_parameters, (unique, 0xe780, 8) COPY (register, 0x18, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
set_graph_parameters, (register, 0xb8, 4) COPY (register, 0x80, 4)
set_graph_parameters, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
set_graph_parameters, (register, 0x18, 8) COPY (register, 0x38, 8)
set_graph_parameters, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x88, 8)
set_graph_parameters, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x88, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x88, 8)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
set_graph_parameters, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x128, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x28, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1200, 8) COPY (register, 0x1260, 8)
set_graph_parameters, (register, 0x1208, 8) COPY (register, 0x1268, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1220, 8) COPY (register, 0x1280, 8)
set_graph_parameters, (register, 0x1228, 8) COPY (register, 0x1288, 8)
set_graph_parameters, (register, 0xb0, 4) COPY (register, 0x28, 4)
set_graph_parameters, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0xb0, 4) INT_AND (register, 0xb0, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0xb0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0xb0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x408ee0, 8) , (register, 0x206, 1)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x409488, 8) , (unique, 0xc680, 1)
set_graph_parameters, (register, 0x1300, 16) INT_XOR (register, 0x1300, 16) , (register, 0x1300, 16)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0xa8, 4) INT_XOR (register, 0xa8, 4) , (register, 0xa8, 4)
set_graph_parameters, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0xa8, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0xa8, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1300, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0x2, 4)
set_graph_parameters, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1300, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters,  ---  CBRANCH (ram, 0x408f0a, 8) , (register, 0x206, 1)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0xc8, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x4094a8, 8) , (unique, 0xc680, 1)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0xa0, 4) INT_XOR (register, 0xa0, 4) , (register, 0xa0, 4)
set_graph_parameters, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
set_graph_parameters, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1220, 8)
set_graph_parameters, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
set_graph_parameters, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1220, 8)
set_graph_parameters, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
set_graph_parameters, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1220, 8)
set_graph_parameters, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x204, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x207, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x408f25, 8) , (unique, 0xc780, 1)
set_graph_parameters, (register, 0x1240, 8) COPY (register, 0x1200, 8)
set_graph_parameters, (register, 0x1248, 8) COPY (register, 0x1208, 8)
set_graph_parameters, (register, 0x1200, 8) COPY (register, 0x1220, 8)
set_graph_parameters, (register, 0x1208, 8) COPY (register, 0x1228, 8)
set_graph_parameters, (register, 0xa0, 8) COPY (const, 0x1, 8)
set_graph_parameters, (register, 0x1220, 8) COPY (register, 0x1240, 8)
set_graph_parameters, (register, 0x1228, 8) COPY (register, 0x1248, 8)
set_graph_parameters, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
set_graph_parameters, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
set_graph_parameters, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
set_graph_parameters, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (register, 0x1200, 8)
set_graph_parameters, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
set_graph_parameters, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (register, 0x1200, 8)
set_graph_parameters, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x204, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x207, 1) COPY (const, 0x0, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x408f31, 8) , (register, 0x202, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x4094f8, 8) , (register, 0x206, 1)
set_graph_parameters, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12c0, 8)
set_graph_parameters, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12e0, 8)
set_graph_parameters, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
set_graph_parameters, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12c0, 8) , (register, 0x12e0, 8)
set_graph_parameters, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
set_graph_parameters, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12c0, 8) , (register, 0x12e0, 8)
set_graph_parameters, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x204, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x207, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x408f47, 8) , (unique, 0xc780, 1)
set_graph_parameters, (register, 0x1240, 8) COPY (register, 0x12c0, 8)
set_graph_parameters, (register, 0x1248, 8) COPY (register, 0x12c8, 8)
set_graph_parameters, (register, 0x12c0, 8) COPY (register, 0x12e0, 8)
set_graph_parameters, (register, 0x12c8, 8) COPY (register, 0x12e8, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0xa0, 4) INT_OR (register, 0xa0, 4) , (const, 0x2, 4)
set_graph_parameters, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x12e0, 8) COPY (register, 0x1240, 8)
set_graph_parameters, (register, 0x12e8, 8) COPY (register, 0x1248, 8)
set_graph_parameters, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12e0, 8)
set_graph_parameters, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12c0, 8)
set_graph_parameters, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
set_graph_parameters, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12e0, 8) , (register, 0x12c0, 8)
set_graph_parameters, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
set_graph_parameters, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12e0, 8) , (register, 0x12c0, 8)
set_graph_parameters, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x204, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x207, 1) COPY (const, 0x0, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x408f53, 8) , (register, 0x202, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x4095a0, 8) , (register, 0x206, 1)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x408f71, 8) , (register, 0x206, 1)
set_graph_parameters, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12a0, 8)
set_graph_parameters, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1300, 8)
set_graph_parameters, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
set_graph_parameters, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12a0, 8) , (register, 0x1300, 8)
set_graph_parameters, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
set_graph_parameters, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12a0, 8) , (register, 0x1300, 8)
set_graph_parameters, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x204, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x207, 1) COPY (const, 0x0, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x408f65, 8) , (register, 0x202, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x409701, 8) , (register, 0x206, 1)
set_graph_parameters, (register, 0x1240, 8) COPY (ram, 0x411730, 8)
set_graph_parameters, (register, 0x1248, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x12a0, 8) INT_AND (register, 0x12a0, 8) , (register, 0x1240, 8)
set_graph_parameters, (register, 0x12a8, 8) INT_AND (register, 0x12a8, 8) , (register, 0x1248, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0xc8, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x408fb0, 8) , (register, 0x206, 1)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0xc0, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1288, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1280, 8)
set_graph_parameters, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1300, 8)
set_graph_parameters, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
set_graph_parameters, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1280, 8) , (register, 0x1300, 8)
set_graph_parameters, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
set_graph_parameters, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1280, 8) , (register, 0x1300, 8)
set_graph_parameters, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x204, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x207, 1) COPY (const, 0x0, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x408f92, 8) , (register, 0x202, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x409701, 8) , (register, 0x206, 1)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0xc0, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1268, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x1240, 8) COPY (ram, 0x411730, 8)
set_graph_parameters, (register, 0x1248, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x1260, 8) INT_AND (register, 0x1260, 8) , (register, 0x1240, 8)
set_graph_parameters, (register, 0x1268, 8) INT_AND (register, 0x1268, 8) , (register, 0x1248, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0xc0, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x158, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x409360, 8) , (unique, 0xc680, 1)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x120, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1268, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x150, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1248, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0x59300, 8) INT_AND (register, 0x90, 8) , (register, 0x90, 8)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
set_graph_parameters, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1e8, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f8, 8)
set_graph_parameters, (unique, 0xbd80, 8) COPY (register, 0x98, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd80, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d0, 8)
set_graph_parameters, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbc80, 4)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c8, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
set_graph_parameters,  ---  CBRANCH (ram, 0x4094d0, 8) , (register, 0x206, 1)
set_graph_parameters, (register, 0x38, 8) COPY (register, 0x90, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1300, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) COPY (register, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40902d, 8)
set_graph_parameters,  ---  CALL (ram, 0x410320, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x200, 8)
set_graph_parameters, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd80, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1208, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1228, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0x59300, 8) INT_AND (register, 0x8, 8) , (register, 0x8, 8)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
set_graph_parameters, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x12a8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x12c8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x12e8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1308, 8) COPY (const, 0x0, 8)
set_graph_parameters,  ---  CBRANCH (ram, 0x4094e4, 8) , (register, 0x206, 1)
set_graph_parameters, (register, 0x38, 8) COPY (register, 0x8, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1300, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409094, 8)
set_graph_parameters,  ---  CALL (ram, 0x410320, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1208, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1228, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x208, 8)
set_graph_parameters, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd80, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x12a8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x12c8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x12e8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1308, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x148, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1288, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1300, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1240, 8) COPY (register, 0x12a0, 8)
set_graph_parameters, (register, 0x1248, 8) COPY (register, 0x12a8, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
set_graph_parameters, (register, 0x30, 8) COPY (unique, 0x3100, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xc0, 8)
set_graph_parameters, (register, 0x38, 8) COPY (unique, 0x3200, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x218, 8)
set_graph_parameters, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbc80, 4)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0x80, 4) COPY (register, 0xa8, 4)
set_graph_parameters, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x140, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x210, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x80, 4) INT_AND (register, 0x80, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1288, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x1260, 8) COPY (ram, 0x4116d8, 8)
set_graph_parameters, (register, 0x1268, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
set_graph_parameters, (unique, 0xbc80, 4) COPY (register, 0xb8, 4)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbc80, 4)
set_graph_parameters, (unique, 0xe780, 8) COPY (register, 0x0, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x140, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1280, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0xe780, 8) COPY (register, 0x0, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
set_graph_parameters, (register, 0x0, 4) COPY (register, 0xa0, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1e0, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0xa0, 4) INT_AND (register, 0xa0, 4) , (const, 0x2, 4)
set_graph_parameters, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0xe780, 8) COPY (register, 0x0, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
set_graph_parameters, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x150, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x120, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x110, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1288, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x118, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1268, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x88, 4) INT_AND (register, 0x88, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x88, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x88, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409180, 8)
set_graph_parameters,  ---  CALL (ram, 0x405f00, 8)
set_graph_parameters, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x20, 8)
set_graph_parameters, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x20, 8)
set_graph_parameters, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x20, 8)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
set_graph_parameters, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x140, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
set_graph_parameters, (register, 0x30, 8) COPY (unique, 0x3100, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x140, 8)
set_graph_parameters, (register, 0x38, 8) COPY (unique, 0x3200, 8)
set_graph_parameters, (register, 0x80, 4) COPY (register, 0xa8, 4)
set_graph_parameters, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x80, 4) INT_AND (register, 0x80, 4) , (const, 0x2, 4)
set_graph_parameters, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x2, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0xe780, 8) COPY (register, 0x0, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x140, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x2, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0xe780, 8) COPY (register, 0x0, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
set_graph_parameters, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
set_graph_parameters, (unique, 0xe780, 8) COPY (register, 0x28, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x150, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x138, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x128, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x12e8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x12c8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x88, 4) INT_AND (register, 0x88, 4) , (const, 0x2, 4)
set_graph_parameters, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x88, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x88, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1288, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x1220, 8) COPY (register, 0x12e0, 8)
set_graph_parameters, (register, 0x1228, 8) COPY (register, 0x12e8, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x130, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1268, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0xe0, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1248, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x1200, 8) COPY (register, 0x12c0, 8)
set_graph_parameters, (register, 0x1208, 8) COPY (register, 0x12c8, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4091fc, 8)
set_graph_parameters,  ---  CALL (ram, 0x405f00, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x108, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x12a8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
set_graph_parameters, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0xf0, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1208, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
set_graph_parameters, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbe00, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x100, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1288, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12a0, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0xf0, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1268, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0xf8, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x12a8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x12e0, 8) COPY (ram, 0x4116d0, 8)
set_graph_parameters, (register, 0x12e8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x48, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0xf8, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1208, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x20, 8)
set_graph_parameters, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x20, 8)
set_graph_parameters, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x20, 8)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
set_graph_parameters, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
set_graph_parameters, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
set_graph_parameters, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x4, 4)
set_graph_parameters, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
set_graph_parameters, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x4, 4)
set_graph_parameters, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
set_graph_parameters, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x4, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x60, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x98, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb0, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1308, 8) COPY (const, 0x0, 8)
set_graph_parameters,  ---  CBRANCH (ram, 0x409648, 8) , (register, 0x206, 1)
set_graph_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
set_graph_parameters, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1208, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
set_graph_parameters, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1208, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
set_graph_parameters, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1208, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
set_graph_parameters, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1208, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1300, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
set_graph_parameters, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1300, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1300, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x204, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x207, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
set_graph_parameters, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x409320, 8) , (unique, 0xc900, 1)
set_graph_parameters, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
set_graph_parameters, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
set_graph_parameters, (register, 0x30, 8) COPY (const, 0x411619, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4092f8, 8)
set_graph_parameters,  ---  CALL (ram, 0x4019a0, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x409320, 8) , (register, 0x206, 1)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1208, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (ram, 0x4116a8, 8)
set_graph_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
set_graph_parameters, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
set_graph_parameters,  ---  BRANCH (ram, 0x40932b, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
set_graph_parameters, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbe00, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x21c, 8)
set_graph_parameters, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd00, 4)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x220, 8)
set_graph_parameters, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbe00, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x228, 8)
set_graph_parameters, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbe00, 8)
set_graph_parameters, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x88, 8)
set_graph_parameters, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x88, 8)
set_graph_parameters, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x88, 8)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
set_graph_parameters, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
set_graph_parameters, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
set_graph_parameters, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
set_graph_parameters, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
set_graph_parameters, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
set_graph_parameters, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
set_graph_parameters, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
set_graph_parameters, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  RETURN (register, 0x288, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x0, 8) COPY (const, 0x2, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x130, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
set_graph_parameters, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
set_graph_parameters, (register, 0x28, 1) COPY (unique, 0xc680, 1)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0x59200, 4) INT_AND (register, 0xb0, 4) , (register, 0xb0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x138, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
set_graph_parameters, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
set_graph_parameters, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
set_graph_parameters, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x409380, 8) , (unique, 0x27780, 1)
set_graph_parameters, (register, 0xb0, 4) COPY (register, 0x0, 4)
set_graph_parameters, (register, 0x28, 4) INT_ZEXT (register, 0x28, 1)
set_graph_parameters, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x118, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x28, 4) INT_OR (register, 0x28, 4) , (register, 0xb0, 4)
set_graph_parameters, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x130, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0xb0, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
set_graph_parameters, (unique, 0xbe80, 1) COPY (const, 0x1, 1)
set_graph_parameters, (unique, 0x56f00, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x56f00, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x10, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1248, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1288, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0xb0, 4) INT_AND (register, 0xb0, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0xb0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0xb0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
set_graph_parameters, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
set_graph_parameters, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x4093b3, 8) , (unique, 0x27780, 1)
set_graph_parameters, (register, 0xb0, 4) COPY (register, 0x0, 4)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0xb0, 4) INT_OR (register, 0xb0, 4) , (register, 0x10, 4)
set_graph_parameters, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0xb0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0xb0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x138, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
set_graph_parameters, (register, 0x1240, 8) COPY (register, 0x12a0, 8)
set_graph_parameters, (register, 0x1248, 8) COPY (register, 0x12a8, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0xc0, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x12a8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x130, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) COPY (register, 0xb0, 4)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbc80, 4)
set_graph_parameters, (register, 0xb0, 4) COPY (register, 0x28, 4)
set_graph_parameters, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
set_graph_parameters, (unique, 0xbe80, 1) COPY (const, 0x1, 1)
set_graph_parameters, (unique, 0x56f00, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x56f00, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x10, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0xc0, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
set_graph_parameters, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
set_graph_parameters, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x4093ef, 8) , (unique, 0x27780, 1)
set_graph_parameters, (register, 0x30, 4) COPY (register, 0x0, 4)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x30, 4) INT_OR (register, 0x30, 4) , (register, 0x10, 4)
set_graph_parameters, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x140, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x138, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) COPY (register, 0x30, 4)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbc80, 4)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x140, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
set_graph_parameters, (register, 0x1240, 8) COPY (register, 0x1220, 8)
set_graph_parameters, (register, 0x1248, 8) COPY (register, 0x1228, 8)
set_graph_parameters, (register, 0x1220, 8) COPY (register, 0x12e0, 8)
set_graph_parameters, (register, 0x1228, 8) COPY (register, 0x12e8, 8)
set_graph_parameters, (unique, 0xbe80, 1) COPY (const, 0x1, 1)
set_graph_parameters, (unique, 0x56f00, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x56f00, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x10, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x12e0, 8) COPY (register, 0x1240, 8)
set_graph_parameters, (register, 0x12e8, 8) COPY (register, 0x1248, 8)
set_graph_parameters, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
set_graph_parameters, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
set_graph_parameters, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x40941d, 8) , (unique, 0x27780, 1)
set_graph_parameters, (register, 0x30, 4) COPY (register, 0x0, 4)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x30, 4) INT_OR (register, 0x30, 4) , (register, 0x10, 4)
set_graph_parameters, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x10, 4) COPY (register, 0xa0, 4)
set_graph_parameters, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
set_graph_parameters, (unique, 0xbe80, 1) COPY (const, 0x1, 1)
set_graph_parameters, (unique, 0x56f00, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x56f00, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x10, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0xa0, 4) INT_AND (register, 0xa0, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x140, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) COPY (register, 0x30, 4)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbc80, 4)
set_graph_parameters, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
set_graph_parameters, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
set_graph_parameters, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x409436, 8) , (unique, 0x27780, 1)
set_graph_parameters, (register, 0xa0, 4) COPY (register, 0x0, 4)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0xa0, 4) INT_OR (register, 0xa0, 4) , (register, 0x10, 4)
set_graph_parameters, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x10, 4) COPY (register, 0xa8, 4)
set_graph_parameters, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
set_graph_parameters, (unique, 0xbe80, 1) COPY (const, 0x1, 1)
set_graph_parameters, (unique, 0x56f00, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x56f00, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x10, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0xa8, 4) INT_AND (register, 0xa8, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0xa8, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0xa8, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
set_graph_parameters, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
set_graph_parameters, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x409449, 8) , (unique, 0x27780, 1)
set_graph_parameters, (register, 0xa8, 4) COPY (register, 0x0, 4)
set_graph_parameters, (register, 0x0, 4) COPY (register, 0x10, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0xb0, 4) INT_AND (register, 0xb0, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0xb0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0xb0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x1240, 8) COPY (register, 0x1200, 8)
set_graph_parameters, (register, 0x1248, 8) COPY (register, 0x1208, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0xa8, 4) INT_OR (register, 0xa8, 4) , (register, 0x0, 4)
set_graph_parameters, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0xa8, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0xa8, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x100, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0x2, 4)
set_graph_parameters, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x1200, 8) COPY (register, 0x12c0, 8)
set_graph_parameters, (register, 0x1208, 8) COPY (register, 0x12c8, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x100, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) COPY (register, 0x38, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
set_graph_parameters, (register, 0x12c0, 8) COPY (register, 0x1240, 8)
set_graph_parameters, (register, 0x12c8, 8) COPY (register, 0x1248, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0x118, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd80, 8)
set_graph_parameters,  ---  BRANCH (ram, 0x408fbf, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0xa8, 8) COPY (const, 0x1, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x88, 4) INT_XOR (register, 0x88, 4) , (register, 0x88, 4)
set_graph_parameters, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x88, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x88, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x1300, 16) INT_XOR (register, 0x1300, 16) , (register, 0x1300, 16)
set_graph_parameters,  ---  BRANCH (ram, 0x408eef, 8)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0xc0, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8)
set_graph_parameters, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1268, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0xa8, 4) INT_OR (register, 0xa8, 4) , (const, 0x2, 4)
set_graph_parameters, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0xa8, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0xa8, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3c80, 8) INT_ADD (const, 0xc8, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbd00, 4)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters,  ---  BRANCH (ram, 0x408f0a, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0x59300, 8) INT_AND (register, 0x8, 8) , (register, 0x8, 8)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
set_graph_parameters, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x200, 8)
set_graph_parameters, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbe00, 8)
set_graph_parameters, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x409067, 8) , (unique, 0xc680, 1)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x208, 8)
set_graph_parameters, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbe00, 8)
set_graph_parameters,  ---  BRANCH (ram, 0x4090c0, 8)
set_graph_parameters, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
set_graph_parameters, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
set_graph_parameters, (register, 0x30, 8) COPY (const, 0x4114a0, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1300, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x74, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) COPY (register, 0x88, 4)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) COPY (register, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) COPY (register, 0x90, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) COPY (register, 0x98, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40954b, 8)
set_graph_parameters,  ---  CALL (ram, 0x401b10, 8)
set_graph_parameters, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
set_graph_parameters, (register, 0x1248, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1228, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x74, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1208, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
set_graph_parameters, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1308, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1240, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x12e8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x12c8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x90, 8) COPY (unique, 0xbd80, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x12a8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x98, 8) COPY (unique, 0xbd80, 8)
set_graph_parameters,  ---  BRANCH (ram, 0x408f31, 8)
set_graph_parameters, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
set_graph_parameters, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
set_graph_parameters, (register, 0x30, 8) COPY (const, 0x4114d8, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1300, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x74, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) COPY (register, 0x88, 4)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) COPY (register, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) COPY (register, 0x90, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) COPY (register, 0x98, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4095f3, 8)
set_graph_parameters,  ---  CALL (ram, 0x401b10, 8)
set_graph_parameters, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
set_graph_parameters, (register, 0x1248, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x68, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x12e8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x74, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x60, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x12c8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
set_graph_parameters, (register, 0x12e0, 8) FLOAT_ADD (register, 0x12e0, 8) , (register, 0x1240, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x78, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1308, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x1240, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x58, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x12a8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x50, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1228, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x90, 8) COPY (unique, 0xbd80, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1208, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
set_graph_parameters, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
set_graph_parameters, (register, 0x98, 8) COPY (unique, 0xbd80, 8)
set_graph_parameters,  ---  BRANCH (ram, 0x408f53, 8)
set_graph_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
set_graph_parameters, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x12c8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
set_graph_parameters, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1288, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x1240, 8) COPY (register, 0x1300, 8)
set_graph_parameters, (register, 0x1248, 8) COPY (register, 0x1308, 8)
set_graph_parameters, (register, 0x1200, 8) COPY (register, 0x12c0, 8)
set_graph_parameters, (register, 0x1208, 8) COPY (register, 0x12c8, 8)
set_graph_parameters, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1280, 8)
set_graph_parameters, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1300, 8)
set_graph_parameters, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
set_graph_parameters, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
set_graph_parameters, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1300, 8) , (register, 0x1200, 8)
set_graph_parameters, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
set_graph_parameters, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1300, 8) , (register, 0x1200, 8)
set_graph_parameters, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x204, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x207, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x40967b, 8) , (unique, 0xc580, 1)
set_graph_parameters, (register, 0x1400, 8) COPY (register, 0x1240, 8)
set_graph_parameters, (register, 0x1410, 8) COPY (register, 0x12c0, 8)
set_graph_parameters, (unique, 0x70980, 1) FLOAT_LESS (register, 0x1400, 8) , (register, 0x1410, 8)
set_graph_parameters, (unique, 0x70a00, 8) INT_ZEXT (unique, 0x70980, 1)
set_graph_parameters, (register, 0x1400, 8) INT_MULT (unique, 0x70a00, 8) , (const, 0xffffffffffffffff, 8)
set_graph_parameters, (register, 0x1240, 8) COPY (register, 0x1400, 8)
set_graph_parameters, (register, 0x1200, 8) COPY (register, 0x12c0, 8)
set_graph_parameters, (register, 0x1208, 8) COPY (register, 0x12c8, 8)
set_graph_parameters, (register, 0x1200, 8) INT_AND (register, 0x1200, 8) , (register, 0x1240, 8)
set_graph_parameters, (register, 0x1208, 8) INT_AND (register, 0x1208, 8) , (register, 0x1248, 8)
set_graph_parameters, (unique, 0x69780, 8) INT_NEGATE (register, 0x1240, 8)
set_graph_parameters, (register, 0x1240, 8) INT_AND (unique, 0x69780, 8) , (register, 0x1280, 8)
set_graph_parameters, (unique, 0x69880, 8) INT_NEGATE (register, 0x1248, 8)
set_graph_parameters, (register, 0x1248, 8) INT_AND (unique, 0x69880, 8) , (register, 0x1288, 8)
set_graph_parameters, (register, 0x1240, 16) INT_OR (register, 0x1240, 16) , (register, 0x1200, 16)
set_graph_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
set_graph_parameters, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x12a8, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x1200, 8) COPY (register, 0x1300, 8)
set_graph_parameters, (register, 0x1208, 8) COPY (register, 0x1308, 8)
set_graph_parameters, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)
set_graph_parameters, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
set_graph_parameters, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1268, 8) COPY (const, 0x0, 8)
set_graph_parameters, (register, 0x1220, 8) COPY (register, 0x12a0, 8)
set_graph_parameters, (register, 0x1228, 8) COPY (register, 0x12a8, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1260, 8)
set_graph_parameters, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1300, 8)
set_graph_parameters, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1220, 8)
set_graph_parameters, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
set_graph_parameters, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1300, 8) , (register, 0x1220, 8)
set_graph_parameters, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
set_graph_parameters, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1300, 8) , (register, 0x1220, 8)
set_graph_parameters, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x204, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x207, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
set_graph_parameters,  ---  CBRANCH (ram, 0x4096b6, 8) , (unique, 0xc580, 1)
set_graph_parameters, (register, 0x1400, 8) COPY (register, 0x1200, 8)
set_graph_parameters, (register, 0x1410, 8) COPY (register, 0x12a0, 8)
set_graph_parameters, (unique, 0x70980, 1) FLOAT_LESS (register, 0x1400, 8) , (register, 0x1410, 8)
set_graph_parameters, (unique, 0x70a00, 8) INT_ZEXT (unique, 0x70980, 1)
set_graph_parameters, (register, 0x1400, 8) INT_MULT (unique, 0x70a00, 8) , (const, 0xffffffffffffffff, 8)
set_graph_parameters, (register, 0x1200, 8) COPY (register, 0x1400, 8)
set_graph_parameters, (register, 0x1220, 8) COPY (register, 0x12a0, 8)
set_graph_parameters, (register, 0x1228, 8) COPY (register, 0x12a8, 8)
set_graph_parameters, (register, 0x1220, 8) INT_AND (register, 0x1220, 8) , (register, 0x1200, 8)
set_graph_parameters, (register, 0x1228, 8) INT_AND (register, 0x1228, 8) , (register, 0x1208, 8)
set_graph_parameters, (unique, 0x69780, 8) INT_NEGATE (register, 0x1200, 8)
set_graph_parameters, (register, 0x1200, 8) INT_AND (unique, 0x69780, 8) , (register, 0x1260, 8)
set_graph_parameters, (unique, 0x69880, 8) INT_NEGATE (register, 0x1208, 8)
set_graph_parameters, (register, 0x1208, 8) INT_AND (unique, 0x69880, 8) , (register, 0x1268, 8)
set_graph_parameters, (register, 0x1200, 16) INT_OR (register, 0x1200, 16) , (register, 0x1220, 16)
set_graph_parameters, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x1240, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x12c0, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1200, 8)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
set_graph_parameters, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
set_graph_parameters, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x12a0, 8)
set_graph_parameters, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
set_graph_parameters, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1280, 8)
set_graph_parameters, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
set_graph_parameters, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (register, 0x1280, 8)
set_graph_parameters, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
set_graph_parameters, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1280, 8)
set_graph_parameters, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x204, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x207, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
set_graph_parameters, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
set_graph_parameters, (register, 0x0, 1) COPY (unique, 0xc900, 1)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x128, 8)
set_graph_parameters, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbc80, 4)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
set_graph_parameters, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1260, 8)
set_graph_parameters, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
set_graph_parameters, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1260, 8)
set_graph_parameters, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
set_graph_parameters, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1260, 8)
set_graph_parameters, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x204, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x207, 1) COPY (const, 0x0, 1)
set_graph_parameters, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
set_graph_parameters, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
set_graph_parameters, (register, 0x0, 1) COPY (unique, 0xc900, 1)
set_graph_parameters, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a8, 8)
set_graph_parameters, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
set_graph_parameters,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbc80, 4)
set_graph_parameters,  ---  BRANCH (ram, 0x4092e2, 8)
set_graph_parameters, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
set_graph_parameters, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
set_graph_parameters, (register, 0x30, 8) COPY (const, 0x411510, 8)
set_graph_parameters, (register, 0x200, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x20b, 1) COPY (const, 0x0, 1)
set_graph_parameters, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
set_graph_parameters, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
set_graph_parameters, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
set_graph_parameters, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
set_graph_parameters, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
set_graph_parameters, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
set_graph_parameters, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40971b, 8)
set_graph_parameters,  ---  CALL (ram, 0x401b10, 8)
set_graph_parameters, (register, 0x38, 8) COPY (const, 0x1, 8)
set_graph_parameters, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
set_graph_parameters,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409725, 8)
set_graph_parameters,  ---  CALL (ram, 0x4017a0, 8)
draw_frame_of_graph, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
draw_frame_of_graph, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
draw_frame_of_graph, (unique, 0xe780, 8) COPY (register, 0x28, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
draw_frame_of_graph, (unique, 0xe780, 8) COPY (register, 0x18, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
draw_frame_of_graph, (register, 0x18, 8) COPY (register, 0x38, 8)
draw_frame_of_graph, (register, 0x28, 4) COPY (register, 0x30, 4)
draw_frame_of_graph, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x838, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x838, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x838, 8)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40974a, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018e0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f8, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59300, 8) INT_AND (register, 0x30, 8) , (register, 0x30, 8)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40975e, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40975e, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a70, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x4116d0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1e8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409776, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401b00, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x411244, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409783, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a10, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
draw_frame_of_graph, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40978d, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401760, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a300, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409aa0, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a8, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x4097c2, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x200, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59300, 8) INT_AND (register, 0x8, 8) , (register, 0x8, 8)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x4097c2, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
draw_frame_of_graph, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a9d0, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x3, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x3, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x3, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b808, 8) , (unique, 0xc900, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x2, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409b28, 8) , (unique, 0xc580, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409bca, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x128, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1340, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1348, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1328, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b9b0, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1340, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1360, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1368, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x13c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x13c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x13a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x13a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1380, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1388, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b9a0, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x13c0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_DIV (register, 0x12c0, 8) , (register, 0x13a0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_ADD (register, 0x12c0, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1380, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_ADD (register, 0x12c0, 8) , (register, 0x1360, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b988, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x13e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x13e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x13e0, 8) FLOAT_SUB (register, 0x13e0, 8) , (register, 0x1340, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x1340, 8) COPY (register, 0x13e0, 8)
draw_frame_of_graph, (register, 0x1348, 8) COPY (register, 0x13e8, 8)
draw_frame_of_graph, (register, 0x1340, 8) FLOAT_DIV (register, 0x1340, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (register, 0x1300, 8) FLOAT_MULT (register, 0x1300, 8) , (register, 0x1340, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_ADD (register, 0x12e0, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b950, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x13c0, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (register, 0x13a0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1380, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1360, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x12c8, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40991b, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x12c8, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409932, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018f0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409945, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018f0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x409bc2, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40bad0, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1328, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (ram, 0x4116c0, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1300, 8) FLOAT_MULT (register, 0x1300, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (register, 0x1320, 8) COPY (ram, 0x4116c8, 8)
draw_frame_of_graph, (register, 0x1328, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1300, 8) , (register, 0x12c0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x4099fc, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1300, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 16) INT_XOR (register, 0x12c0, 16) , (register, 0x12c0, 16)
draw_frame_of_graph, (register, 0x1400, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1410, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x70b00, 1) FLOAT_LESSEQUAL (register, 0x1400, 8) , (register, 0x1410, 8)
draw_frame_of_graph, (unique, 0x70b80, 8) INT_ZEXT (unique, 0x70b00, 1)
draw_frame_of_graph, (register, 0x1400, 8) INT_MULT (unique, 0x70b80, 8) , (const, 0xffffffffffffffff, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1400, 8)
draw_frame_of_graph, (register, 0x12e0, 8) INT_AND (register, 0x12e0, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12e8, 8) INT_AND (register, 0x12e8, 8) , (register, 0x12c8, 8)
draw_frame_of_graph, (unique, 0x69780, 8) INT_NEGATE (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) INT_AND (unique, 0x69780, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (unique, 0x69880, 8) INT_NEGATE (register, 0x12c8, 8)
draw_frame_of_graph, (register, 0x12c8, 8) INT_AND (unique, 0x69880, 8) , (register, 0x1328, 8)
draw_frame_of_graph, (register, 0x12e0, 16) INT_OR (register, 0x12e0, 16) , (register, 0x12c0, 16)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (ram, 0x411730, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) INT_AND (register, 0x12c0, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x12c8, 8) INT_AND (register, 0x12c8, 8) , (register, 0x12a8, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_MULT (register, 0x12e0, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (ram, 0x411700, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1b0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_ADD (register, 0x12a0, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1288, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409a58, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c7e5, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x5a, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409a73, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401930, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x150, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x10, 8) COPY (const, 0x74, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x63, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409a8c, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a50, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
draw_frame_of_graph, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409a96, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401930, 8)
draw_frame_of_graph, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
draw_frame_of_graph, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409aa8, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018b0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409ab0, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401860, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409b00, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x8, 4) COPY (ram, 0x613d0c, 4)
draw_frame_of_graph, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409b00, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x12c, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409b10, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x138, 8)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x2, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x2, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x2, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
draw_frame_of_graph, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409b10, 8) , (unique, 0xd080, 1)
draw_frame_of_graph, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x411550, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409af1, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401b10, 8)
draw_frame_of_graph, (ram, 0x613d0c, 4) COPY (const, 0x1, 4)
draw_frame_of_graph, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
draw_frame_of_graph, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x838, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x838, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x838, 8)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  RETURN (register, 0x288, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1ac, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409b00, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1b8, 8)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x2, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x2, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x2, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
draw_frame_of_graph, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409ad7, 8) , (unique, 0xce80, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x409b00, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1300, 16) INT_XOR (register, 0x1300, 16) , (register, 0x1300, 16)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (register, 0x12c8, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1340, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1348, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (register, 0x1288, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1340, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1348, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_MULT (register, 0x12e0, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1340, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (register, 0x1348, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1328, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_ADD (register, 0x12c0, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_ADD (register, 0x12a0, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1360, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1368, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1360, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1360, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409bbc, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401900, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409aa0, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x12c, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409be2, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x10c, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a780, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1ac, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409bfa, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x18c, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a530, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x108, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409cd8, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x10c, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a160, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x12c, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409ce6, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (register, 0x1288, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (ram, 0x411698, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409c56, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401ae0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0xa0, 4) TRUNC (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1288, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409c73, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401740, 8)
draw_frame_of_graph, (register, 0xa8, 4) TRUNC (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0xa0, 4) , (register, 0xa8, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0xa0, 4) , (register, 0xa8, 4)
draw_frame_of_graph, (unique, 0x28600, 4) INT_SUB (register, 0xa0, 4) , (register, 0xa8, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xcd00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409ce6, 8) , (unique, 0xcd00, 1)
draw_frame_of_graph, (register, 0x12e0, 16) INT_XOR (register, 0x12e0, 16) , (register, 0x12e0, 16)
draw_frame_of_graph, (register, 0x28, 8) COPY (const, 0x1, 8)
draw_frame_of_graph, (register, 0x12e0, 8) INT2FLOAT (register, 0xa0, 4)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
draw_frame_of_graph, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
draw_frame_of_graph, (register, 0x1200, 16) INT_XOR (register, 0x1200, 16) , (register, 0x1200, 16)
draw_frame_of_graph, (register, 0x1200, 8) INT2FLOAT (register, 0x28, 4)
draw_frame_of_graph, (register, 0x200, 1) INT_CARRY (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409ca8, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401700, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (register, 0x18, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409cb5, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x407550, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0xa, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0xa, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0xa, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409c98, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_CARRY (register, 0xa0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SCARRY (register, 0xa0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0xa0, 4) , (register, 0xa8, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0xa0, 4) , (register, 0xa8, 4)
draw_frame_of_graph, (unique, 0x28600, 4) INT_SUB (register, 0xa0, 4) , (register, 0xa8, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409c80, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409f89, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x10c, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a160, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x188, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409dc8, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x18c, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a230, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1ac, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409dd6, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (register, 0x1288, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (ram, 0x411698, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409d42, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401ae0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0xa0, 4) TRUNC (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1288, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409d5f, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401740, 8)
draw_frame_of_graph, (register, 0xa8, 4) TRUNC (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0xa0, 4) , (register, 0xa8, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0xa0, 4) , (register, 0xa8, 4)
draw_frame_of_graph, (unique, 0x28600, 4) INT_SUB (register, 0xa0, 4) , (register, 0xa8, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xcd00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409dd6, 8) , (unique, 0xcd00, 1)
draw_frame_of_graph, (register, 0x1280, 16) INT_XOR (register, 0x1280, 16) , (register, 0x1280, 16)
draw_frame_of_graph, (register, 0x28, 8) COPY (const, 0x1, 8)
draw_frame_of_graph, (register, 0x1280, 8) INT2FLOAT (register, 0xa0, 4)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
draw_frame_of_graph, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
draw_frame_of_graph, (register, 0x1200, 16) INT_XOR (register, 0x1200, 16) , (register, 0x1200, 16)
draw_frame_of_graph, (register, 0x1200, 8) INT2FLOAT (register, 0x28, 4)
draw_frame_of_graph, (register, 0x200, 1) INT_CARRY (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409d98, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401700, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (register, 0x18, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409da5, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x408090, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0xa, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0xa, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x28, 4) , (const, 0xa, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409d88, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_CARRY (register, 0xa0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SCARRY (register, 0xa0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0xa0, 4) , (register, 0xa8, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0xa0, 4) , (register, 0xa8, 4)
draw_frame_of_graph, (unique, 0x28600, 4) INT_SUB (register, 0xa0, 4) , (register, 0xa8, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409d70, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409aa0, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x18c, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a230, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xd0, 8)
draw_frame_of_graph, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409f97, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xc0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409df3, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a20, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1220, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409e14, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xc8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409e21, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017c0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ba00, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (ram, 0x4116a8, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a8, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a408, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0xa0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (ram, 0x4116f8, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1320, 8) COPY (ram, 0x4116e0, 8)
draw_frame_of_graph, (register, 0x1328, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (ram, 0x411660, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1340, 8) COPY (ram, 0x4116e8, 8)
draw_frame_of_graph, (register, 0x1348, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1300, 16) INT_XOR (register, 0x1300, 16) , (register, 0x1300, 16)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1220, 8) , (register, 0x12c0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409ee6, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1400, 8) COPY (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1410, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x70b00, 1) FLOAT_LESSEQUAL (register, 0x1400, 8) , (register, 0x1410, 8)
draw_frame_of_graph, (unique, 0x70b80, 8) INT_ZEXT (unique, 0x70b00, 1)
draw_frame_of_graph, (register, 0x1400, 8) INT_MULT (unique, 0x70b80, 8) , (const, 0xffffffffffffffff, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (register, 0x1400, 8)
draw_frame_of_graph, (register, 0x1320, 8) INT_AND (register, 0x1320, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1328, 8) INT_AND (register, 0x1328, 8) , (register, 0x1308, 8)
draw_frame_of_graph, (unique, 0x69780, 8) INT_NEGATE (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1300, 8) INT_AND (unique, 0x69780, 8) , (register, 0x1340, 8)
draw_frame_of_graph, (unique, 0x69880, 8) INT_NEGATE (register, 0x1308, 8)
draw_frame_of_graph, (register, 0x1308, 8) INT_AND (unique, 0x69880, 8) , (register, 0x1348, 8)
draw_frame_of_graph, (register, 0x1320, 16) INT_OR (register, 0x1320, 16) , (register, 0x1300, 16)
draw_frame_of_graph, (register, 0x1300, 8) COPY (ram, 0x411730, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1300, 8) INT_AND (register, 0x1300, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1308, 8) INT_AND (register, 0x1308, 8) , (register, 0x12c8, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1320, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (register, 0x1328, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ba80, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_MULT (register, 0x12e0, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409f70, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xd0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x10, 8) COPY (const, 0x62, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x63, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409f89, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a50, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x28, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409aa0, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x150, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409aa0, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
draw_frame_of_graph, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409aa0, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x140, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409fbf, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a20, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1220, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409fe0, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x148, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409fed, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017c0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c6ec, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4116a8, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x128, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x98, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409950, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x90, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40badd, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1328, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (ram, 0x4116c0, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1300, 8) FLOAT_MULT (register, 0x1300, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (register, 0x1320, 8) COPY (ram, 0x4116c8, 8)
draw_frame_of_graph, (register, 0x1328, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1300, 8) , (register, 0x12c0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a0d6, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1300, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 16) INT_XOR (register, 0x12c0, 16) , (register, 0x12c0, 16)
draw_frame_of_graph, (register, 0x1400, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1410, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x70b00, 1) FLOAT_LESSEQUAL (register, 0x1400, 8) , (register, 0x1410, 8)
draw_frame_of_graph, (unique, 0x70b80, 8) INT_ZEXT (unique, 0x70b00, 1)
draw_frame_of_graph, (register, 0x1400, 8) INT_MULT (unique, 0x70b80, 8) , (const, 0xffffffffffffffff, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1400, 8)
draw_frame_of_graph, (register, 0x12e0, 8) INT_AND (register, 0x12e0, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12e8, 8) INT_AND (register, 0x12e8, 8) , (register, 0x12c8, 8)
draw_frame_of_graph, (unique, 0x69780, 8) INT_NEGATE (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) INT_AND (unique, 0x69780, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (unique, 0x69880, 8) INT_NEGATE (register, 0x12c8, 8)
draw_frame_of_graph, (register, 0x12c8, 8) INT_AND (unique, 0x69880, 8) , (register, 0x1328, 8)
draw_frame_of_graph, (register, 0x12e0, 16) INT_OR (register, 0x12e0, 16) , (register, 0x12c0, 16)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (ram, 0x411730, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) INT_AND (register, 0x12c0, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x12c8, 8) INT_AND (register, 0x12c8, 8) , (register, 0x12a8, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_MULT (register, 0x12e0, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (ram, 0x411700, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1b0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_ADD (register, 0x12a0, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1288, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a132, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c7c7, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x5a, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a14f, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401930, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x150, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x10, 8) COPY (const, 0x78, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x409a7f, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x12c, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409ce6, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x411670, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (ram, 0x411698, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a19a, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401950, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x110, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a1a7, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401ae0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x28, 4) TRUNC (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x411670, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a1c6, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401950, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x110, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a1dc, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401740, 8)
draw_frame_of_graph, (register, 0xa0, 4) TRUNC (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (register, 0xa0, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (register, 0xa0, 4)
draw_frame_of_graph, (unique, 0x28600, 4) INT_SUB (register, 0x28, 4) , (register, 0xa0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
draw_frame_of_graph, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a1f8, 8) , (unique, 0xce80, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40a219, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x110, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 16) INT_XOR (register, 0x1200, 16) , (register, 0x1200, 16)
draw_frame_of_graph, (register, 0x1200, 8) INT2FLOAT (register, 0x28, 4)
draw_frame_of_graph, (register, 0x200, 1) INT_CARRY (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a20c, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401700, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (register, 0x18, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a214, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x407550, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0xa0, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0xa0, 4) , (register, 0x28, 4)
draw_frame_of_graph, (unique, 0x28600, 4) INT_SUB (register, 0xa0, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xcd00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a1f0, 8) , (unique, 0xcd00, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409ce6, 8) , (unique, 0xc680, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x409aa0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1ac, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409dd6, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x411670, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (ram, 0x411698, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a26a, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401950, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x190, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a277, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401ae0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x28, 4) TRUNC (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x411670, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a296, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401950, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x190, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a2ac, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401740, 8)
draw_frame_of_graph, (register, 0xa0, 4) TRUNC (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (register, 0xa0, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (register, 0xa0, 4)
draw_frame_of_graph, (unique, 0x28600, 4) INT_SUB (register, 0x28, 4) , (register, 0xa0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
draw_frame_of_graph, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a2c8, 8) , (unique, 0xce80, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40a2e9, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x190, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 16) INT_XOR (register, 0x1200, 16) , (register, 0x1200, 16)
draw_frame_of_graph, (register, 0x1200, 8) INT2FLOAT (register, 0x28, 4)
draw_frame_of_graph, (register, 0x200, 1) INT_CARRY (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a2dc, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401700, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (register, 0x18, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a2e4, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x408090, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0xa0, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0xa0, 4) , (register, 0x28, 4)
draw_frame_of_graph, (unique, 0x28600, 4) INT_SUB (register, 0xa0, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xcd00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a2c0, 8) , (unique, 0xcd00, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409dd6, 8) , (unique, 0xc680, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x409aa0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a308, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018e0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x411624, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a315, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4019a0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a9c0, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59300, 8) INT_AND (register, 0x30, 8) , (register, 0x30, 8)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a9c0, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a332, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401aa0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x1, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a33f, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401760, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4116a8, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1328, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (register, 0x1288, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1340, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1348, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_ADD (register, 0x12c0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x12c8, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_ADD (register, 0x12c0, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_ADD (register, 0x12a0, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1340, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1348, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (register, 0x1308, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1340, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a3f4, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401900, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a3fc, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401860, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x409795, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0xa8, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0xa8, 4) , (register, 0xa8, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x1340, 8) COPY (ram, 0x4116e8, 8)
draw_frame_of_graph, (register, 0x1348, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (ram, 0x4116e0, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x12a0, 8) , (register, 0x12c0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a46d, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 16) INT_XOR (register, 0x12c0, 16) , (register, 0x12c0, 16)
draw_frame_of_graph, (register, 0x1320, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x1328, 8) COPY (register, 0x12a8, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1400, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1410, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x70b00, 1) FLOAT_LESSEQUAL (register, 0x1400, 8) , (register, 0x1410, 8)
draw_frame_of_graph, (unique, 0x70b80, 8) INT_ZEXT (unique, 0x70b00, 1)
draw_frame_of_graph, (register, 0x1400, 8) INT_MULT (unique, 0x70b80, 8) , (const, 0xffffffffffffffff, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1400, 8)
draw_frame_of_graph, (register, 0x1300, 8) INT_AND (register, 0x1300, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1308, 8) INT_AND (register, 0x1308, 8) , (register, 0x12c8, 8)
draw_frame_of_graph, (unique, 0x69780, 8) INT_NEGATE (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) INT_AND (unique, 0x69780, 8) , (register, 0x1340, 8)
draw_frame_of_graph, (unique, 0x69880, 8) INT_NEGATE (register, 0x12c8, 8)
draw_frame_of_graph, (register, 0x12c8, 8) INT_AND (unique, 0x69880, 8) , (register, 0x1348, 8)
draw_frame_of_graph, (register, 0x1300, 16) INT_OR (register, 0x1300, 16) , (register, 0x12c0, 16)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (ram, 0x411730, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) INT_AND (register, 0x12c0, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x12c8, 8) INT_AND (register, 0x12c8, 8) , (register, 0x12a8, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x1308, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (ram, 0x4116f8, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_DIV (register, 0x12c0, 8) , (ram, 0x411660, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_ADD (register, 0x12a0, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_ADD (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ba90, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_MULT (register, 0x12e0, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a511, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xd0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x10, 8) COPY (const, 0x74, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x63, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a52a, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a50, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x409f89, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x140, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a54f, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a20, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1220, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a570, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x148, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a57d, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017c0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x168, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x28, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x16c, 8)
draw_frame_of_graph, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (unique, 0x5200, 4)
draw_frame_of_graph, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (unique, 0x5200, 4)
draw_frame_of_graph, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x28b00, 4) INT_SUB (register, 0x28, 4) , (unique, 0x5200, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28b00, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28b00, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28b00, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
draw_frame_of_graph, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d4ea, 8) , (unique, 0xd080, 1)
draw_frame_of_graph, (register, 0x1280, 8) COPY (ram, 0x411698, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_MULT (register, 0x12e0, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
draw_frame_of_graph, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
draw_frame_of_graph, (register, 0x1240, 16) INT_XOR (register, 0x1240, 16) , (register, 0x1240, 16)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) INT2FLOAT (register, 0x28, 4)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1208, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x160, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ae40, 8) , (unique, 0xc900, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ae40, 8) , (unique, 0xc900, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x128, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ab00, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40bb76, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (ram, 0x411730, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ce66, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1328, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (ram, 0x4116c0, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x12e0, 16) INT_XOR (register, 0x12e0, 16) , (register, 0x12e0, 16)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (register, 0x1320, 8) COPY (ram, 0x4116c8, 8)
draw_frame_of_graph, (register, 0x1328, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1260, 8) , (register, 0x12c0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a6d9, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1400, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1410, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x70b00, 1) FLOAT_LESSEQUAL (register, 0x1400, 8) , (register, 0x1410, 8)
draw_frame_of_graph, (unique, 0x70b80, 8) INT_ZEXT (unique, 0x70b00, 1)
draw_frame_of_graph, (register, 0x1400, 8) INT_MULT (unique, 0x70b80, 8) , (const, 0xffffffffffffffff, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (register, 0x1400, 8)
draw_frame_of_graph, (register, 0x1280, 8) INT_AND (register, 0x1280, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1288, 8) INT_AND (register, 0x1288, 8) , (register, 0x1268, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1300, 8) INT_AND (register, 0x1300, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1308, 8) INT_AND (register, 0x1308, 8) , (register, 0x12e8, 8)
draw_frame_of_graph, (unique, 0x69780, 8) INT_NEGATE (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x12e0, 8) INT_AND (unique, 0x69780, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (unique, 0x69880, 8) INT_NEGATE (register, 0x12e8, 8)
draw_frame_of_graph, (register, 0x12e8, 8) INT_AND (unique, 0x69880, 8) , (register, 0x1328, 8)
draw_frame_of_graph, (register, 0x12e0, 16) INT_OR (register, 0x12e0, 16) , (register, 0x1300, 16)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a71a, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x158, 8)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d4f5, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)
draw_frame_of_graph, (register, 0x10, 8) COPY (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x140, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a751, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x407180, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a75e, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4016f0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x8, 8) COPY (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x10, 8) COPY (const, 0x63, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x6c, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40ac70, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xc0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a79f, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a20, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1220, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a7c0, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xc8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a7cd, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017c0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xe8, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x28, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xec, 8)
draw_frame_of_graph, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (unique, 0x5200, 4)
draw_frame_of_graph, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (unique, 0x5200, 4)
draw_frame_of_graph, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x28b00, 4) INT_SUB (register, 0x28, 4) , (unique, 0x5200, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28b00, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28b00, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28b00, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
draw_frame_of_graph, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d511, 8) , (unique, 0xd080, 1)
draw_frame_of_graph, (register, 0x1280, 8) COPY (ram, 0x411698, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_MULT (register, 0x12e0, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
draw_frame_of_graph, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
draw_frame_of_graph, (register, 0x1240, 16) INT_XOR (register, 0x1240, 16) , (register, 0x1240, 16)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) INT2FLOAT (register, 0x28, 4)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xe0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b4b8, 8) , (unique, 0xc900, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b4b8, 8) , (unique, 0xc900, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a8, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b198, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40bb37, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (ram, 0x411730, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1360, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1368, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1328, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1308, 8)
draw_frame_of_graph, (register, 0x1280, 16) INT_XOR (register, 0x1280, 16) , (register, 0x1280, 16)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1360, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (register, 0x1320, 8) FLOAT_MULT (register, 0x1320, 8) , (register, 0x1360, 8)
draw_frame_of_graph, (register, 0x1360, 8) COPY (ram, 0x4116c8, 8)
draw_frame_of_graph, (register, 0x1368, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1220, 8) , (register, 0x1320, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a8e3, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1320, 8)
draw_frame_of_graph, (register, 0x1320, 8) COPY (ram, 0x4116c0, 8)
draw_frame_of_graph, (register, 0x1328, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1340, 8) COPY (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x1348, 8) COPY (register, 0x1228, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1400, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1410, 8) COPY (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x70b00, 1) FLOAT_LESSEQUAL (register, 0x1400, 8) , (register, 0x1410, 8)
draw_frame_of_graph, (unique, 0x70b80, 8) INT_ZEXT (unique, 0x70b00, 1)
draw_frame_of_graph, (register, 0x1400, 8) INT_MULT (unique, 0x70b80, 8) , (const, 0xffffffffffffffff, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (register, 0x1400, 8)
draw_frame_of_graph, (register, 0x12c0, 8) INT_AND (register, 0x12c0, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x12c8, 8) INT_AND (register, 0x12c8, 8) , (register, 0x1228, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1340, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1348, 8)
draw_frame_of_graph, (register, 0x1320, 8) INT_AND (register, 0x1320, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1328, 8) INT_AND (register, 0x1328, 8) , (register, 0x1288, 8)
draw_frame_of_graph, (unique, 0x69780, 8) INT_NEGATE (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1280, 8) INT_AND (unique, 0x69780, 8) , (register, 0x1360, 8)
draw_frame_of_graph, (unique, 0x69880, 8) INT_NEGATE (register, 0x1288, 8)
draw_frame_of_graph, (register, 0x1288, 8) INT_AND (unique, 0x69880, 8) , (register, 0x1368, 8)
draw_frame_of_graph, (register, 0x1280, 16) INT_OR (register, 0x1280, 16) , (register, 0x1320, 16)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ce4a, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1288, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_ADD (register, 0x12c0, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x12c8, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a979, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xd8, 8)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d51c, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
draw_frame_of_graph, (register, 0x10, 8) COPY (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xc0, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a9b0, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x407180, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x8, 8) COPY (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x10, 8) COPY (const, 0x62, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b2f8, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x411638, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40a32a, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x208, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40a9df, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a20, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1220, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40aa00, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x210, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40aa0d, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017c0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1208, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40bb0e, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4116a8, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (ram, 0x411730, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a0, 8) INT_AND (register, 0x12a0, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x12a8, 8) INT_AND (register, 0x12a8, 8) , (register, 0x12e8, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (ram, 0x4116f0, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (register, 0x1208, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40aab3, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x200, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x10, 8) COPY (const, 0x62, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x63, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40aacc, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a50, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x3, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x3, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x3, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40bafa, 8) , (unique, 0xc900, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x2, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409b28, 8) , (unique, 0xc580, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409bc2, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a8, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x4097dd, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cdff, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (ram, 0x411730, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1328, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40baaf, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_SUB (register, 0x12e0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1340, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1348, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1340, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (ram, 0x4116c8, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1320, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1328, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1280, 8) INT_AND (register, 0x1280, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1288, 8) INT_AND (register, 0x1288, 8) , (register, 0x1268, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x12e0, 16) INT_XOR (register, 0x12e0, 16) , (register, 0x12e0, 16)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x1320, 8) FLOAT_MULT (register, 0x1320, 8) , (register, 0x1340, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1320, 8) , (register, 0x12c0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40abdb, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1320, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (ram, 0x4116c0, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1400, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1410, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x70b00, 1) FLOAT_LESSEQUAL (register, 0x1400, 8) , (register, 0x1410, 8)
draw_frame_of_graph, (unique, 0x70b80, 8) INT_ZEXT (unique, 0x70b00, 1)
draw_frame_of_graph, (register, 0x1400, 8) INT_MULT (unique, 0x70b80, 8) , (const, 0xffffffffffffffff, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1400, 8)
draw_frame_of_graph, (register, 0x12e0, 8) INT_AND (register, 0x12e0, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12e8, 8) INT_AND (register, 0x12e8, 8) , (register, 0x12c8, 8)
draw_frame_of_graph, (unique, 0x69780, 8) INT_NEGATE (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) INT_AND (unique, 0x69780, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (unique, 0x69880, 8) INT_NEGATE (register, 0x12c8, 8)
draw_frame_of_graph, (register, 0x12c8, 8) INT_AND (unique, 0x69880, 8) , (register, 0x1308, 8)
draw_frame_of_graph, (register, 0x12c0, 16) INT_OR (register, 0x12c0, 16) , (register, 0x12e0, 16)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x12c8, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ac17, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x158, 8)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d3a5, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)
draw_frame_of_graph, (register, 0x10, 8) COPY (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x140, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ac4e, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x407180, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ac5b, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4016f0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x8, 8) COPY (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x10, 8) COPY (const, 0x63, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x72, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ac78, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a50, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1b0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1b8, 8)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_CARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SCARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd00, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x78c00, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1220, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ac9d, 8) , (unique, 0x78c00, 1)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x2, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1b0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40bcd3, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c6de, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x3, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x3, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x3, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40bbb1, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ae40, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x128, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c140, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c776, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x12a8, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ad6f, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c78b, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ae0a, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cf73, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ae3a, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018f0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) INT_CARRY (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x16c, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (unique, 0xbc80, 4) , (register, 0x28, 4)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (unique, 0xbc80, 4) , (register, 0x28, 4)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x28600, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xcd00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a5b8, 8) , (unique, 0xcd00, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x170, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b08f, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x158, 8)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1220, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ae82, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1220, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d3c1, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1e0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x180, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x28, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x184, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (unique, 0xbc80, 4) , (register, 0x28, 4)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (unique, 0xbc80, 4) , (register, 0x28, 4)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x28600, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xcc00, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b08f, 8) , (unique, 0xcc00, 1)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (ram, 0x411698, 8)
draw_frame_of_graph, (register, 0x1240, 16) INT_XOR (register, 0x1240, 16) , (register, 0x1240, 16)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) INT2FLOAT (register, 0x28, 4)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1208, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x178, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b080, 8) , (unique, 0xc900, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b080, 8) , (unique, 0xc900, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x3, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x3, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x3, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c803, 8) , (unique, 0xc900, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x2, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c957, 8) , (unique, 0xc580, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b080, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (register, 0x12c0, 16) INT_XOR (register, 0x12c0, 16) , (register, 0x12c0, 16)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x128, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0xa8, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0xa8, 4) , (register, 0xa8, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c811, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0xa0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cf9a, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40afb5, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x98, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40affe, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12e0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12e0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12e0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d3fa, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40b06c, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018f0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
draw_frame_of_graph, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_CARRY (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x184, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (unique, 0xbc80, 4) , (register, 0x28, 4)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (unique, 0xbc80, 4) , (register, 0x28, 4)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x28600, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xcd00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40aeb8, 8) , (unique, 0xcd00, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409bfa, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x158, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b187, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1300, 16) INT_XOR (register, 0x1300, 16) , (register, 0x1300, 16)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1300, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1300, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1300, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b187, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x41124a, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1300, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40b0d5, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a10, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d585, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1280, 8) COPY (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (register, 0x1308, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (register, 0x1208, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (register, 0x12a8, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1228, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40b174, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4019f0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x411244, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40b181, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a10, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409bfa, 8) , (unique, 0xc680, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x409aa0, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cdb8, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (ram, 0x411730, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1340, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1348, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x1340, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x1348, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1380, 16) INT_XOR (register, 0x1380, 16) , (register, 0x1380, 16)
draw_frame_of_graph, (register, 0x1320, 8) COPY (ram, 0x4116c0, 8)
draw_frame_of_graph, (register, 0x1328, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1360, 8) COPY (ram, 0x4116c8, 8)
draw_frame_of_graph, (register, 0x1368, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1380, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (register, 0x1380, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (register, 0x1388, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x12a0, 8) , (register, 0x1200, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b236, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x12a8, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1400, 8) COPY (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1410, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x70b00, 1) FLOAT_LESSEQUAL (register, 0x1400, 8) , (register, 0x1410, 8)
draw_frame_of_graph, (unique, 0x70b80, 8) INT_ZEXT (unique, 0x70b00, 1)
draw_frame_of_graph, (register, 0x1400, 8) INT_MULT (unique, 0x70b80, 8) , (const, 0xffffffffffffffff, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (register, 0x1400, 8)
draw_frame_of_graph, (register, 0x12c0, 8) INT_AND (register, 0x12c0, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x12c8, 8) INT_AND (register, 0x12c8, 8) , (register, 0x12a8, 8)
draw_frame_of_graph, (register, 0x1320, 8) INT_AND (register, 0x1320, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1328, 8) INT_AND (register, 0x1328, 8) , (register, 0x1308, 8)
draw_frame_of_graph, (unique, 0x69780, 8) INT_NEGATE (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1300, 8) INT_AND (unique, 0x69780, 8) , (register, 0x1360, 8)
draw_frame_of_graph, (unique, 0x69880, 8) INT_NEGATE (register, 0x1308, 8)
draw_frame_of_graph, (register, 0x1308, 8) INT_AND (unique, 0x69880, 8) , (register, 0x1368, 8)
draw_frame_of_graph, (register, 0x1300, 16) INT_OR (register, 0x1300, 16) , (register, 0x1320, 16)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x1308, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_ADD (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ba9a, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x12c8, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1340, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1348, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40b2b7, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xd8, 8)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d389, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
draw_frame_of_graph, (register, 0x10, 8) COPY (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xc0, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40b2ee, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x407180, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x8, 8) COPY (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x10, 8) COPY (const, 0x74, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x63, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40b305, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a50, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x138, 8)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_CARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SCARRY (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd00, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x2, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40bf7d, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c6d0, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x3, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x3, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x3, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40be67, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b4b8, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a8, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c2d0, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1208, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c794, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40b3dd, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x12c8, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1220, 8) , (register, 0x12a0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b440, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cf66, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c76c, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40b4ad, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018f0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
draw_frame_of_graph, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_CARRY (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xec, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (unique, 0xbc80, 4) , (register, 0x28, 4)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (unique, 0xbc80, 4) , (register, 0x28, 4)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x28600, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xcd00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a808, 8) , (unique, 0xcd00, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xf0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b6ff, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xd8, 8)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1220, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b4fa, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1220, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d3e8, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1e0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x100, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x28, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x104, 8)
draw_frame_of_graph, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (unique, 0x5200, 4)
draw_frame_of_graph, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (unique, 0x5200, 4)
draw_frame_of_graph, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x28b00, 4) INT_SUB (register, 0x28, 4) , (unique, 0x5200, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28b00, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28b00, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28b00, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
draw_frame_of_graph, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b6ff, 8) , (unique, 0xd080, 1)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (ram, 0x411698, 8)
draw_frame_of_graph, (register, 0x1240, 16) INT_XOR (register, 0x1240, 16) , (register, 0x1240, 16)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) INT2FLOAT (register, 0x28, 4)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xf8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b6f0, 8) , (unique, 0xc900, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b6f0, 8) , (unique, 0xc900, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x3, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x3, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x3, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cd8b, 8) , (unique, 0xc900, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x2, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cc1e, 8) , (unique, 0xc580, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b6f0, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (register, 0x1280, 16) INT_XOR (register, 0x1280, 16) , (register, 0x1280, 16)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a8, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cace, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0xa8, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0xa8, 4) , (register, 0xa8, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cfd6, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_DIV (register, 0x12c0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40b628, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12e0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12e0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12e0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d421, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0xa0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d2be, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40b6dc, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018f0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
draw_frame_of_graph, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_CARRY (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x104, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (unique, 0xbc80, 4) , (register, 0x28, 4)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (unique, 0xbc80, 4) , (register, 0x28, 4)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (unique, 0x28600, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x28, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xcd00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b530, 8) , (unique, 0xcd00, 1)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409be2, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xd8, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b7f6, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12e0, 16) INT_XOR (register, 0x12e0, 16) , (register, 0x12e0, 16)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12e0, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12e0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12e0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b7f6, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x41124a, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40b742, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a10, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1308, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1340, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1348, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1220, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d5b4, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1320, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1328, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x1340, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x1348, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1320, 8) FLOAT_SUB (register, 0x1320, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1320, 8) FLOAT_DIV (register, 0x1320, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_ADD (register, 0x12a0, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (register, 0x1208, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40b7e3, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4019f0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x411244, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40b7f0, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a10, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409be2, 8) , (unique, 0xc680, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x409cc3, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409bca, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x128, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b9f0, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b9e0, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1300, 16) INT_XOR (register, 0x1300, 16) , (register, 0x1300, 16)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x12a8, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1300, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_DIV (register, 0x12c0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_ADD (register, 0x12c0, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_ADD (register, 0x12c0, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (register, 0x1208, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40b8e2, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4019f0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (register, 0x12a8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x12c8, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x12c8, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40b943, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4019f0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x409bc2, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x13c0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (register, 0x13a0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1380, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1360, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x409909, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x13e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x13e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x4098a9, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40987c, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1340, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (register, 0x1320, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40983b, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b877, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b829, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ba15, 8) , (register, 0x202, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ba60, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ba1e, 8) , (register, 0x202, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ba60, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x1228, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12c0, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12c0, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d3d3, 8) , (register, 0x200, 1)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (ram, 0x4116a8, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1220, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x409e49, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (ram, 0x4116a8, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x409e49, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x409f54, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40a4f5, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_DIV (register, 0x12c0, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x12c0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b294, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1208, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40ab56, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40997c, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40a056, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x409bc2, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a8, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b811, 8)
draw_frame_of_graph, (register, 0x1300, 16) INT_XOR (register, 0x1300, 16) , (register, 0x1300, 16)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1300, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1300, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1300, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40aa3b, 8) , (register, 0x200, 1)
draw_frame_of_graph, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4116a8, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40aa4f, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (ram, 0x411730, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) INT_AND (register, 0x1220, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1228, 8) INT_AND (register, 0x1228, 8) , (register, 0x12c8, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) INT_AND (register, 0x1200, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1208, 8) INT_AND (register, 0x1208, 8) , (register, 0x12c8, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c298, 8) , (unique, 0xc900, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40a86d, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (ram, 0x411730, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x12c8, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) INT_AND (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1268, 8) INT_AND (register, 0x1268, 8) , (register, 0x1288, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) INT_AND (register, 0x1220, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1228, 8) INT_AND (register, 0x1228, 8) , (register, 0x1288, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1260, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1260, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c10b, 8) , (unique, 0xc900, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40a621, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x41124a, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40bbc4, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a10, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cee7, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40bc45, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ced1, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40bcc0, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018f0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x411244, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40bccd, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a10, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x128, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0xa8, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0xa8, 4) , (register, 0xa8, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c428, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0xa0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ce7b, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40bd6c, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x98, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ceb7, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40be0d, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d349, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40be43, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018f0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x128, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40acdf, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x41124a, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40be7a, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a10, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cf10, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40bef5, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cefd, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40bf6a, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018f0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x411244, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40bf77, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a10, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a8, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0xa8, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0xa8, 4) , (register, 0xa8, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c575, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0xa0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cf23, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40c013, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x12c8, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1260, 8) , (register, 0x12a0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c076, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d363, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x98, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1260, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ce53, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_SUB (register, 0x12e0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_DIV (register, 0x12e0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x12c8, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40c0eb, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018f0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a8, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b34e, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c126, 8) , (register, 0x202, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a621, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c133, 8) , (register, 0x202, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a621, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1280, 16) INT_XOR (register, 0x1280, 16) , (register, 0x1280, 16)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c7b2, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40c1c2, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c7a9, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1260, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c25d, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1240, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cf80, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40c28d, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018f0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40ae40, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c2b1, 8) , (register, 0x202, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a86d, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c2be, 8) , (register, 0x202, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40a86d, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12c0, 16) INT_XOR (register, 0x12c0, 16) , (register, 0x12c0, 16)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
draw_frame_of_graph, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c757, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40c351, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x12c8, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1260, 8) , (register, 0x12a0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c3b4, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cf8d, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c401, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_ADD (register, 0x12a0, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (register, 0x12a8, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40c41d, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018f0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b4b8, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x90, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cf50, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40c4a1, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cf36, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c542, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d356, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40be3b, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x90, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cea4, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40c5fb, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1220, 8) , (register, 0x1280, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c65e, 8) , (unique, 0x79100, 1)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (register, 0x1228, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d370, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ce91, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_DIV (register, 0x12c0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40c0e3, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b4b8, 8) , (unique, 0xc680, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b339, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ae40, 8) , (unique, 0xc680, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40acc6, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c705, 8) , (register, 0x202, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cd99, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c712, 8) , (register, 0x202, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cd99, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1228, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12c0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12c0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d545, 8) , (register, 0x200, 1)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4116a8, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (register, 0x1228, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1260, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40a019, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x12c8, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (register, 0x12e0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40c331, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b491, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_SUB (register, 0x12e0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (register, 0x12c0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40ad27, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40adb0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x12c8, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (register, 0x12e0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b3bd, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40c203, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_SUB (register, 0x12e0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (register, 0x12c0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40c176, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x150, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x10, 8) COPY (const, 0x63, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x72, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40c7e0, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a50, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x409aa0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x150, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (register, 0x10, 8) COPY (const, 0x63, 8)
draw_frame_of_graph, (register, 0x30, 8) COPY (const, 0x6c, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40c7fe, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401a50, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x409aa0, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b080, 8) , (unique, 0xc680, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40af0d, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x90, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cfbd, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40c88f, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40c8d8, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12e0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12e0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12e0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d407, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40c946, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018f0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b080, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x128, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d165, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d47b, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40c9f1, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d42e, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e0, 16) INT_XOR (register, 0x12e0, 16) , (register, 0x12e0, 16)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12c0, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12c0, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x120, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d578, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40cab8, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018f0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40af17, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x98, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cfec, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_DIV (register, 0x12c0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40cb59, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12e0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12e0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12e0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d414, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x90, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40cfb3, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40cc0d, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018f0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b6f0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a8, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d002, 8) , (unique, 0xc680, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d4c1, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_DIV (register, 0x12c0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ccb5, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12e0, 16) INT_XOR (register, 0x12e0, 16) , (register, 0x12e0, 16)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1280, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1280, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1280, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d55e, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d4d7, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_DIV (register, 0x12c0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40cd75, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018f0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b58f, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x4, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b6f0, 8) , (unique, 0xc680, 1)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b585, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4116a8, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1260, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40a019, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (ram, 0x411730, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) INT_AND (register, 0x1220, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1228, 8) INT_AND (register, 0x1228, 8) , (register, 0x12c8, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) INT_AND (register, 0x1200, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1208, 8) INT_AND (register, 0x1208, 8) , (register, 0x12c8, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d2d5, 8) , (unique, 0xc900, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b1bb, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (ram, 0x411730, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x12c8, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) INT_AND (register, 0x1260, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1268, 8) INT_AND (register, 0x1268, 8) , (register, 0x1288, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) INT_AND (register, 0x1220, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1228, 8) INT_AND (register, 0x1228, 8) , (register, 0x1288, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1260, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1260, 8) , (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d30e, 8) , (unique, 0xc900, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40ab27, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (register, 0x12e0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40a956, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40c0c9, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_SUB (register, 0x12e0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (register, 0x12c0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40a657, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40bd20, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40c6b5, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40c5db, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40bdb3, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40bc86, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40bc05, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40bf4a, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40bed5, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40bff3, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40c4e8, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40c455, 8)
draw_frame_of_graph, (unique, 0xacc80, 16) COPY (ram, 0x411720, 16)
draw_frame_of_graph, (unique, 0xacd00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x12a0, 8) INT_XOR (register, 0x12a0, 8) , (unique, 0xacd00, 8)
draw_frame_of_graph, (unique, 0xace00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x12a8, 8) INT_XOR (register, 0x12a8, 8) , (unique, 0xace00, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b45a, 8)
draw_frame_of_graph, (unique, 0xacc80, 16) COPY (ram, 0x411720, 16)
draw_frame_of_graph, (unique, 0xacd00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x1260, 8) INT_XOR (register, 0x1260, 8) , (unique, 0xacd00, 8)
draw_frame_of_graph, (unique, 0xace00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x1268, 8) INT_XOR (register, 0x1268, 8) , (unique, 0xace00, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40ae2a, 8)
draw_frame_of_graph, (unique, 0xacc80, 16) COPY (ram, 0x411720, 16)
draw_frame_of_graph, (unique, 0xacd00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x1260, 8) INT_XOR (register, 0x1260, 8) , (unique, 0xacd00, 8)
draw_frame_of_graph, (unique, 0xace00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x1268, 8) INT_XOR (register, 0x1268, 8) , (unique, 0xace00, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40c27d, 8)
draw_frame_of_graph, (unique, 0xacc80, 16) COPY (ram, 0x411720, 16)
draw_frame_of_graph, (unique, 0xacd00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x1200, 8) INT_XOR (register, 0x1200, 8) , (unique, 0xacd00, 8)
draw_frame_of_graph, (unique, 0xace00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x1208, 8) INT_XOR (register, 0x1208, 8) , (unique, 0xace00, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40c3ce, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_SUB (register, 0x12e0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40af63, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40cbed, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_SUB (register, 0x12e0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40c83d, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_SUB (register, 0x12e0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b602, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_SUB (register, 0x12e0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40cb33, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d4ab, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12c0, 8) FLOAT_DIV (register, 0x12c0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40d08b, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1280, 16) INT_XOR (register, 0x1280, 16) , (register, 0x1280, 16)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12e0, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12e0, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12e0, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d538, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d494, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1288, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40d14f, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018f0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b58f, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d462, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40d1e1, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4017d0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x200, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
draw_frame_of_graph, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
draw_frame_of_graph, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
draw_frame_of_graph, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
draw_frame_of_graph, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
draw_frame_of_graph, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d448, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12e0, 16) INT_XOR (register, 0x12e0, 16) , (register, 0x12e0, 16)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12c8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12c0, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12c0, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12c0, 8) , (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d56b, 8) , (unique, 0xc780, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
draw_frame_of_graph, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40d2a8, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x4018f0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40af17, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b6bc, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x198, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1208, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d2f2, 8) , (register, 0x202, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b1bb, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d2ff, 8) , (register, 0x202, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40b1bb, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x12c0, 16) INT_XOR (register, 0x12c0, 16) , (register, 0x12c0, 16)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b35e, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x118, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1308, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12a0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x12a8, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12a0, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12a0, 8) , (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d32d, 8) , (register, 0x202, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ab27, 8) , (register, 0x206, 1)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)
draw_frame_of_graph, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12a0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x18300, 1) FLOAT_NAN (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
draw_frame_of_graph, (register, 0x20b, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x204, 1) COPY (const, 0x0, 1)
draw_frame_of_graph, (register, 0x207, 1) COPY (const, 0x0, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40d33a, 8) , (register, 0x202, 1)
draw_frame_of_graph,  ---  CBRANCH (ram, 0x40ab27, 8) , (register, 0x206, 1)
draw_frame_of_graph, (register, 0x1280, 16) INT_XOR (register, 0x1280, 16) , (register, 0x1280, 16)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40acef, 8)
draw_frame_of_graph, (unique, 0xacc80, 16) COPY (ram, 0x411720, 16)
draw_frame_of_graph, (unique, 0xacd00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x1280, 8) INT_XOR (register, 0x1280, 8) , (unique, 0xacd00, 8)
draw_frame_of_graph, (unique, 0xace00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x1288, 8) INT_XOR (register, 0x1288, 8) , (unique, 0xace00, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40be2d, 8)
draw_frame_of_graph, (unique, 0xacc80, 16) COPY (ram, 0x411720, 16)
draw_frame_of_graph, (unique, 0xacd00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x1280, 8) INT_XOR (register, 0x1280, 8) , (unique, 0xacd00, 8)
draw_frame_of_graph, (unique, 0xace00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x1288, 8) INT_XOR (register, 0x1288, 8) , (unique, 0xace00, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40c562, 8)
draw_frame_of_graph, (unique, 0xacc80, 16) COPY (ram, 0x411720, 16)
draw_frame_of_graph, (unique, 0xacd00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x12a0, 8) INT_XOR (register, 0x12a0, 8) , (unique, 0xacd00, 8)
draw_frame_of_graph, (unique, 0xace00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x12a8, 8) INT_XOR (register, 0x12a8, 8) , (unique, 0xace00, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40c090, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1f0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (unique, 0xacc80, 16) COPY (ram, 0x411720, 16)
draw_frame_of_graph, (unique, 0xacd00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x1280, 8) INT_XOR (register, 0x1280, 8) , (unique, 0xacd00, 8)
draw_frame_of_graph, (unique, 0xace00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x1288, 8) INT_XOR (register, 0x1288, 8) , (unique, 0xace00, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1288, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40c67c, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x411670, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40d396, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401950, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1208, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b2ce, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x411670, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40d3b2, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401950, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1208, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40ac2e, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40ae95, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (ram, 0x4116a8, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1220, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x409e49, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1d8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x5280, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b50d, 8)
draw_frame_of_graph, (unique, 0xacc80, 16) COPY (ram, 0x411720, 16)
draw_frame_of_graph, (unique, 0xacd00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x1240, 8) INT_XOR (register, 0x1240, 8) , (unique, 0xacd00, 8)
draw_frame_of_graph, (unique, 0xace00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x1248, 8) INT_XOR (register, 0x1248, 8) , (unique, 0xace00, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b055, 8)
draw_frame_of_graph, (unique, 0xacc80, 16) COPY (ram, 0x411720, 16)
draw_frame_of_graph, (unique, 0xacd00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x1240, 8) INT_XOR (register, 0x1240, 8) , (unique, 0xacd00, 8)
draw_frame_of_graph, (unique, 0xace00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x1248, 8) INT_XOR (register, 0x1248, 8) , (unique, 0xace00, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40c92f, 8)
draw_frame_of_graph, (unique, 0xacc80, 16) COPY (ram, 0x411720, 16)
draw_frame_of_graph, (unique, 0xacd00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x1200, 8) INT_XOR (register, 0x1200, 8) , (unique, 0xacd00, 8)
draw_frame_of_graph, (unique, 0xace00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x1208, 8) INT_XOR (register, 0x1208, 8) , (unique, 0xace00, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40cbb3, 8)
draw_frame_of_graph, (unique, 0xacc80, 16) COPY (ram, 0x411720, 16)
draw_frame_of_graph, (unique, 0xacd00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x1220, 8) INT_XOR (register, 0x1220, 8) , (unique, 0xacd00, 8)
draw_frame_of_graph, (unique, 0xace00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x1228, 8) INT_XOR (register, 0x1228, 8) , (unique, 0xace00, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b682, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40ca3c, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x1268, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40d22c, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_SUB (register, 0x12e0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40d18f, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_SUB (register, 0x12e0, 8) , (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40c99f, 8)
draw_frame_of_graph, (register, 0x1280, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1288, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1288, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40d129, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_SUB (register, 0x12e0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40d065, 8)
draw_frame_of_graph, (register, 0x12e0, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x12e8, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (register, 0x12e0, 8) FLOAT_SUB (register, 0x12e0, 8) , (register, 0x1260, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40cc8f, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (register, 0x1240, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (register, 0x1248, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40cd4f, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40ae4f, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x411670, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40d502, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401950, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1208, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40a731, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c0, 8)
draw_frame_of_graph, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
draw_frame_of_graph, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b4c7, 8)
draw_frame_of_graph, (register, 0x1200, 8) COPY (ram, 0x411670, 8)
draw_frame_of_graph, (register, 0x1208, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
draw_frame_of_graph,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40d529, 8)
draw_frame_of_graph,  ---  CALL (ram, 0x401950, 8)
draw_frame_of_graph, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1220, 8) COPY (register, 0x1200, 8)
draw_frame_of_graph, (register, 0x1228, 8) COPY (register, 0x1208, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40a990, 8)
draw_frame_of_graph, (unique, 0xacc80, 16) COPY (ram, 0x411720, 16)
draw_frame_of_graph, (unique, 0xacd00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x1220, 8) INT_XOR (register, 0x1220, 8) , (unique, 0xacd00, 8)
draw_frame_of_graph, (unique, 0xace00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x1228, 8) INT_XOR (register, 0x1228, 8) , (unique, 0xace00, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40d0ed, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1280, 8)
draw_frame_of_graph, (register, 0x1260, 8) COPY (ram, 0x4116a8, 8)
draw_frame_of_graph, (register, 0x1268, 8) COPY (const, 0x0, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (register, 0x1220, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (register, 0x1228, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1260, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40a019, 8)
draw_frame_of_graph, (unique, 0xacc80, 16) COPY (ram, 0x411720, 16)
draw_frame_of_graph, (unique, 0xacd00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x1200, 8) INT_XOR (register, 0x1200, 8) , (unique, 0xacd00, 8)
draw_frame_of_graph, (unique, 0xace00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x1208, 8) INT_XOR (register, 0x1208, 8) , (unique, 0xace00, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40cd17, 8)
draw_frame_of_graph, (unique, 0xacc80, 16) COPY (ram, 0x411720, 16)
draw_frame_of_graph, (unique, 0xacd00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x1260, 8) INT_XOR (register, 0x1260, 8) , (unique, 0xacd00, 8)
draw_frame_of_graph, (unique, 0xace00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x1268, 8) INT_XOR (register, 0x1268, 8) , (unique, 0xace00, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40d28b, 8)
draw_frame_of_graph, (unique, 0xacc80, 16) COPY (ram, 0x411720, 16)
draw_frame_of_graph, (unique, 0xacd00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x0, 4)
draw_frame_of_graph, (register, 0x1260, 8) INT_XOR (register, 0x1260, 8) , (unique, 0xacd00, 8)
draw_frame_of_graph, (unique, 0xace00, 8) SUBPIECE (unique, 0xacc80, 16) , (const, 0x8, 4)
draw_frame_of_graph, (register, 0x1268, 8) INT_XOR (register, 0x1268, 8) , (unique, 0xace00, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40ca9b, 8)
draw_frame_of_graph, (register, 0x1240, 8) COPY (register, 0x1300, 8)
draw_frame_of_graph, (register, 0x1248, 8) COPY (register, 0x1308, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
draw_frame_of_graph, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb8, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
draw_frame_of_graph, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b133, 8)
draw_frame_of_graph, (register, 0x12a0, 8) COPY (register, 0x12e0, 8)
draw_frame_of_graph, (register, 0x12a8, 8) COPY (register, 0x12e8, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)
draw_frame_of_graph, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_MULT (register, 0x12a0, 8) , (unique, 0x5280, 8)
draw_frame_of_graph, (register, 0x12a0, 8) FLOAT_ADD (register, 0x12a0, 8) , (register, 0x1340, 8)
draw_frame_of_graph,  ---  BRANCH (ram, 0x40b7bd, 8)
plot_point, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
plot_point, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
plot_point, (register, 0xa8, 8) COPY (register, 0x30, 8)
plot_point, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
plot_point, (unique, 0xe780, 8) COPY (register, 0x28, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
plot_point, (register, 0x28, 8) COPY (register, 0x38, 8)
plot_point, (unique, 0xe780, 8) COPY (register, 0x18, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
plot_point, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x50, 8)
plot_point, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x50, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x50, 8)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
plot_point, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x38, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40d978, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x38, 8) , (const, 0x21c, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40d978, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x220, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0xb0, 4) INT_XOR (register, 0xb0, 4) , (register, 0xb0, 4)
plot_point, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0xb0, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (register, 0xb0, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x228, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
plot_point, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x38, 8) COPY (register, 0x28, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x220, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x228, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40d674, 8)
plot_point,  ---  CALL (ram, 0x408c00, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x38, 8) COPY (register, 0x28, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x18, 4) COPY (register, 0x0, 4)
plot_point, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40d68a, 8)
plot_point,  ---  CALL (ram, 0x408c00, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (register, 0xa0, 4) COPY (register, 0x0, 4)
plot_point, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x70, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x1220, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x0, 4) COPY (register, 0xa0, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x18, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40d764, 8) , (register, 0x206, 1)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0x18, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40db40, 8) , (unique, 0xc680, 1)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x0, 4) COPY (register, 0xa0, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
plot_point,  ---  CBRANCH (ram, 0x40d6d7, 8) , (unique, 0x27780, 1)
plot_point, (register, 0x0, 4) COPY (register, 0x18, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x58800, 1) INT_AND (register, 0x0, 1) , (const, 0x4, 1)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x58800, 1) , (const, 0x0, 1)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x58800, 1) , (const, 0x0, 1)
plot_point, (unique, 0x12c00, 1) INT_AND (unique, 0x58800, 1) , (const, 0xff, 1)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40da78, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x28, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) COPY (register, 0x12e0, 8)
plot_point, (register, 0x1248, 8) COPY (register, 0x12e8, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x12c0, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x12c8, 8)
plot_point, (register, 0x1220, 8) COPY (register, 0x1260, 8)
plot_point, (register, 0x1228, 8) COPY (register, 0x1268, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x12a0, 8)
plot_point, (register, 0x1220, 8) FLOAT_SUB (register, 0x1220, 8) , (register, 0x1280, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1280, 8)
plot_point, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1220, 8)
plot_point, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (register, 0x1200, 8)
plot_point, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x12a0, 8)
plot_point, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (register, 0x0, 4)
plot_point, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (register, 0x0, 4)
plot_point, (unique, 0x28600, 4) INT_SUB (register, 0x18, 4) , (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40dab2, 8) , (register, 0x206, 1)
plot_point, (register, 0x1220, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1228, 8) COPY (register, 0x1248, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1260, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1268, 8)
plot_point, (register, 0x38, 8) COPY (register, 0x28, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x12a0, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x1280, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40d737, 8)
plot_point,  ---  CALL (ram, 0x408c00, 8)
plot_point, (register, 0xa0, 4) COPY (register, 0x0, 4)
plot_point, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x0, 4) COPY (register, 0xa0, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x18, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x12e0, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x12e8, 8) COPY (register, 0x1248, 8)
plot_point, (register, 0x12c0, 8) COPY (register, 0x1260, 8)
plot_point, (register, 0x12c8, 8) COPY (register, 0x1268, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40d6c6, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x10, 8) COPY (const, 0x1, 8)
plot_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
plot_point, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1280, 8)
plot_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (register, 0x1280, 8)
plot_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (register, 0x1280, 8)
plot_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x0, 1) COPY (register, 0x202, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
plot_point,  ---  CBRANCH (ram, 0x40d779, 8) , (unique, 0x27780, 1)
plot_point, (register, 0x0, 4) COPY (register, 0x10, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59000, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
plot_point, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40dc88, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x18, 8) COPY (const, 0x1, 8)
plot_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
plot_point, (unique, 0x18300, 1) FLOAT_NAN (register, 0x12a0, 8)
plot_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (register, 0x12a0, 8)
plot_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (register, 0x12a0, 8)
plot_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x0, 1) COPY (register, 0x202, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
plot_point,  ---  CBRANCH (ram, 0x40d796, 8) , (unique, 0x27780, 1)
plot_point, (register, 0x0, 4) COPY (register, 0x10, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59000, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
plot_point, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40dc88, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x10, 8) COPY (const, 0x1, 8)
plot_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12c0, 8)
plot_point, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1220, 8)
plot_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12c0, 8) , (register, 0x1220, 8)
plot_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12c0, 8) , (register, 0x1220, 8)
plot_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x0, 1) COPY (register, 0x202, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
plot_point,  ---  CBRANCH (ram, 0x40d7b3, 8) , (unique, 0x27780, 1)
plot_point, (register, 0x0, 4) COPY (register, 0x10, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59000, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
plot_point, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40de50, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x12e0, 8)
plot_point, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1220, 8)
plot_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x12e0, 8) , (register, 0x1220, 8)
plot_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x12e0, 8) , (register, 0x1220, 8)
plot_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x0, 1) COPY (register, 0x202, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x27780, 1) BOOL_NEGATE (unique, 0xc680, 1)
plot_point,  ---  CBRANCH (ram, 0x40d7cb, 8) , (unique, 0x27780, 1)
plot_point, (register, 0x0, 4) COPY (register, 0x10, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59000, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
plot_point, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40de50, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x38, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40dc98, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x50, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
plot_point, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
plot_point,  ---  CBRANCH (ram, 0x40dc98, 8) , (unique, 0xce80, 1)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x218, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40e26e, 8) , (register, 0x206, 1)
plot_point, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)
plot_point, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x2, 4)
plot_point, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40e0f1, 8) , (unique, 0xc680, 1)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x58c00, 1) INT_AND (register, 0x18, 1) , (const, 0x2, 1)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x58c00, 1) , (const, 0x0, 1)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1)
plot_point, (unique, 0x12c00, 1) INT_AND (unique, 0x58c00, 1) , (const, 0xff, 1)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40e5e4, 8) , (unique, 0xc680, 1)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0xb0, 4) , (register, 0xb0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40e5e4, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x88, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x12e0, 8) FLOAT_SUB (register, 0x12e0, 8) , (register, 0x1240, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x90, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x12e0, 8) FLOAT_DIV (register, 0x12e0, 8) , (unique, 0x5280, 8)
plot_point,  ---  CBRANCH (ram, 0x40e714, 8) , (register, 0x206, 1)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x12e0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa0, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x38, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (register, 0x1260, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x58, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xb8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x40, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point,  ---  CBRANCH (ram, 0x40e706, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12c0, 8) FLOAT_DIV (register, 0x12c0, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x12c0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x50, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x68, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40d8b7, 8)
plot_point,  ---  CALL (ram, 0x4018f0, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x18, 4) INT_AND (register, 0x18, 4) , (const, 0x4, 4)
plot_point, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40e6f7, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x88, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x90, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40e889, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x70, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa0, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x38, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x58, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xb8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x40, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point,  ---  CBRANCH (ram, 0x40e874, 8) , (register, 0x206, 1)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1260, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x50, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x68, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40d965, 8)
plot_point,  ---  CALL (ram, 0x4017d0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x21c, 8)
plot_point, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd00, 4)
plot_point,  ---  BRANCH (ram, 0x40dbe1, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x68, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x50, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40dbf0, 8) , (unique, 0xc680, 1)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
plot_point, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
plot_point,  ---  CBRANCH (ram, 0x40d9ba, 8) , (unique, 0xce80, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)
plot_point, (register, 0x8, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
plot_point, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
plot_point, (register, 0x10, 8) COPY (const, 0x66666667, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x0, 4) COPY (register, 0x8, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x35180, 8) INT_SEXT (register, 0x0, 4)
plot_point, (unique, 0x35200, 8) INT_SEXT (register, 0x10, 4)
plot_point, (unique, 0x35300, 8) INT_MULT (unique, 0x35180, 8) , (unique, 0x35200, 8)
plot_point, (register, 0x10, 4) SUBPIECE (unique, 0x35300, 8) , (const, 0x4, 4)
plot_point, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_point, (register, 0x0, 4) SUBPIECE (unique, 0x35300, 8) , (const, 0x0, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x13b80, 8) INT_SEXT (register, 0x0, 4)
plot_point, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x13b80, 8) , (unique, 0x35300, 8)
plot_point, (register, 0x20b, 1) COPY (register, 0x200, 1)
plot_point, (register, 0x0, 4) COPY (register, 0x8, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x51600, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x51680, 4) COPY (register, 0x0, 4)
plot_point, (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (unique, 0x51600, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x15980, 1) INT_NOTEQUAL (unique, 0x51600, 4) , (const, 0x0, 4)
plot_point, (unique, 0x15a00, 4) INT_SUB (unique, 0x51600, 4) , (const, 0x1, 4)
plot_point, (unique, 0x15a80, 4) INT_SRIGHT (unique, 0x51680, 4) , (unique, 0x15a00, 4)
plot_point, (unique, 0x15b00, 4) INT_AND (unique, 0x15a80, 4) , (const, 0x1, 4)
plot_point, (unique, 0x15c00, 1) INT_NOTEQUAL (unique, 0x15b00, 4) , (const, 0x0, 4)
plot_point, (unique, 0x15c80, 1) BOOL_NEGATE (unique, 0x15980, 1)
plot_point, (unique, 0x15d00, 1) INT_AND (unique, 0x15c80, 1) , (register, 0x200, 1)
plot_point, (unique, 0x15d80, 1) INT_AND (unique, 0x15980, 1) , (unique, 0x15c00, 1)
plot_point, (register, 0x200, 1) INT_OR (unique, 0x15d00, 1) , (unique, 0x15d80, 1)
plot_point, (unique, 0x15f00, 1) INT_EQUAL (unique, 0x51600, 4) , (const, 0x1, 4)
plot_point, (unique, 0x15f80, 1) BOOL_NEGATE (unique, 0x15f00, 1)
plot_point, (register, 0x20b, 1) INT_AND (unique, 0x15f80, 1) , (register, 0x20b, 1)
plot_point, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x51600, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12f80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
plot_point, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
plot_point, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
plot_point, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
plot_point, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
plot_point, (unique, 0x13280, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
plot_point, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
plot_point, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
plot_point, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
plot_point, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
plot_point, (unique, 0x13500, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
plot_point, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 4)
plot_point, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
plot_point, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
plot_point, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
plot_point, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
plot_point, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
plot_point, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
plot_point, (unique, 0xbe80, 1) COPY (const, 0x1, 1)
plot_point, (unique, 0x51200, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4)
plot_point, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x51200, 4) , (const, 0x0, 4)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x10, 4) INT_SRIGHT (register, 0x10, 4) , (const, 0x1, 4)
plot_point, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (register, 0x0, 4)
plot_point, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (register, 0x0, 4)
plot_point, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x0, 4)
plot_point, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8)
plot_point, (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8)
plot_point, (register, 0x0, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x0, 4)
plot_point, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x0, 4)
plot_point, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x0, 4)
plot_point, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x0, 8) INT_SEXT (register, 0x8, 4)
plot_point, (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
plot_point, (unique, 0x3580, 8) INT_ADD (const, 0x613be0, 8) , (unique, 0x3480, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3580, 8)
plot_point, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40d9ba, 8)
plot_point,  ---  CALL (ram, 0x401a10, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x1f8, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40d9ca, 8)
plot_point,  ---  CALL (ram, 0x401aa0, 8)
plot_point, (register, 0x1200, 8) COPY (ram, 0x4116d0, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x58, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40d9e1, 8)
plot_point,  ---  CALL (ram, 0x401b00, 8)
plot_point, (register, 0x1240, 16) INT_XOR (register, 0x1240, 16) , (register, 0x1240, 16)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
plot_point, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x60, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1240, 8)
plot_point, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1220, 8)
plot_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1240, 8) , (register, 0x1220, 8)
plot_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1220, 8)
plot_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0xc800, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
plot_point, (unique, 0xc900, 1) BOOL_NEGATE (unique, 0xc800, 1)
plot_point,  ---  CBRANCH (ram, 0x40da30, 8) , (unique, 0xc900, 1)
plot_point, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x30, 8) COPY (const, 0x80000000, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1220, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (ram, 0x411708, 8)
plot_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
plot_point, (unique, 0x18300, 1) FLOAT_NAN (ram, 0x411428, 8)
plot_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (ram, 0x411428, 8)
plot_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (ram, 0x411428, 8)
plot_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1)
plot_point,  ---  CBRANCH (ram, 0x40da30, 8) , (unique, 0xc580, 1)
plot_point, (register, 0x1220, 8) COPY (ram, 0x411710, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x30, 1) COPY (const, 0x2, 1)
plot_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1220, 8)
plot_point, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1200, 8)
plot_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1220, 8) , (register, 0x1200, 8)
plot_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1220, 8) , (register, 0x1200, 8)
plot_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40ded0, 8) , (register, 0x200, 1)
plot_point, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
plot_point, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40da39, 8)
plot_point,  ---  CALL (ram, 0x401760, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x21c, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0xb0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0xb0, 4) , (register, 0xb0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40d60d, 8) , (register, 0x206, 1)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
plot_point, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_point,  ---  BRANCH (ram, 0x40d644, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x58800, 1) INT_AND (register, 0x0, 1) , (const, 0x8, 1)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x58800, 1) , (const, 0x0, 1)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x58800, 1) , (const, 0x0, 1)
plot_point, (unique, 0x12c00, 1) INT_AND (unique, 0x58800, 1) , (const, 0xff, 1)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40db00, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) COPY (register, 0x12e0, 8)
plot_point, (register, 0x1248, 8) COPY (register, 0x12e8, 8)
plot_point, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (register, 0x0, 4)
plot_point, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (register, 0x0, 4)
plot_point, (unique, 0x28600, 4) INT_SUB (register, 0x18, 4) , (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x1200, 8) COPY (register, 0x1260, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1268, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x12a0, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1280, 8)
plot_point, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1200, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x12c0, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x12c8, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1280, 8)
plot_point, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (register, 0x1200, 8)
plot_point, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x12a0, 8)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40d710, 8) , (unique, 0xc680, 1)
plot_point, (register, 0x1220, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1228, 8) COPY (register, 0x1248, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1260, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1268, 8)
plot_point, (register, 0x38, 8) COPY (register, 0x28, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x1240, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x1260, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40dad9, 8)
plot_point,  ---  CALL (ram, 0x408c00, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x18, 4) COPY (register, 0x0, 4)
plot_point, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x12a0, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x12a8, 8) COPY (register, 0x1248, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1280, 8) COPY (register, 0x1260, 8)
plot_point, (register, 0x1288, 8) COPY (register, 0x1268, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_point,  ---  BRANCH (ram, 0x40d6bb, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x58800, 1) INT_AND (register, 0x0, 1) , (const, 0x1, 1)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x58800, 1) , (const, 0x0, 1)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x58800, 1) , (const, 0x0, 1)
plot_point, (unique, 0x12c00, 1) INT_AND (unique, 0x58800, 1) , (const, 0xff, 1)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40db38, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x78, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (register, 0x1260, 8) COPY (register, 0x12c0, 8)
plot_point, (register, 0x1268, 8) COPY (register, 0x12c8, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x12a0, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1280, 8)
plot_point, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1200, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x12e0, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x12e8, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x12a0, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (register, 0x1200, 8)
plot_point, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1280, 8)
plot_point,  ---  BRANCH (ram, 0x40d708, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point,  ---  BRANCH (ram, 0x40db09, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x88, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x90, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40dc60, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x38, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa0, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x58, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x40, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xb8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1240, 8)
plot_point,  ---  CBRANCH (ram, 0x40de60, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x50, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x68, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40dbd7, 8)
plot_point,  ---  CALL (ram, 0x4017d0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x21c, 8)
plot_point, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd00, 4)
plot_point, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x50, 8)
plot_point, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x50, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x50, 8)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
plot_point, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  RETURN (register, 0x288, 8)
plot_point, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x0, 4)
plot_point, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x0, 4)
plot_point, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
plot_point, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
plot_point,  ---  CBRANCH (ram, 0x40deb0, 8) , (unique, 0xce80, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)
plot_point, (register, 0x8, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
plot_point, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
plot_point, (register, 0x38, 8) COPY (const, 0x66666667, 8)
plot_point, (register, 0x0, 4) COPY (register, 0x8, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x35180, 8) INT_SEXT (register, 0x0, 4)
plot_point, (unique, 0x35200, 8) INT_SEXT (register, 0x38, 4)
plot_point, (unique, 0x35300, 8) INT_MULT (unique, 0x35180, 8) , (unique, 0x35200, 8)
plot_point, (register, 0x10, 4) SUBPIECE (unique, 0x35300, 8) , (const, 0x4, 4)
plot_point, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_point, (register, 0x0, 4) SUBPIECE (unique, 0x35300, 8) , (const, 0x0, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x13b80, 8) INT_SEXT (register, 0x0, 4)
plot_point, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x13b80, 8) , (unique, 0x35300, 8)
plot_point, (register, 0x20b, 1) COPY (register, 0x200, 1)
plot_point, (register, 0x0, 4) COPY (register, 0x10, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x10, 4) COPY (register, 0x8, 4)
plot_point, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_point, (unique, 0x51600, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x51680, 4) COPY (register, 0x10, 4)
plot_point, (register, 0x10, 4) INT_SRIGHT (register, 0x10, 4) , (unique, 0x51600, 4)
plot_point, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_point, (unique, 0x15980, 1) INT_NOTEQUAL (unique, 0x51600, 4) , (const, 0x0, 4)
plot_point, (unique, 0x15a00, 4) INT_SUB (unique, 0x51600, 4) , (const, 0x1, 4)
plot_point, (unique, 0x15a80, 4) INT_SRIGHT (unique, 0x51680, 4) , (unique, 0x15a00, 4)
plot_point, (unique, 0x15b00, 4) INT_AND (unique, 0x15a80, 4) , (const, 0x1, 4)
plot_point, (unique, 0x15c00, 1) INT_NOTEQUAL (unique, 0x15b00, 4) , (const, 0x0, 4)
plot_point, (unique, 0x15c80, 1) BOOL_NEGATE (unique, 0x15980, 1)
plot_point, (unique, 0x15d00, 1) INT_AND (unique, 0x15c80, 1) , (register, 0x200, 1)
plot_point, (unique, 0x15d80, 1) INT_AND (unique, 0x15980, 1) , (unique, 0x15c00, 1)
plot_point, (register, 0x200, 1) INT_OR (unique, 0x15d00, 1) , (unique, 0x15d80, 1)
plot_point, (unique, 0x15f00, 1) INT_EQUAL (unique, 0x51600, 4) , (const, 0x1, 4)
plot_point, (unique, 0x15f80, 1) BOOL_NEGATE (unique, 0x15f00, 1)
plot_point, (register, 0x20b, 1) INT_AND (unique, 0x15f80, 1) , (register, 0x20b, 1)
plot_point, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x51600, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12f80, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
plot_point, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
plot_point, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
plot_point, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
plot_point, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
plot_point, (unique, 0x13280, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
plot_point, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
plot_point, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
plot_point, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
plot_point, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
plot_point, (unique, 0x13500, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
plot_point, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 4)
plot_point, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
plot_point, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
plot_point, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
plot_point, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
plot_point, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
plot_point, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
plot_point, (unique, 0xbe80, 1) COPY (const, 0x1, 1)
plot_point, (unique, 0x51200, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4)
plot_point, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x51200, 4) , (const, 0x0, 4)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (const, 0x1, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x10, 4)
plot_point, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x10, 4)
plot_point, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x30, 4) COPY (register, 0x0, 4)
plot_point, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
plot_point, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)
plot_point, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
plot_point, (register, 0x0, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x0, 4)
plot_point, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x0, 4)
plot_point, (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x0, 4)
plot_point, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x0, 4) COPY (register, 0x30, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x35180, 8) INT_SEXT (register, 0x0, 4)
plot_point, (unique, 0x35200, 8) INT_SEXT (register, 0x38, 4)
plot_point, (unique, 0x35300, 8) INT_MULT (unique, 0x35180, 8) , (unique, 0x35200, 8)
plot_point, (register, 0x10, 4) SUBPIECE (unique, 0x35300, 8) , (const, 0x4, 4)
plot_point, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_point, (register, 0x0, 4) SUBPIECE (unique, 0x35300, 8) , (const, 0x0, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x13b80, 8) INT_SEXT (register, 0x0, 4)
plot_point, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x13b80, 8) , (unique, 0x35300, 8)
plot_point, (register, 0x20b, 1) COPY (register, 0x200, 1)
plot_point, (register, 0x0, 4) COPY (register, 0x30, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (unique, 0x51600, 4) INT_AND (const, 0x1f, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x51680, 4) COPY (register, 0x0, 4)
plot_point, (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (unique, 0x51600, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x15980, 1) INT_NOTEQUAL (unique, 0x51600, 4) , (const, 0x0, 4)
plot_point, (unique, 0x15a00, 4) INT_SUB (unique, 0x51600, 4) , (const, 0x1, 4)
plot_point, (unique, 0x15a80, 4) INT_SRIGHT (unique, 0x51680, 4) , (unique, 0x15a00, 4)
plot_point, (unique, 0x15b00, 4) INT_AND (unique, 0x15a80, 4) , (const, 0x1, 4)
plot_point, (unique, 0x15c00, 1) INT_NOTEQUAL (unique, 0x15b00, 4) , (const, 0x0, 4)
plot_point, (unique, 0x15c80, 1) BOOL_NEGATE (unique, 0x15980, 1)
plot_point, (unique, 0x15d00, 1) INT_AND (unique, 0x15c80, 1) , (register, 0x200, 1)
plot_point, (unique, 0x15d80, 1) INT_AND (unique, 0x15980, 1) , (unique, 0x15c00, 1)
plot_point, (register, 0x200, 1) INT_OR (unique, 0x15d00, 1) , (unique, 0x15d80, 1)
plot_point, (unique, 0x15f00, 1) INT_EQUAL (unique, 0x51600, 4) , (const, 0x1, 4)
plot_point, (unique, 0x15f80, 1) BOOL_NEGATE (unique, 0x15f00, 1)
plot_point, (register, 0x20b, 1) INT_AND (unique, 0x15f80, 1) , (register, 0x20b, 1)
plot_point, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x51600, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12f80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
plot_point, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
plot_point, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
plot_point, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
plot_point, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
plot_point, (unique, 0x13280, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
plot_point, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
plot_point, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
plot_point, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
plot_point, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
plot_point, (unique, 0x13500, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
plot_point, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 4)
plot_point, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
plot_point, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
plot_point, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
plot_point, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
plot_point, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
plot_point, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
plot_point, (register, 0x18, 4) COPY (register, 0x8, 4)
plot_point, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
plot_point, (unique, 0xbe80, 1) COPY (const, 0x1, 1)
plot_point, (unique, 0x51200, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4)
plot_point, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x51200, 4) , (const, 0x0, 4)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x10, 4) INT_SRIGHT (register, 0x10, 4) , (const, 0x1, 4)
plot_point, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (register, 0x0, 4)
plot_point, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (register, 0x0, 4)
plot_point, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x0, 4)
plot_point, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8)
plot_point, (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8)
plot_point, (register, 0x0, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x200, 1) INT_LESS (register, 0x30, 4) , (register, 0x0, 4)
plot_point, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 4) , (register, 0x0, 4)
plot_point, (register, 0x30, 4) INT_SUB (register, 0x30, 4) , (register, 0x0, 4)
plot_point, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x0, 8) INT_SEXT (register, 0x30, 4)
plot_point, (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
plot_point, (unique, 0x3580, 8) INT_ADD (const, 0x613be0, 8) , (unique, 0x3480, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3580, 8)
plot_point, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40dc3f, 8)
plot_point,  ---  CALL (ram, 0x401a10, 8)
plot_point, (register, 0x0, 8) INT_SEXT (register, 0x18, 4)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
plot_point, (unique, 0x3580, 8) INT_ADD (const, 0x613ba0, 8) , (unique, 0x3480, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3580, 8)
plot_point, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40dc53, 8)
plot_point,  ---  CALL (ram, 0x401aa0, 8)
plot_point,  ---  BRANCH (ram, 0x40d9ca, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1200, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_point,  ---  BRANCH (ram, 0x40db72, 8)
plot_point, (register, 0x18, 8) COPY (const, 0x3, 8)
plot_point,  ---  BRANCH (ram, 0x40d79e, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x88, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x90, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40de80, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x38, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0xb0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0xb0, 4) , (register, 0xb0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa0, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x40, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xb8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x58, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point,  ---  CBRANCH (ram, 0x40def0, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1280, 8)
plot_point, (register, 0x1240, 8) COPY (register, 0x1260, 8)
plot_point, (register, 0x1248, 8) COPY (register, 0x1268, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x50, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x1240, 8) FLOAT_ADD (register, 0x1240, 8) , (register, 0x12a0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x68, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40dd39, 8)
plot_point,  ---  CALL (ram, 0x4017d0, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x18, 4) INT_AND (register, 0x18, 4) , (const, 0x4, 4)
plot_point, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x21c, 8)
plot_point, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd00, 4)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40dbe1, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x3c, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
plot_point, (register, 0x200, 1) INT_LESS (register, 0x30, 4) , (const, 0x1f, 4)
plot_point, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x1f, 4)
plot_point, (unique, 0x28200, 4) INT_SUB (register, 0x30, 4) , (const, 0x1f, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
plot_point, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
plot_point,  ---  CBRANCH (ram, 0x40df0a, 8) , (unique, 0xd080, 1)
plot_point, (register, 0x200, 1) INT_LESS (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (unique, 0x28200, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
plot_point, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
plot_point,  ---  CBRANCH (ram, 0x40e323, 8) , (unique, 0xce80, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x50, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x98, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
plot_point, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
plot_point,  ---  CBRANCH (ram, 0x40e00f, 8) , (unique, 0xce80, 1)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40dd78, 8)
plot_point,  ---  CALL (ram, 0x4018e0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x10, 8)
plot_point, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
plot_point, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
plot_point, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
plot_point, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40e772, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x68, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x88, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x90, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xb8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x3c, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x50, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) COPY (register, 0x12c0, 8)
plot_point, (register, 0x1248, 8) COPY (register, 0x12c8, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa0, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x1220, 8) COPY (register, 0x1200, 8)
plot_point, (register, 0x1228, 8) COPY (register, 0x1208, 8)
plot_point, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1260, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1308, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12a0, 8)
plot_point, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1220, 8)
plot_point,  ---  CBRANCH (ram, 0x40ddc8, 8) , (unique, 0x79100, 1)
plot_point, (register, 0x1240, 8) COPY (register, 0x1220, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x90, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x40, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40e43a, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x70, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x38, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x12a0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x58, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x1220, 8)
plot_point, (register, 0x1220, 8) COPY (register, 0x1200, 8)
plot_point, (register, 0x1228, 8) COPY (register, 0x1208, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x40, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1280, 8)
plot_point, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1300, 8)
plot_point,  ---  CBRANCH (ram, 0x40e6b9, 8) , (register, 0x206, 1)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
plot_point, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1280, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x12a0, 8)
plot_point, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1280, 8)
plot_point, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1200, 8)
plot_point, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1260, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x12c0, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x12c8, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12e0, 8)
plot_point,  ---  BRANCH (ram, 0x40dff1, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0x4, 4)
plot_point, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  BRANCH (ram, 0x40d7d3, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point,  ---  BRANCH (ram, 0x40dbbc, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_point,  ---  BRANCH (ram, 0x40dcce, 8)
plot_point, (register, 0x18, 8) COPY (const, 0x0, 8)
plot_point,  ---  CBRANCH (ram, 0x40dc3f, 8) , (register, 0x206, 1)
plot_point, (register, 0x0, 4) INT_NEGATE (register, 0x0, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x18, 4) COPY (register, 0x0, 4)
plot_point, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
plot_point,  ---  BRANCH (ram, 0x40dc3f, 8)
plot_point, (unique, 0x18280, 1) FLOAT_NAN (register, 0x1200, 8)
plot_point, (unique, 0x18300, 1) FLOAT_NAN (register, 0x1240, 8)
plot_point, (register, 0x202, 1) BOOL_OR (unique, 0x18280, 1) , (unique, 0x18300, 1)
plot_point, (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (register, 0x1240, 8)
plot_point, (register, 0x206, 1) INT_OR (register, 0x202, 1) , (unique, 0x18400, 1)
plot_point, (unique, 0x18500, 1) FLOAT_LESS (register, 0x1200, 8) , (register, 0x1240, 8)
plot_point, (register, 0x200, 1) INT_OR (register, 0x202, 1) , (unique, 0x18500, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x204, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x207, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40e6e3, 8) , (unique, 0xc780, 1)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (ram, 0x4116a8, 8)
plot_point, (register, 0x0, 4) TRUNC (register, 0x1200, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
plot_point, (register, 0x30, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
plot_point, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
plot_point,  ---  BRANCH (ram, 0x40da30, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1240, 8) COPY (register, 0x1260, 8)
plot_point, (register, 0x1248, 8) COPY (register, 0x1268, 8)
plot_point,  ---  BRANCH (ram, 0x40dd1e, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40df13, 8)
plot_point,  ---  CALL (ram, 0x4018e0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x10, 8)
plot_point, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
plot_point, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
plot_point, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
plot_point, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40e762, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x48, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40df2b, 8)
plot_point,  ---  CALL (ram, 0x401a20, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x68, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x88, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0xa0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xb8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x3c, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x50, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) COPY (register, 0x12e0, 8)
plot_point, (register, 0x1248, 8) COPY (register, 0x12e8, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa0, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1220, 8) COPY (register, 0x1200, 8)
plot_point, (register, 0x1228, 8) COPY (register, 0x1208, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x12c0, 8)
plot_point, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12a0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1308, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1220, 8)
plot_point,  ---  CBRANCH (ram, 0x40df70, 8) , (unique, 0x79100, 1)
plot_point, (register, 0x1240, 8) COPY (register, 0x1220, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x90, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x40, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40e416, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x70, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x38, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x18, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x18, 4) , (register, 0x18, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x12a0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x58, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x1220, 8)
plot_point, (register, 0x1220, 8) COPY (register, 0x1200, 8)
plot_point, (register, 0x1228, 8) COPY (register, 0x1208, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x40, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1280, 8)
plot_point, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1300, 8)
plot_point,  ---  CBRANCH (ram, 0x40e6a4, 8) , (register, 0x206, 1)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1280, 8)
plot_point, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x12c0, 8)
plot_point, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1200, 8)
plot_point, (register, 0x12e0, 8) FLOAT_MULT (register, 0x12e0, 8) , (register, 0x1260, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x12e0, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x12e8, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12a0, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40dffa, 8)
plot_point,  ---  CALL (ram, 0x401870, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x50, 8)
plot_point, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x50, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x50, 8)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
plot_point, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  BRANCH (ram, 0x401860, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x10, 8)
plot_point, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
plot_point, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
plot_point, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
plot_point, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40e799, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x68, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x88, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xb8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x50, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) COPY (register, 0x12c0, 8)
plot_point, (register, 0x1248, 8) COPY (register, 0x12c8, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa0, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x1220, 8) COPY (register, 0x1200, 8)
plot_point, (register, 0x1228, 8) COPY (register, 0x1208, 8)
plot_point, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x12a0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1308, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1280, 8)
plot_point, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1220, 8)
plot_point,  ---  CBRANCH (ram, 0x40e05b, 8) , (unique, 0x79100, 1)
plot_point, (register, 0x1240, 8) COPY (register, 0x1220, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x90, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x40, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40e45e, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x70, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x38, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1260, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x58, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1280, 8) FLOAT_ADD (register, 0x1280, 8) , (register, 0x1220, 8)
plot_point, (register, 0x1220, 8) COPY (register, 0x1200, 8)
plot_point, (register, 0x1228, 8) COPY (register, 0x1208, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x40, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x1280, 8)
plot_point, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1300, 8)
plot_point,  ---  CBRANCH (ram, 0x40e6ce, 8) , (register, 0x206, 1)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x1280, 8)
plot_point, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x12a0, 8)
plot_point, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1200, 8)
plot_point, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1260, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x12c0, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x12c8, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12e0, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x50, 8)
plot_point, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x50, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x50, 8)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
plot_point, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  BRANCH (ram, 0x401870, 8)
plot_point, (register, 0x0, 4) COPY (register, 0x18, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x6, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x6, 4)
plot_point, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x6, 4)
plot_point, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x6, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40e53a, 8) , (register, 0x206, 1)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x58c00, 1) INT_AND (register, 0x18, 1) , (const, 0x2, 1)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x58c00, 1) , (const, 0x0, 1)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1)
plot_point, (unique, 0x12c00, 1) INT_AND (unique, 0x58c00, 1) , (const, 0xff, 1)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40e7ad, 8) , (register, 0x206, 1)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0xb0, 4) , (register, 0xb0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40e53a, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x88, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0xb0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x90, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0xb0, 4) , (register, 0xb0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40e922, 8) , (register, 0x206, 1)
plot_point, (register, 0x1260, 8) COPY (register, 0x12a0, 8)
plot_point, (register, 0x1268, 8) COPY (register, 0x12a8, 8)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa0, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x38, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0xa0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x58, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12c0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x40, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xb8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_point,  ---  CBRANCH (ram, 0x40e96e, 8) , (register, 0x206, 1)
plot_point, (register, 0x1260, 8) COPY (register, 0x1280, 8)
plot_point, (register, 0x1268, 8) COPY (register, 0x1288, 8)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x50, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12c0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x68, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12a0, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40e1bc, 8)
plot_point,  ---  CALL (ram, 0x4017d0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x88, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x98, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x90, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40e952, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x70, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa0, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x38, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x90, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x40, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x58, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xb8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_point,  ---  CBRANCH (ram, 0x40e909, 8) , (register, 0x206, 1)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x50, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12a0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x68, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40e269, 8)
plot_point,  ---  CALL (ram, 0x4018f0, 8)
plot_point,  ---  BRANCH (ram, 0x40dd39, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x58c00, 1) INT_AND (register, 0x18, 1) , (const, 0x6, 1)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x58c00, 1) , (const, 0x0, 1)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1)
plot_point, (unique, 0x12c00, 1) INT_AND (unique, 0x58c00, 1) , (const, 0xff, 1)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point,  ---  CBRANCH (ram, 0x40e482, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x88, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x90, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40e857, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1200, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa0, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x38, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x58, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xb8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x40, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point,  ---  CBRANCH (ram, 0x40e841, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x50, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x68, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40e31e, 8)
plot_point,  ---  CALL (ram, 0x4017d0, 8)
plot_point,  ---  BRANCH (ram, 0x40dd39, 8)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40e518, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x50, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40e518, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x10, 8)
plot_point, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
plot_point, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
plot_point, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
plot_point, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40e97c, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x68, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x88, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xb8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x50, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) COPY (register, 0x1280, 8)
plot_point, (register, 0x1248, 8) COPY (register, 0x1288, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa0, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x1260, 8) COPY (register, 0x12c0, 8)
plot_point, (register, 0x1268, 8) COPY (register, 0x12c8, 8)
plot_point, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (register, 0x1200, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1220, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x90, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1300, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1308, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x79100, 1) FLOAT_LESS (register, 0x1240, 8) , (register, 0x1260, 8)
plot_point,  ---  CBRANCH (ram, 0x40e387, 8) , (unique, 0x79100, 1)
plot_point, (register, 0x1240, 8) COPY (register, 0x1260, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x40, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point,  ---  CBRANCH (ram, 0x40e8f1, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x70, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x12a0, 8)
plot_point, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1220, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x38, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x1300, 8)
plot_point, (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (register, 0x1260, 8)
plot_point, (register, 0x1220, 8) COPY (register, 0x12c0, 8)
plot_point, (register, 0x1228, 8) COPY (register, 0x12c8, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x58, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x12e0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x40, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_point,  ---  CBRANCH (ram, 0x40e8dc, 8) , (register, 0x206, 1)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
plot_point, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x12a0, 8)
plot_point, (register, 0x1260, 8) FLOAT_MULT (register, 0x1260, 8) , (register, 0x1200, 8)
plot_point, (register, 0x30, 8) COPY (const, 0x1, 8)
plot_point, (register, 0x1260, 8) FLOAT_ADD (register, 0x1260, 8) , (register, 0x12e0, 8)
plot_point, (register, 0x1280, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x1260, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1280, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1288, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12c0, 8)
plot_point,  ---  BRANCH (ram, 0x40e0dc, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1280, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x70, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x1260, 8)
plot_point,  ---  BRANCH (ram, 0x40df97, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1280, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x70, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12e0, 8) FLOAT_SUB (register, 0x12e0, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x12e0, 8) FLOAT_DIV (register, 0x12e0, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (register, 0x12e0, 8)
plot_point,  ---  BRANCH (ram, 0x40ddef, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1260, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x70, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12e0, 8) FLOAT_SUB (register, 0x12e0, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x12e0, 8) FLOAT_DIV (register, 0x12e0, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (register, 0x12e0, 8)
plot_point,  ---  BRANCH (ram, 0x40e082, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0xb0, 4) , (register, 0xb0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x90, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40e737, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x88, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40e8a5, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa0, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x38, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x40, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x58, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xb8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_point,  ---  CBRANCH (ram, 0x40e8c2, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_point,  ---  BRANCH (ram, 0x40e24e, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x10, 8)
plot_point, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
plot_point, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
plot_point, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
plot_point, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40dbe1, 8) , (register, 0x206, 1)
plot_point, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x50, 8)
plot_point, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x50, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x50, 8)
plot_point, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
plot_point, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
plot_point, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x30, 8) COPY (register, 0xa8, 8)
plot_point, (register, 0x38, 8) COPY (register, 0x28, 8)
plot_point, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  BRANCH (ram, 0x4067f0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x88, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x90, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40e745, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa0, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x38, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x40, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x58, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xb8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_point,  ---  CBRANCH (ram, 0x40e71d, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x50, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x12a0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x68, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40e5df, 8)
plot_point,  ---  CALL (ram, 0x4017d0, 8)
plot_point,  ---  BRANCH (ram, 0x40dd39, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x12a0, 8) FLOAT_SUB (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x88, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1220, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1228, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x90, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_point,  ---  CBRANCH (ram, 0x40e790, 8) , (register, 0x206, 1)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x12a0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa0, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x38, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x58, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xb8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x40, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1208, 8) COPY (const, 0x0, 8)
plot_point,  ---  CBRANCH (ram, 0x40e782, 8) , (register, 0x206, 1)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (register, 0x1280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x50, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
plot_point, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x12c0, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x5280, 8) COPY (register, 0x12e0, 8)
plot_point,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1240, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x68, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1260, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40e68a, 8)
plot_point,  ---  CALL (ram, 0x4017d0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x70, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x12c0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12c8, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
plot_point, (register, 0x12e0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12e8, 8) COPY (const, 0x0, 8)
plot_point,  ---  BRANCH (ram, 0x40d820, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point,  ---  BRANCH (ram, 0x40dfdd, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) FLOAT_SUB (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point,  ---  BRANCH (ram, 0x40de37, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point,  ---  BRANCH (ram, 0x40e0c8, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (ram, 0x4116a8, 8)
plot_point, (register, 0x0, 4) TRUNC (register, 0x1200, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
plot_point, (register, 0x30, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
plot_point, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
plot_point,  ---  BRANCH (ram, 0x40da30, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x21c, 8)
plot_point, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
plot_point,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd00, 4)
plot_point,  ---  BRANCH (ram, 0x40dd4c, 8)
plot_point, (register, 0x1240, 8) COPY (register, 0x12c0, 8)
plot_point, (register, 0x1248, 8) COPY (register, 0x12c8, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point,  ---  BRANCH (ram, 0x40d89c, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x12e0, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x12e8, 8)
plot_point,  ---  BRANCH (ram, 0x40d85a, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point,  ---  BRANCH (ram, 0x40e5c4, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x88, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40e552, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point,  ---  BRANCH (ram, 0x40e576, 8)
plot_point, (register, 0x30, 8) COPY (register, 0xa8, 8)
plot_point, (register, 0x38, 8) COPY (register, 0x28, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40e76d, 8)
plot_point,  ---  CALL (ram, 0x4067f0, 8)
plot_point,  ---  BRANCH (ram, 0x40df1e, 8)
plot_point, (register, 0x30, 8) COPY (register, 0xa8, 8)
plot_point, (register, 0x38, 8) COPY (register, 0x28, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40e77d, 8)
plot_point,  ---  CALL (ram, 0x4067f0, 8)
plot_point,  ---  BRANCH (ram, 0x40dd83, 8)
plot_point, (register, 0x1240, 8) COPY (register, 0x1280, 8)
plot_point, (register, 0x1248, 8) COPY (register, 0x1288, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point,  ---  BRANCH (ram, 0x40e664, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x12a0, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x12a8, 8)
plot_point,  ---  BRANCH (ram, 0x40e620, 8)
plot_point, (register, 0x30, 8) COPY (register, 0xa8, 8)
plot_point, (register, 0x38, 8) COPY (register, 0x28, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40e7a4, 8)
plot_point,  ---  CALL (ram, 0x4067f0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x3c, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x30, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
plot_point,  ---  BRANCH (ram, 0x40e01a, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0xb0, 4) , (register, 0xb0, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x90, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point,  ---  CBRANCH (ram, 0x40e737, 8) , (unique, 0xc680, 1)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x88, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x12e0, 8) FLOAT_SUB (register, 0x12e0, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point,  ---  CBRANCH (ram, 0x40e941, 8) , (register, 0x206, 1)
plot_point, (register, 0x1260, 8) COPY (register, 0x12e0, 8)
plot_point, (register, 0x1268, 8) COPY (register, 0x12e8, 8)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xa0, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x38, 8)
plot_point, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
plot_point, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x40, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12a0, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x12a8, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x12c0, 8) FLOAT_SUB (register, 0x12c0, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
plot_point, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point, (register, 0x1200, 8) FLOAT_ADD (register, 0x1200, 8) , (register, 0x1280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x58, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1288, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xb8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_MULT (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1220, 8) FLOAT_ADD (register, 0x1220, 8) , (register, 0x1200, 8)
plot_point,  ---  CBRANCH (ram, 0x40e933, 8) , (register, 0x206, 1)
plot_point, (register, 0x1260, 8) COPY (register, 0x12c0, 8)
plot_point, (register, 0x1268, 8) COPY (register, 0x12c8, 8)
plot_point, (register, 0x1240, 8) COPY (ram, 0x4111f0, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x1260, 8)
plot_point,  ---  BRANCH (ram, 0x40e24e, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point,  ---  BRANCH (ram, 0x40e303, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point,  ---  BRANCH (ram, 0x40e2b9, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
plot_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_DIV (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point,  ---  BRANCH (ram, 0x40d94a, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x70, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point,  ---  BRANCH (ram, 0x40d901, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point,  ---  BRANCH (ram, 0x40e4c5, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point,  ---  BRANCH (ram, 0x40e24e, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point,  ---  BRANCH (ram, 0x40e3f8, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1268, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x70, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1260, 8) FLOAT_SUB (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1260, 8) FLOAT_DIV (register, 0x1260, 8) , (unique, 0x5280, 8)
plot_point,  ---  BRANCH (ram, 0x40e3b2, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)
plot_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point,  ---  BRANCH (ram, 0x40e24e, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x12a0, 8) FLOAT_DIV (register, 0x12a0, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x12a0, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x12a8, 8)
plot_point,  ---  BRANCH (ram, 0x40e153, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x12c0, 8) FLOAT_DIV (register, 0x12c0, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x12c0, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x12c8, 8)
plot_point,  ---  BRANCH (ram, 0x40e24e, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x12e0, 8) FLOAT_DIV (register, 0x12e0, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x12e0, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x12e8, 8)
plot_point,  ---  BRANCH (ram, 0x40e7f0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) COPY (unique, 0x5280, 8)
plot_point, (register, 0x1248, 8) COPY (const, 0x0, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x70, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1240, 8) FLOAT_SUB (register, 0x1240, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1240, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1248, 8)
plot_point, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x80, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
plot_point, (register, 0x1200, 8) FLOAT_DIV (register, 0x1200, 8) , (unique, 0x5280, 8)
plot_point,  ---  BRANCH (ram, 0x40e1ff, 8)
plot_point, (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x30, 8)
plot_point, (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
plot_point, (register, 0x1280, 8) FLOAT_DIV (register, 0x1280, 8) , (unique, 0x5280, 8)
plot_point, (register, 0x1200, 8) COPY (register, 0x1280, 8)
plot_point, (register, 0x1208, 8) COPY (register, 0x1288, 8)
plot_point,  ---  BRANCH (ram, 0x40e1a1, 8)
plot_point, (register, 0x30, 8) COPY (register, 0xa8, 8)
plot_point, (register, 0x38, 8) COPY (register, 0x28, 8)
plot_point, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40e987, 8)
plot_point,  ---  CALL (ram, 0x4067f0, 8)
plot_point,  ---  BRANCH (ram, 0x40e340, 8)
plot_point_array, (register, 0x200, 1) COPY (const, 0x0, 1)
plot_point_array, (register, 0x20b, 1) COPY (const, 0x0, 1)
plot_point_array, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
plot_point_array, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point_array, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
plot_point_array, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
plot_point_array, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
plot_point_array, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point_array, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point_array, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
plot_point_array, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
plot_point_array,  ---  CBRANCH (ram, 0x40e9d8, 8) , (unique, 0xce80, 1)
plot_point_array, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
plot_point_array, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point_array,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
plot_point_array, (unique, 0xe780, 8) COPY (register, 0x28, 8)
plot_point_array, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point_array,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
plot_point_array, (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0xffffffffffffffff, 8)
plot_point_array, (register, 0x28, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
plot_point_array, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
plot_point_array, (unique, 0xe780, 8) COPY (register, 0x18, 8)
plot_point_array, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point_array,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
plot_point_array, (register, 0xa0, 8) COPY (register, 0x38, 8)
plot_point_array, (register, 0x18, 8) COPY (register, 0x30, 8)
plot_point_array, (register, 0x200, 1) INT_CARRY (register, 0x28, 8) , (const, 0x1, 8)
plot_point_array, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 8) , (const, 0x1, 8)
plot_point_array, (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8)
plot_point_array, (register, 0x207, 1) INT_SLESS (register, 0x28, 8) , (const, 0x0, 8)
plot_point_array, (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)
plot_point_array, (unique, 0x12c00, 8) INT_AND (register, 0x28, 8) , (const, 0xff, 8)
plot_point_array, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_point_array, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point_array, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point_array, (register, 0x0, 8) COPY (register, 0x28, 8)
plot_point_array, (unique, 0x53900, 4) INT_AND (const, 0x7, 4) , (const, 0x3f, 4)
plot_point_array, (unique, 0x53980, 8) COPY (register, 0x28, 8)
plot_point_array, (register, 0x28, 8) INT_LEFT (register, 0x28, 8) , (unique, 0x53900, 4)
plot_point_array, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
plot_point_array, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
plot_point_array, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
plot_point_array, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
plot_point_array, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
plot_point_array, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
plot_point_array, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
plot_point_array, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
plot_point_array, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
plot_point_array, (unique, 0x15580, 1) INT_SLESS (register, 0x28, 8) , (const, 0x0, 8)
plot_point_array, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
plot_point_array, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
plot_point_array, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
plot_point_array, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
plot_point_array, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
plot_point_array, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
plot_point_array, (unique, 0x12f80, 1) INT_SLESS (register, 0x28, 8) , (const, 0x0, 8)
plot_point_array, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
plot_point_array, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
plot_point_array, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
plot_point_array, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
plot_point_array, (unique, 0x13280, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)
plot_point_array, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
plot_point_array, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
plot_point_array, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
plot_point_array, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
plot_point_array, (unique, 0x13500, 8) INT_AND (register, 0x28, 8) , (const, 0xff, 8)
plot_point_array, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
plot_point_array, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
plot_point_array, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
plot_point_array, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
plot_point_array, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
plot_point_array, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
plot_point_array, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
plot_point_array, (unique, 0x53900, 4) INT_AND (const, 0x4, 4) , (const, 0x3f, 4)
plot_point_array, (unique, 0x53980, 8) COPY (register, 0x0, 8)
plot_point_array, (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53900, 4)
plot_point_array, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
plot_point_array, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
plot_point_array, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
plot_point_array, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
plot_point_array, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
plot_point_array, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
plot_point_array, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
plot_point_array, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
plot_point_array, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
plot_point_array, (unique, 0x15580, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
plot_point_array, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
plot_point_array, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
plot_point_array, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
plot_point_array, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
plot_point_array, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
plot_point_array, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
plot_point_array, (unique, 0x12f80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
plot_point_array, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
plot_point_array, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
plot_point_array, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
plot_point_array, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
plot_point_array, (unique, 0x13280, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
plot_point_array, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
plot_point_array, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
plot_point_array, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
plot_point_array, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
plot_point_array, (unique, 0x13500, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
plot_point_array, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
plot_point_array, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
plot_point_array, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
plot_point_array, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
plot_point_array, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
plot_point_array, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
plot_point_array, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
plot_point_array, (register, 0x200, 1) INT_LESS (register, 0x28, 8) , (register, 0x0, 8)
plot_point_array, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 8) , (register, 0x0, 8)
plot_point_array, (register, 0x28, 8) INT_SUB (register, 0x28, 8) , (register, 0x0, 8)
plot_point_array, (register, 0x207, 1) INT_SLESS (register, 0x28, 8) , (const, 0x0, 8)
plot_point_array, (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)
plot_point_array, (unique, 0x12c00, 8) INT_AND (register, 0x28, 8) , (const, 0xff, 8)
plot_point_array, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_point_array, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point_array, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point_array, (register, 0x200, 1) INT_CARRY (register, 0x28, 8) , (register, 0x30, 8)
plot_point_array, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 8) , (register, 0x30, 8)
plot_point_array, (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (register, 0x30, 8)
plot_point_array, (register, 0x207, 1) INT_SLESS (register, 0x28, 8) , (const, 0x0, 8)
plot_point_array, (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)
plot_point_array, (unique, 0x12c00, 8) INT_AND (register, 0x28, 8) , (const, 0xff, 8)
plot_point_array, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_point_array, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point_array, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point_array, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
plot_point_array, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
plot_point_array, (register, 0x30, 8) COPY (register, 0x18, 8)
plot_point_array, (register, 0x38, 8) COPY (register, 0xa0, 8)
plot_point_array, (register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x70, 8)
plot_point_array, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x70, 8)
plot_point_array, (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)
plot_point_array, (register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)
plot_point_array, (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)
plot_point_array, (unique, 0x12c00, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)
plot_point_array, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_point_array, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point_array, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point_array, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
plot_point_array,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40e9cf, 8)
plot_point_array,  ---  CALL (ram, 0x40d5e0, 8)
plot_point_array, (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (register, 0x28, 8)
plot_point_array, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 8) , (register, 0x28, 8)
plot_point_array, (unique, 0x28700, 8) INT_SUB (register, 0x18, 8) , (register, 0x28, 8)
plot_point_array, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
plot_point_array, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
plot_point_array, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
plot_point_array, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
plot_point_array, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
plot_point_array, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
plot_point_array, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
plot_point_array,  ---  CBRANCH (ram, 0x40e9c0, 8) , (unique, 0xc680, 1)
plot_point_array, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point_array, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point_array, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point_array, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point_array, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point_array, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point_array, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
plot_point_array, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
plot_point_array,  ---  RETURN (register, 0x288, 8)
end_polyline_and_flush, (unique, 0xe780, 8) COPY (register, 0x18, 8)
end_polyline_and_flush, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
end_polyline_and_flush,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
end_polyline_and_flush, (register, 0x18, 8) COPY (register, 0x38, 8)
end_polyline_and_flush, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)
end_polyline_and_flush, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
end_polyline_and_flush, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
end_polyline_and_flush,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40e9ec, 8)
end_polyline_and_flush,  ---  CALL (ram, 0x401720, 8)
end_polyline_and_flush, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
end_polyline_and_flush, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
end_polyline_and_flush, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
end_polyline_and_flush,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40e9f4, 8)
end_polyline_and_flush,  ---  CALL (ram, 0x4018b0, 8)
end_polyline_and_flush, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x21c, 8)
end_polyline_and_flush, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
end_polyline_and_flush,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd00, 4)
end_polyline_and_flush, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
end_polyline_and_flush, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
end_polyline_and_flush, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
end_polyline_and_flush, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
end_polyline_and_flush,  ---  RETURN (register, 0x288, 8)
display_fonts, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
display_fonts, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
display_fonts, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
display_fonts, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
display_fonts, (register, 0xa8, 8) COPY (register, 0x30, 8)
display_fonts, (unique, 0xe780, 8) COPY (register, 0x28, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
display_fonts, (unique, 0xe780, 8) COPY (register, 0x18, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
display_fonts, (register, 0x28, 8) COPY (const, 0x613c40, 8)
display_fonts, (register, 0x18, 8) COPY (register, 0x38, 8)
display_fonts, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x38, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x38, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x38, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts,  ---  BRANCH (ram, 0x40ea30, 8)
display_fonts, (register, 0x38, 8) COPY (register, 0x18, 8)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x28, 8) , (const, 0x8, 8)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 8) , (const, 0x8, 8)
display_fonts, (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (const, 0x8, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x28, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x28, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ea2c, 8)
display_fonts,  ---  CALL (ram, 0x401a00, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts,  ---  CBRANCH (ram, 0x40ea68, 8) , (register, 0x206, 1)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
display_fonts, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59300, 8) INT_AND (register, 0x30, 8) , (register, 0x30, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40ea20, 8) , (unique, 0xc680, 1)
display_fonts, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
display_fonts, (register, 0x10, 8) COPY (register, 0xa8, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x411740, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0xa0, 4) INT_XOR (register, 0xa0, 4) , (register, 0xa0, 4)
display_fonts, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ea52, 8)
display_fonts,  ---  CALL (ram, 0x401b10, 8)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x38, 8)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x38, 8)
display_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x38, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x0, 4) COPY (register, 0xa0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
display_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
display_fonts, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
display_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
display_fonts, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
display_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
display_fonts, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
display_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
display_fonts, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
display_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
display_fonts, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
display_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
display_fonts, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
display_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  RETURN (register, 0x288, 8)
display_fonts, (register, 0x38, 8) COPY (const, 0x4103e3, 8)
display_fonts, (register, 0x8, 8) COPY (const, 0x5, 8)
display_fonts, (register, 0x30, 8) COPY (register, 0x18, 8)
display_fonts, (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)
display_fonts,  ---  CBRANCH (ram, 0x40ea77, 8) , (unique, 0xd600, 1)
display_fonts, (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)
display_fonts, (unique, 0xae80, 8) COPY (register, 0x38, 8)
display_fonts, (unique, 0xaf00, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)
display_fonts, (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)
display_fonts, (unique, 0xb000, 8) INT_MULT (const, 0x2, 8) , (unique, 0xaf80, 8)
display_fonts, (register, 0x38, 8) INT_SUB (unique, 0xaf00, 8) , (unique, 0xb000, 8)
display_fonts, (unique, 0xa280, 8) COPY (register, 0x30, 8)
display_fonts, (unique, 0xa300, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)
display_fonts, (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)
display_fonts, (unique, 0xa400, 8) INT_MULT (const, 0x2, 8) , (unique, 0xa380, 8)
display_fonts, (register, 0x30, 8) INT_SUB (unique, 0xa300, 8) , (unique, 0xa400, 8)
display_fonts, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
display_fonts, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
display_fonts, (register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1)
display_fonts, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
display_fonts, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (unique, 0xa500, 1) , (unique, 0xb100, 1)
display_fonts, (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (unique, 0xa280, 8)
display_fonts, (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (unique, 0xae80, 8)
display_fonts, (unique, 0x28d00, 1) INT_SUB (unique, 0xa500, 1) , (unique, 0xb100, 1)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x28d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x28d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x12c00, 1) INT_AND (unique, 0x28d00, 1) , (const, 0xff, 1)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts,  ---  CBRANCH (ram, 0x40ea75, 8) , (register, 0x206, 1)
display_fonts, (register, 0xa0, 4) COPY (register, 0x0, 4)
display_fonts, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
display_fonts,  ---  CBRANCH (ram, 0x40ea39, 8) , (register, 0x206, 1)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ea81, 8)
display_fonts,  ---  CALL (ram, 0x401ad0, 8)
display_fonts, (register, 0x8, 8) COPY (ram, 0x613cf8, 8)
display_fonts, (register, 0x10, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
display_fonts, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x80, 8) COPY (register, 0x0, 8)
display_fonts, (register, 0x38, 8) COPY (register, 0x18, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ea9c, 8)
display_fonts,  ---  CALL (ram, 0x401830, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8)
display_fonts,  ---  CBRANCH (ram, 0x40f1b7, 8) , (register, 0x206, 1)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
display_fonts, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x41198b, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40eab7, 8)
display_fonts,  ---  CALL (ram, 0x4019a0, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40ee11, 8) , (unique, 0xc680, 1)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
display_fonts, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x4119a8, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40eacd, 8)
display_fonts,  ---  CALL (ram, 0x4019a0, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40eea6, 8) , (unique, 0xc680, 1)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
display_fonts, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x4119b4, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40eae3, 8)
display_fonts,  ---  CALL (ram, 0x4019a0, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40ecb4, 8) , (unique, 0xc680, 1)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
display_fonts, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x4119be, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40eaf9, 8)
display_fonts,  ---  CALL (ram, 0x4019a0, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40eb51, 8) , (unique, 0xc680, 1)
display_fonts, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
display_fonts, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x58, 1)
display_fonts, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x58, 1)
display_fonts, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
display_fonts, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x58, 1)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0xa0, 8) COPY (const, 0x1, 8)
display_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40ea52, 8) , (unique, 0xc680, 1)
display_fonts, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)
display_fonts, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
display_fonts, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
display_fonts, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40ea52, 8) , (unique, 0xc680, 1)
display_fonts, (register, 0x8, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0x10, 8) COPY (const, 0x42, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x1, 8)
display_fonts, (register, 0x38, 8) COPY (const, 0x411948, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40eb31, 8)
display_fonts,  ---  CALL (ram, 0x401ab0, 8)
display_fonts, (register, 0x8, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0x10, 8) COPY (const, 0x12, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x1, 8)
display_fonts, (register, 0x38, 8) COPY (const, 0x4119c7, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40eb4c, 8)
display_fonts,  ---  CALL (ram, 0x401ab0, 8)
display_fonts,  ---  BRANCH (ram, 0x40ea52, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
display_fonts, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40eb5a, 8)
display_fonts,  ---  CALL (ram, 0x401840, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
display_fonts, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
display_fonts, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8)
display_fonts,  ---  CBRANCH (ram, 0x40f24a, 8) , (register, 0x206, 1)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x4a0, 8)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x4a0, 8)
display_fonts, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x4a0, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
display_fonts, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x4a0, 8)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x4a0, 8)
display_fonts, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x4a0, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0xfffffffffffffb60, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40eb70, 8) , (unique, 0xc680, 1)
display_fonts, (register, 0x0, 4) COPY (register, 0x10, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x8, 8) COPY (ram, 0x613d00, 8)
display_fonts, (unique, 0xbe80, 1) COPY (const, 0x1, 1)
display_fonts, (unique, 0x51200, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x51200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x10, 4) INT_SRIGHT (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0xb0, 4) COPY (register, 0x10, 4)
display_fonts, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbc80, 4) COPY (register, 0x10, 4)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
display_fonts, (register, 0xb8, 4) COPY (register, 0x0, 4)
display_fonts, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
display_fonts, (register, 0x10, 8) COPY (const, 0x38, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x1, 8)
display_fonts, (register, 0x38, 8) COPY (const, 0x411908, 8)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ebb3, 8)
display_fonts,  ---  CALL (ram, 0x401ab0, 8)
display_fonts, (register, 0x0, 4) COPY (register, 0xb8, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x10, 4) COPY (register, 0xb0, 4)
display_fonts, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0xb0, 4)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0xb0, 4)
display_fonts, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0xb0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59200, 4) INT_AND (register, 0xb0, 4) , (register, 0xb0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts,  ---  CBRANCH (ram, 0x40ec77, 8) , (register, 0x206, 1)
display_fonts, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x0, 8) INT_SEXT (register, 0x0, 4)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
display_fonts, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x10, 8) , (const, 0x1, 8)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 8) , (const, 0x1, 8)
display_fonts, (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0xb0, 8) COPY (const, 0x24, 8)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbd80, 8) COPY (register, 0x18, 8)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8)
display_fonts, (register, 0x30, 8) COPY (unique, 0x3400, 8)
display_fonts, (register, 0xb8, 8) COPY (register, 0x8, 8)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8)
display_fonts, (register, 0xa0, 8) COPY (unique, 0x3400, 8)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
display_fonts, (register, 0x10, 8) COPY (unique, 0x3400, 8)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
display_fonts, (register, 0xa8, 8) COPY (unique, 0x3400, 8)
display_fonts, (unique, 0x53900, 4) INT_AND (const, 0x5, 4) , (const, 0x3f, 4)
display_fonts, (unique, 0x53980, 8) COPY (register, 0xa0, 8)
display_fonts, (register, 0xa0, 8) INT_LEFT (register, 0xa0, 8) , (unique, 0x53900, 4)
display_fonts, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
display_fonts, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
display_fonts, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
display_fonts, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
display_fonts, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
display_fonts, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x15580, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
display_fonts, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
display_fonts, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
display_fonts, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
display_fonts, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
display_fonts, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12f80, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
display_fonts, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
display_fonts, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
display_fonts, (unique, 0x13280, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
display_fonts, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
display_fonts, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
display_fonts, (unique, 0x13500, 8) INT_AND (register, 0xa0, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
display_fonts, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
display_fonts, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
display_fonts, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
display_fonts, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0xa0, 8) , (register, 0x8, 8)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0xa0, 8) , (register, 0x8, 8)
display_fonts, (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (register, 0x8, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0xa0, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x53900, 4) INT_AND (const, 0x5, 4) , (const, 0x3f, 4)
display_fonts, (unique, 0x53980, 8) COPY (register, 0xa8, 8)
display_fonts, (register, 0xa8, 8) INT_LEFT (register, 0xa8, 8) , (unique, 0x53900, 4)
display_fonts, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
display_fonts, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
display_fonts, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
display_fonts, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
display_fonts, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
display_fonts, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x15580, 1) INT_SLESS (register, 0xa8, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
display_fonts, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
display_fonts, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
display_fonts, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
display_fonts, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
display_fonts, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12f80, 1) INT_SLESS (register, 0xa8, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
display_fonts, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
display_fonts, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
display_fonts, (unique, 0x13280, 1) INT_EQUAL (register, 0xa8, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
display_fonts, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
display_fonts, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
display_fonts, (unique, 0x13500, 8) INT_AND (register, 0xa8, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
display_fonts, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
display_fonts, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
display_fonts, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
display_fonts, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
display_fonts, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
display_fonts, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
display_fonts, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0xb8, 8) , (const, 0x4a0, 8)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0xb8, 8) , (const, 0x4a0, 8)
display_fonts, (register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x4a0, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x38, 8) COPY (register, 0x18, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ec12, 8)
display_fonts,  ---  CALL (ram, 0x4018d0, 8)
display_fonts, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0x28, 8) COPY (register, 0x0, 8)
display_fonts, (register, 0x10, 8) COPY (register, 0x18, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x411999, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ec2b, 8)
display_fonts,  ---  CALL (ram, 0x401b10, 8)
display_fonts, (register, 0x30, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0x0, 4) COPY (register, 0xb0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x38, 8) COPY (const, 0x613cc0, 8)
display_fonts, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x28, 4)
display_fonts, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x28, 4)
display_fonts, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x28, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x28, 8) INT_SEXT (register, 0x0, 4)
display_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x613cc0, 8)
display_fonts, (unique, 0xbb00, 1) COPY (const, 0x0, 1)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbb00, 1)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ec4b, 8)
display_fonts,  ---  CALL (ram, 0x401970, 8)
display_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x613cc0, 8)
display_fonts, (unique, 0xbb00, 1) COPY (const, 0x20, 1)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbb00, 1)
display_fonts, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3d00, 8) INT_ADD (const, 0xfffffffffffffb60, 8) , (register, 0xb8, 8)
display_fonts, (unique, 0x3d80, 8) INT_MULT (register, 0xa8, 8) , (const, 0x1, 8)
display_fonts, (unique, 0x3e80, 8) INT_ADD (unique, 0x3d00, 8) , (unique, 0x3d80, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8)
display_fonts, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x41199e, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ec6d, 8)
display_fonts,  ---  CALL (ram, 0x401b10, 8)
display_fonts, (register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0xa0, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0xa0, 8)
display_fonts, (unique, 0x28700, 8) INT_SUB (register, 0xb8, 8) , (register, 0xa0, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40ec00, 8) , (unique, 0xc680, 1)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts,  ---  CBRANCH (ram, 0x40eafd, 8) , (register, 0x206, 1)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
display_fonts, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x41199d, 8)
display_fonts, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
display_fonts, (register, 0x10, 8) COPY (unique, 0x3400, 8)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
display_fonts, (register, 0x0, 8) COPY (unique, 0x3400, 8)
display_fonts, (unique, 0x53900, 4) INT_AND (const, 0x5, 4) , (const, 0x3f, 4)
display_fonts, (unique, 0x53980, 8) COPY (register, 0x0, 8)
display_fonts, (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53900, 4)
display_fonts, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
display_fonts, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
display_fonts, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
display_fonts, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
display_fonts, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
display_fonts, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x15580, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
display_fonts, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
display_fonts, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
display_fonts, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
display_fonts, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
display_fonts, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12f80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
display_fonts, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
display_fonts, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
display_fonts, (unique, 0x13280, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
display_fonts, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
display_fonts, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
display_fonts, (unique, 0x13500, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
display_fonts, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
display_fonts, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
display_fonts, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
display_fonts, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
display_fonts, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ecaf, 8)
display_fonts,  ---  CALL (ram, 0x401b10, 8)
display_fonts,  ---  BRANCH (ram, 0x40eafd, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
display_fonts, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ecbd, 8)
display_fonts,  ---  CALL (ram, 0x401b20, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
display_fonts, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
display_fonts, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
display_fonts,  ---  CBRANCH (ram, 0x40f22a, 8) , (register, 0x206, 1)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x480, 8)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x480, 8)
display_fonts, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x480, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
display_fonts, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x480, 8)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x480, 8)
display_fonts, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x480, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0xfffffffffffffb80, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40ecd8, 8) , (unique, 0xc680, 1)
display_fonts, (register, 0x0, 4) COPY (register, 0x10, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x8, 8) COPY (ram, 0x613d00, 8)
display_fonts, (unique, 0xbe80, 1) COPY (const, 0x1, 1)
display_fonts, (unique, 0x51200, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x51200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x10, 4) INT_SRIGHT (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0xb0, 4) COPY (register, 0x10, 4)
display_fonts, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x24, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbc80, 4) COPY (register, 0x10, 4)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
display_fonts, (register, 0xb8, 4) COPY (register, 0x0, 4)
display_fonts, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
display_fonts, (register, 0x10, 8) COPY (const, 0x31, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x1, 8)
display_fonts, (register, 0x38, 8) COPY (const, 0x4118d0, 8)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ed1b, 8)
display_fonts,  ---  CALL (ram, 0x401ab0, 8)
display_fonts, (register, 0x0, 4) COPY (register, 0xb8, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x10, 4) COPY (register, 0xb0, 4)
display_fonts, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0xb0, 4)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0xb0, 4)
display_fonts, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0xb0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59200, 4) INT_AND (register, 0xb0, 4) , (register, 0xb0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts,  ---  CBRANCH (ram, 0x40edd7, 8) , (register, 0x206, 1)
display_fonts, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x0, 8) INT_SEXT (register, 0x0, 4)
display_fonts, (unique, 0x3880, 8) INT_ADD (const, 0x9, 8) , (register, 0x10, 8)
display_fonts, (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8)
display_fonts, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
display_fonts, (register, 0xa0, 8) COPY (unique, 0x3a00, 8)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
display_fonts, (register, 0xa8, 8) COPY (unique, 0x3400, 8)
display_fonts, (register, 0xb0, 8) COPY (const, 0x24, 8)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbd80, 8) COPY (register, 0x18, 8)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
display_fonts, (unique, 0x53900, 4) INT_AND (const, 0x7, 4) , (const, 0x3f, 4)
display_fonts, (unique, 0x53980, 8) COPY (register, 0xa0, 8)
display_fonts, (register, 0xa0, 8) INT_LEFT (register, 0xa0, 8) , (unique, 0x53900, 4)
display_fonts, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
display_fonts, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
display_fonts, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
display_fonts, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
display_fonts, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
display_fonts, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x15580, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
display_fonts, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
display_fonts, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
display_fonts, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
display_fonts, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
display_fonts, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12f80, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
display_fonts, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
display_fonts, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
display_fonts, (unique, 0x13280, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
display_fonts, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
display_fonts, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
display_fonts, (unique, 0x13500, 8) INT_AND (register, 0xa0, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
display_fonts, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
display_fonts, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
display_fonts, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
display_fonts, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
display_fonts, (register, 0xb8, 8) COPY (register, 0x8, 8)
display_fonts, (unique, 0x53900, 4) INT_AND (const, 0x7, 4) , (const, 0x3f, 4)
display_fonts, (unique, 0x53980, 8) COPY (register, 0xa8, 8)
display_fonts, (register, 0xa8, 8) INT_LEFT (register, 0xa8, 8) , (unique, 0x53900, 4)
display_fonts, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
display_fonts, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
display_fonts, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
display_fonts, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
display_fonts, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
display_fonts, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x15580, 1) INT_SLESS (register, 0xa8, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
display_fonts, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
display_fonts, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
display_fonts, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
display_fonts, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
display_fonts, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12f80, 1) INT_SLESS (register, 0xa8, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
display_fonts, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
display_fonts, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
display_fonts, (unique, 0x13280, 1) INT_EQUAL (register, 0xa8, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
display_fonts, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
display_fonts, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
display_fonts, (unique, 0x13500, 8) INT_AND (register, 0xa8, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
display_fonts, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
display_fonts, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
display_fonts, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
display_fonts, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0xa0, 8) , (register, 0x8, 8)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0xa0, 8) , (register, 0x8, 8)
display_fonts, (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (register, 0x8, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0xa0, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
display_fonts, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0xb8, 8) , (const, 0x480, 8)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0xb8, 8) , (const, 0x480, 8)
display_fonts, (register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x480, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x38, 8) COPY (register, 0x18, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ed72, 8)
display_fonts,  ---  CALL (ram, 0x4018d0, 8)
display_fonts, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0x28, 8) COPY (register, 0x0, 8)
display_fonts, (register, 0x10, 8) COPY (register, 0x18, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x411999, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ed8b, 8)
display_fonts,  ---  CALL (ram, 0x401b10, 8)
display_fonts, (register, 0x30, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0x0, 4) COPY (register, 0xb0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x38, 8) COPY (const, 0x613cc0, 8)
display_fonts, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x28, 4)
display_fonts, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x28, 4)
display_fonts, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x28, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x28, 8) INT_SEXT (register, 0x0, 4)
display_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x613cc0, 8)
display_fonts, (unique, 0xbb00, 1) COPY (const, 0x0, 1)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbb00, 1)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40edab, 8)
display_fonts,  ---  CALL (ram, 0x401970, 8)
display_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x613cc0, 8)
display_fonts, (unique, 0xbb00, 1) COPY (const, 0x20, 1)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbb00, 1)
display_fonts, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3d00, 8) INT_ADD (const, 0xfffffffffffffb80, 8) , (register, 0xb8, 8)
display_fonts, (unique, 0x3d80, 8) INT_MULT (register, 0xa8, 8) , (const, 0x1, 8)
display_fonts, (unique, 0x3e80, 8) INT_ADD (unique, 0x3d00, 8) , (unique, 0x3d80, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8)
display_fonts, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x41199e, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40edcd, 8)
display_fonts,  ---  CALL (ram, 0x401b10, 8)
display_fonts, (register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0xa0, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0xa0, 8)
display_fonts, (unique, 0x28700, 8) INT_SUB (register, 0xb8, 8) , (register, 0xa0, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40ed60, 8) , (unique, 0xc680, 1)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
display_fonts, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts,  ---  CBRANCH (ram, 0x40eaeb, 8) , (register, 0x206, 1)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x24, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x41199d, 8)
display_fonts, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
display_fonts, (register, 0x0, 8) COPY (unique, 0x3400, 8)
display_fonts, (unique, 0x53900, 4) INT_AND (const, 0x7, 4) , (const, 0x3f, 4)
display_fonts, (unique, 0x53980, 8) COPY (register, 0x0, 8)
display_fonts, (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53900, 4)
display_fonts, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
display_fonts, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
display_fonts, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
display_fonts, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
display_fonts, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
display_fonts, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x15580, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
display_fonts, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
display_fonts, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
display_fonts, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
display_fonts, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
display_fonts, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12f80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
display_fonts, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
display_fonts, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
display_fonts, (unique, 0x13280, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
display_fonts, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
display_fonts, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
display_fonts, (unique, 0x13500, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
display_fonts, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
display_fonts, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
display_fonts, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
display_fonts, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
display_fonts, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ee0c, 8)
display_fonts,  ---  CALL (ram, 0x401b10, 8)
display_fonts,  ---  BRANCH (ram, 0x40eaeb, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
display_fonts, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ee1a, 8)
display_fonts,  ---  CALL (ram, 0x401710, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
display_fonts, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
display_fonts, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0xb0, 8) COPY (register, 0x0, 8)
display_fonts,  ---  CBRANCH (ram, 0x40f20a, 8) , (register, 0x206, 1)
display_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x230, 8)
display_fonts, (register, 0x0, 8) COPY (unique, 0x3200, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
display_fonts, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x10, 8) COPY (register, 0x0, 8)
display_fonts, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
display_fonts, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
display_fonts, (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0xfffffffffffffff8, 8)
display_fonts, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
display_fonts, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x1, 4)
display_fonts, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x1, 4)
display_fonts, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
display_fonts, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x1, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1)
display_fonts, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (const, 0xffffffff, 4)
display_fonts, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (const, 0xffffffff, 4)
display_fonts, (unique, 0x12800, 4) INT_SUB (register, 0x28, 4) , (const, 0xffffffff, 4)
display_fonts, (unique, 0x12880, 1) INT_LESS (unique, 0x12800, 4) , (unique, 0x12600, 4)
display_fonts, (register, 0x200, 1) BOOL_OR (register, 0x200, 1) , (unique, 0x12880, 1)
display_fonts, (unique, 0x12980, 1) INT_SBORROW (unique, 0x12800, 4) , (unique, 0x12600, 4)
display_fonts, (register, 0x20b, 1) BOOL_XOR (register, 0x20b, 1) , (unique, 0x12980, 1)
display_fonts, (register, 0x28, 4) INT_SUB (unique, 0x12800, 4) , (unique, 0x12600, 4)
display_fonts, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x10, 8) , (const, 0x230, 8)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 8) , (const, 0x230, 8)
display_fonts, (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x230, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x10, 8) , (const, 0xfffffffffffffdd0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40ee38, 8) , (unique, 0xc680, 1)
display_fonts, (register, 0x8, 4) COPY (register, 0x28, 4)
display_fonts, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
display_fonts, (unique, 0xbe80, 1) COPY (const, 0x1, 1)
display_fonts, (unique, 0x51200, 4) INT_AND (register, 0x28, 4) , (const, 0x1, 4)
display_fonts, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x51200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x28, 4) INT_SRIGHT (register, 0x28, 4) , (const, 0x1, 4)
display_fonts, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0xb8, 4) INT_XOR (register, 0xb8, 4) , (register, 0xb8, 4)
display_fonts, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0xb8, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0xb8, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)
display_fonts, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x30, 4) COPY (register, 0x28, 4)
display_fonts, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbc80, 4) COPY (register, 0x28, 4)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
display_fonts, (register, 0x38, 4) COPY (register, 0x8, 4)
display_fonts, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x24, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbc80, 4) COPY (register, 0x8, 4)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0xa8, 4) INT_XOR (register, 0xa8, 4) , (register, 0xa8, 4)
display_fonts, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0xa8, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0xa8, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x8, 8) COPY (const, 0xffffffff, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
display_fonts, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x30, 4) , (register, 0x38, 4)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x30, 4) , (register, 0x38, 4)
display_fonts, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (register, 0x38, 4)
display_fonts, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts,  ---  BRANCH (ram, 0x40ee95, 8)
display_fonts, (register, 0x200, 1) INT_LESS (register, 0x30, 4) , (register, 0x8, 4)
display_fonts, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 4) , (register, 0x8, 4)
display_fonts, (unique, 0x28600, 4) INT_SUB (register, 0x30, 4) , (register, 0x8, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
display_fonts, (unique, 0x27780, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40ee7e, 8) , (unique, 0x27780, 1)
display_fonts, (register, 0xb8, 4) COPY (register, 0x10, 4)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x230, 8)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x230, 8)
display_fonts, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x230, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0xfffffffffffffdd0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts,  ---  CBRANCH (ram, 0x40f068, 8) , (register, 0x206, 1)
display_fonts, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xfffffffffffffff8, 8)
display_fonts, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
display_fonts, (register, 0x28, 4) COPY (unique, 0xbc80, 4)
display_fonts, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts,  ---  CBRANCH (ram, 0x40ee7e, 8) , (register, 0x206, 1)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (const, 0x1, 4)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 4) , (const, 0x1, 4)
display_fonts, (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
display_fonts, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40ee78, 8) , (unique, 0xc680, 1)
display_fonts, (register, 0xa8, 4) COPY (register, 0x10, 4)
display_fonts, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
display_fonts,  ---  BRANCH (ram, 0x40ee7e, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
display_fonts, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40eeaf, 8)
display_fonts,  ---  CALL (ram, 0x401980, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
display_fonts, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
display_fonts, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x28, 8) COPY (register, 0x0, 8)
display_fonts,  ---  CBRANCH (ram, 0x40f28a, 8) , (register, 0x206, 1)
display_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x160, 8)
display_fonts, (register, 0x0, 8) COPY (unique, 0x3200, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
display_fonts, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x160, 8)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x160, 8)
display_fonts, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x160, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
display_fonts, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0xfffffffffffffea0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40eec8, 8) , (unique, 0xc680, 1)
display_fonts, (register, 0x10, 8) INT_SEXT (register, 0x10, 4)
display_fonts, (unique, 0x3680, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8)
display_fonts, (register, 0xa0, 8) COPY (unique, 0x3680, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
display_fonts, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x4119a2, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40eef4, 8)
display_fonts,  ---  CALL (ram, 0x4019a0, 8)
display_fonts, (register, 0x38, 8) COPY (register, 0xa0, 8)
display_fonts, (register, 0xa8, 4) COPY (register, 0x0, 4)
display_fonts, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40eeff, 8)
display_fonts,  ---  CALL (ram, 0x410290, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
display_fonts, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
display_fonts, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
display_fonts,  ---  CBRANCH (ram, 0x40f26a, 8) , (register, 0x206, 1)
display_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0x160, 8)
display_fonts, (register, 0x10, 8) COPY (unique, 0x3200, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
display_fonts, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
display_fonts, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x38, 8) COPY (register, 0x0, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59200, 4) INT_AND (register, 0xa8, 4) , (register, 0xa8, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40ef31, 8) , (unique, 0xc680, 1)
display_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x10, 8) , (const, 0xfffffffffffffea8, 8)
display_fonts, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (register, 0x80, 4) COPY (unique, 0xbc80, 4)
display_fonts, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts,  ---  CBRANCH (ram, 0x40ef3a, 8) , (register, 0x206, 1)
display_fonts, (register, 0x0, 8) INT_SEXT (register, 0x30, 4)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x30, 4) , (const, 0x1, 4)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x1, 4)
display_fonts, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
display_fonts, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8)
display_fonts, (unique, 0xbc80, 4) COPY (register, 0x8, 4)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x10, 8) , (const, 0x160, 8)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 8) , (const, 0x160, 8)
display_fonts, (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x160, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (const, 0x1, 4)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x8, 4) , (const, 0x1, 4)
display_fonts, (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
display_fonts, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x10, 8) , (const, 0xfffffffffffffea0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40ef20, 8) , (unique, 0xc680, 1)
display_fonts, (register, 0x0, 4) COPY (register, 0x30, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x8, 8) COPY (ram, 0x613d00, 8)
display_fonts, (unique, 0xbe80, 1) COPY (const, 0x1, 1)
display_fonts, (unique, 0x51200, 4) INT_AND (register, 0x30, 4) , (const, 0x1, 4)
display_fonts, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x51200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x30, 4) INT_SRIGHT (register, 0x30, 4) , (const, 0x1, 4)
display_fonts, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0xb0, 4) COPY (register, 0x30, 4)
display_fonts, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x24, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbc80, 4) COPY (register, 0x30, 4)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
display_fonts, (register, 0xa8, 4) COPY (register, 0x0, 4)
display_fonts, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
display_fonts, (register, 0x10, 8) COPY (const, 0x37, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x1, 8)
display_fonts, (register, 0x38, 8) COPY (const, 0x411898, 8)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0xa8, 4) , (register, 0xb0, 4)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0xa8, 4) , (register, 0xb0, 4)
display_fonts, (register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (register, 0xb0, 4)
display_fonts, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0xa8, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0xa8, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ef81, 8)
display_fonts,  ---  CALL (ram, 0x401ab0, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59200, 4) INT_AND (register, 0xb0, 4) , (register, 0xb0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
display_fonts, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
display_fonts,  ---  CBRANCH (ram, 0x40f292, 8) , (unique, 0xce80, 1)
display_fonts, (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0xffffffffffffffff, 8)
display_fonts, (register, 0x0, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0xa8, 8) INT_SEXT (register, 0xa8, 4)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbd80, 8) COPY (register, 0x18, 8)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
display_fonts, (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)
display_fonts, (unique, 0x3580, 8) INT_ADD (const, 0x4, 8) , (unique, 0x3480, 8)
display_fonts, (register, 0x0, 8) COPY (unique, 0x3580, 8)
display_fonts, (register, 0xb8, 8) COPY (register, 0x8, 8)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (register, 0x8, 8)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (register, 0x8, 8)
display_fonts, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x8, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0xb0, 8) COPY (register, 0x0, 8)
display_fonts, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
display_fonts, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
display_fonts, (register, 0x10, 8) COPY (unique, 0x3400, 8)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
display_fonts, (register, 0x0, 8) COPY (unique, 0x3400, 8)
display_fonts, (unique, 0x53900, 4) INT_AND (const, 0x5, 4) , (const, 0x3f, 4)
display_fonts, (unique, 0x53980, 8) COPY (register, 0x0, 8)
display_fonts, (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53900, 4)
display_fonts, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
display_fonts, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
display_fonts, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
display_fonts, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
display_fonts, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
display_fonts, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x15580, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
display_fonts, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
display_fonts, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
display_fonts, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
display_fonts, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
display_fonts, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12f80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
display_fonts, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
display_fonts, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
display_fonts, (unique, 0x13280, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
display_fonts, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
display_fonts, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
display_fonts, (unique, 0x13500, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
display_fonts, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
display_fonts, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
display_fonts, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
display_fonts, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
display_fonts, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
display_fonts, (unique, 0x3b80, 8) INT_ADD (register, 0x28, 8) , (unique, 0x3a80, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8)
display_fonts, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x38, 8) COPY (register, 0x18, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40efcc, 8)
display_fonts,  ---  CALL (ram, 0x4018d0, 8)
display_fonts, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0xa0, 8) COPY (register, 0x0, 8)
display_fonts, (register, 0x10, 8) COPY (register, 0x18, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x411999, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40efe5, 8)
display_fonts,  ---  CALL (ram, 0x401b10, 8)
display_fonts, (register, 0x30, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0x0, 8) COPY (const, 0x24, 8)
display_fonts, (register, 0x38, 8) COPY (const, 0x613cc0, 8)
display_fonts, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0xa0, 4)
display_fonts, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0xa0, 4)
display_fonts, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0xa0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0xa0, 8) INT_SEXT (register, 0x0, 4)
display_fonts, (unique, 0x3c80, 8) INT_ADD (const, 0x613cc0, 8) , (register, 0xa0, 8)
display_fonts, (unique, 0xbb00, 1) COPY (const, 0x0, 1)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbb00, 1)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f00a, 8)
display_fonts,  ---  CALL (ram, 0x401970, 8)
display_fonts, (unique, 0x3c80, 8) INT_ADD (const, 0x613cc0, 8) , (register, 0xa0, 8)
display_fonts, (unique, 0xbb00, 1) COPY (const, 0x20, 1)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbb00, 1)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0xa8, 8) , (const, 0x4, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0xb8, 8) , (unique, 0x3300, 8)
display_fonts, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
display_fonts, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
display_fonts, (register, 0x30, 8) COPY (const, 0x41199e, 8)
display_fonts, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0xb8, 8) , (const, 0x4, 8)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0xb8, 8) , (const, 0x4, 8)
display_fonts, (register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x4, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
display_fonts, (register, 0x10, 8) COPY (unique, 0x3400, 8)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
display_fonts, (register, 0x0, 8) COPY (unique, 0x3400, 8)
display_fonts, (unique, 0x53900, 4) INT_AND (const, 0x5, 4) , (const, 0x3f, 4)
display_fonts, (unique, 0x53980, 8) COPY (register, 0x0, 8)
display_fonts, (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53900, 4)
display_fonts, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
display_fonts, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
display_fonts, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
display_fonts, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
display_fonts, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
display_fonts, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x15580, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
display_fonts, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
display_fonts, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
display_fonts, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
display_fonts, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
display_fonts, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12f80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
display_fonts, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
display_fonts, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
display_fonts, (unique, 0x13280, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
display_fonts, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
display_fonts, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
display_fonts, (unique, 0x13500, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
display_fonts, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
display_fonts, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
display_fonts, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
display_fonts, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
display_fonts, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
display_fonts, (unique, 0x3b80, 8) INT_ADD (register, 0x28, 8) , (unique, 0x3a80, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8)
display_fonts, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f03f, 8)
display_fonts,  ---  CALL (ram, 0x401b10, 8)
display_fonts, (register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0xb0, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0xb0, 8)
display_fonts, (unique, 0x28700, 8) INT_SUB (register, 0xb8, 8) , (register, 0xb0, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40efb0, 8) , (unique, 0xc680, 1)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
display_fonts, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40f1d3, 8) , (unique, 0xc680, 1)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f063, 8)
display_fonts,  ---  CALL (ram, 0x4018a0, 8)
display_fonts,  ---  BRANCH (ram, 0x40ead5, 8)
display_fonts, (register, 0x8, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0x10, 8) COPY (const, 0x3c, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x1, 8)
display_fonts, (register, 0x38, 8) COPY (const, 0x411858, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f083, 8)
display_fonts,  ---  CALL (ram, 0x401ab0, 8)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
display_fonts, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
display_fonts,  ---  CBRANCH (ram, 0x40f183, 8) , (unique, 0xce80, 1)
display_fonts, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
display_fonts, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
display_fonts, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbd80, 8) COPY (register, 0x18, 8)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
display_fonts, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
display_fonts, (register, 0x18, 8) COPY (register, 0xb0, 8)
display_fonts, (register, 0x88, 8) INT_SEXT (register, 0xa8, 4)
display_fonts, (unique, 0x37380, 16) INT_SEXT (register, 0x88, 8)
display_fonts, (unique, 0x37400, 16) INT_SEXT (const, 0x230, 4)
display_fonts, (unique, 0x37500, 16) INT_MULT (unique, 0x37380, 16) , (unique, 0x37400, 16)
display_fonts, (unique, 0x37580, 8) INT_SEXT (const, 0x230, 4)
display_fonts, (register, 0xa0, 8) INT_MULT (register, 0x88, 8) , (unique, 0x37580, 8)
display_fonts, (unique, 0x37700, 8) SUBPIECE (unique, 0x37500, 16) , (const, 0x8, 4)
display_fonts, (unique, 0x13b80, 16) INT_SEXT (register, 0xa0, 8)
display_fonts, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x13b80, 16) , (unique, 0x37500, 16)
display_fonts, (register, 0x20b, 1) COPY (register, 0x200, 1)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0xa0, 8) , (const, 0x1, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
display_fonts, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x38, 8) COPY (register, 0x10, 8)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f0bb, 8)
display_fonts,  ---  CALL (ram, 0x4018d0, 8)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0xb0, 8) COPY (register, 0x0, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x411999, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f0d6, 8)
display_fonts,  ---  CALL (ram, 0x401b10, 8)
display_fonts, (register, 0x30, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0x0, 8) COPY (const, 0x24, 8)
display_fonts, (register, 0x38, 8) COPY (const, 0x613cc0, 8)
display_fonts, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0xb0, 4)
display_fonts, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0xb0, 4)
display_fonts, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0xb0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0xb0, 8) INT_SEXT (register, 0x0, 4)
display_fonts, (unique, 0x3200, 8) INT_ADD (register, 0xb0, 8) , (const, 0x613cc0, 8)
display_fonts, (unique, 0xbb00, 1) COPY (const, 0x0, 1)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbb00, 1)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f0fa, 8)
display_fonts,  ---  CALL (ram, 0x401970, 8)
display_fonts, (unique, 0x3200, 8) INT_ADD (register, 0xb0, 8) , (const, 0x613cc0, 8)
display_fonts, (unique, 0xbb00, 1) COPY (const, 0x20, 1)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbb00, 1)
display_fonts, (register, 0xb0, 8) INT_SEXT (register, 0xb8, 4)
display_fonts, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_fonts, (unique, 0x37380, 16) INT_SEXT (register, 0xb0, 8)
display_fonts, (unique, 0x37400, 16) INT_SEXT (const, 0x230, 4)
display_fonts, (unique, 0x37500, 16) INT_MULT (unique, 0x37380, 16) , (unique, 0x37400, 16)
display_fonts, (unique, 0x37580, 8) INT_SEXT (const, 0x230, 4)
display_fonts, (register, 0xb0, 8) INT_MULT (register, 0xb0, 8) , (unique, 0x37580, 8)
display_fonts, (unique, 0x37700, 8) SUBPIECE (unique, 0x37500, 16) , (const, 0x8, 4)
display_fonts, (unique, 0x13b80, 16) INT_SEXT (register, 0xb0, 8)
display_fonts, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x13b80, 16) , (unique, 0x37500, 16)
display_fonts, (register, 0x20b, 1) COPY (register, 0x200, 1)
display_fonts, (register, 0x30, 8) COPY (const, 0x41199e, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0xb0, 8) , (const, 0x1, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
display_fonts, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f123, 8)
display_fonts,  ---  CALL (ram, 0x401b10, 8)
display_fonts, (unique, 0x3d00, 8) INT_ADD (const, 0x458, 8) , (register, 0x18, 8)
display_fonts, (unique, 0x3d80, 8) INT_MULT (register, 0xa0, 8) , (const, 0x1, 8)
display_fonts, (unique, 0x3e80, 8) INT_ADD (unique, 0x3d00, 8) , (unique, 0x3d80, 8)
display_fonts, (register, 0x0, 8) COPY (unique, 0x3e80, 8)
display_fonts, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
display_fonts, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x230, 8)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x230, 8)
display_fonts, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x230, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0xfffffffffffffdd0, 8)
display_fonts, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (register, 0x98, 4) COPY (unique, 0xbc80, 4)
display_fonts, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0xa8, 4) , (const, 0x1, 4)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0xa8, 4) , (const, 0x1, 4)
display_fonts, (register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0x1, 4)
display_fonts, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0xa8, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0xa8, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts,  ---  CBRANCH (ram, 0x40f130, 8) , (register, 0x206, 1)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
display_fonts, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (unique, 0x5200, 4)
display_fonts, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (unique, 0x5200, 4)
display_fonts, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (unique, 0x28b00, 4) INT_SUB (register, 0x28, 4) , (unique, 0x5200, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x28b00, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x28b00, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x28b00, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xcd00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
display_fonts,  ---  CBRANCH (ram, 0x40f16e, 8) , (unique, 0xcd00, 1)
display_fonts, (unique, 0x3d00, 8) INT_ADD (const, 0x458, 8) , (register, 0x18, 8)
display_fonts, (unique, 0x3d80, 8) INT_MULT (register, 0xb0, 8) , (const, 0x1, 8)
display_fonts, (unique, 0x3e80, 8) INT_ADD (unique, 0x3d00, 8) , (unique, 0x3d80, 8)
display_fonts, (register, 0x0, 8) COPY (unique, 0x3e80, 8)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x230, 8)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x230, 8)
display_fonts, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x230, 8)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0xfffffffffffffdd0, 8)
display_fonts, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_fonts, (register, 0x90, 4) COPY (unique, 0xbc80, 4)
display_fonts, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0xb8, 4) , (const, 0x1, 4)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0xb8, 4) , (const, 0x1, 4)
display_fonts, (register, 0xb8, 4) INT_ADD (register, 0xb8, 4) , (const, 0x1, 4)
display_fonts, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0xb8, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0xb8, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts,  ---  CBRANCH (ram, 0x40f158, 8) , (register, 0x206, 1)
display_fonts, (register, 0x200, 1) INT_CARRY (register, 0x28, 4) , (const, 0x1, 4)
display_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x1, 4)
display_fonts, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
display_fonts, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
display_fonts, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (unique, 0x5200, 4)
display_fonts, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 4) , (unique, 0x5200, 4)
display_fonts, (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (unique, 0x28b00, 4) INT_SUB (register, 0x28, 4) , (unique, 0x5200, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x28b00, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x28b00, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x28b00, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_fonts,  ---  CBRANCH (ram, 0x40f0a0, 8) , (unique, 0xc680, 1)
display_fonts, (register, 0xb0, 8) COPY (register, 0x18, 8)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x18, 8) COPY (unique, 0xbd80, 8)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x24, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x88, 4) COPY (unique, 0xbc80, 4)
display_fonts, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts,  ---  CBRANCH (ram, 0x40eabf, 8) , (register, 0x206, 1)
display_fonts, (register, 0x0, 8) INT_SEXT (register, 0xa8, 4)
display_fonts, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x41199d, 8)
display_fonts, (unique, 0x37380, 16) INT_SEXT (register, 0x0, 8)
display_fonts, (unique, 0x37400, 16) INT_SEXT (const, 0x230, 4)
display_fonts, (unique, 0x37500, 16) INT_MULT (unique, 0x37380, 16) , (unique, 0x37400, 16)
display_fonts, (unique, 0x37580, 8) INT_SEXT (const, 0x230, 4)
display_fonts, (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (unique, 0x37580, 8)
display_fonts, (unique, 0x37700, 8) SUBPIECE (unique, 0x37500, 16) , (const, 0x8, 4)
display_fonts, (unique, 0x13b80, 16) INT_SEXT (register, 0x0, 8)
display_fonts, (register, 0x200, 1) INT_NOTEQUAL (unique, 0x13b80, 16) , (unique, 0x37500, 16)
display_fonts, (register, 0x20b, 1) COPY (register, 0x200, 1)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3300, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
display_fonts, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f1b2, 8)
display_fonts,  ---  CALL (ram, 0x401b10, 8)
display_fonts,  ---  BRANCH (ram, 0x40eabf, 8)
display_fonts, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
display_fonts, (register, 0x8, 8) COPY (register, 0x18, 8)
display_fonts, (register, 0x10, 8) COPY (register, 0xa8, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x411818, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f1ce, 8)
display_fonts,  ---  CALL (ram, 0x401b10, 8)
display_fonts,  ---  BRANCH (ram, 0x40ea52, 8)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x24, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_fonts, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x41199d, 8)
display_fonts, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)
display_fonts, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
display_fonts, (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
display_fonts, (register, 0x10, 8) COPY (unique, 0x3400, 8)
display_fonts, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8)
display_fonts, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
display_fonts, (register, 0x0, 8) COPY (unique, 0x3400, 8)
display_fonts, (unique, 0x53900, 4) INT_AND (const, 0x5, 4) , (const, 0x3f, 4)
display_fonts, (unique, 0x53980, 8) COPY (register, 0x0, 8)
display_fonts, (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53900, 4)
display_fonts, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
display_fonts, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
display_fonts, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
display_fonts, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
display_fonts, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
display_fonts, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
display_fonts, (unique, 0x15580, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
display_fonts, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
display_fonts, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
display_fonts, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
display_fonts, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
display_fonts, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12f80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
display_fonts, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
display_fonts, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
display_fonts, (unique, 0x13280, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
display_fonts, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
display_fonts, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
display_fonts, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
display_fonts, (unique, 0x13500, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
display_fonts, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
display_fonts, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
display_fonts, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
display_fonts, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_fonts, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
display_fonts, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
display_fonts, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
display_fonts, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
display_fonts, (unique, 0x3b80, 8) INT_ADD (register, 0x28, 8) , (unique, 0x3a80, 8)
display_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8)
display_fonts, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f205, 8)
display_fonts,  ---  CALL (ram, 0x401b10, 8)
display_fonts,  ---  BRANCH (ram, 0x40f059, 8)
display_fonts, (register, 0x8, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0x10, 8) COPY (const, 0x3c, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x1, 8)
display_fonts, (register, 0x38, 8) COPY (const, 0x411858, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f225, 8)
display_fonts,  ---  CALL (ram, 0x401ab0, 8)
display_fonts,  ---  BRANCH (ram, 0x40eabf, 8)
display_fonts, (register, 0x8, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0x10, 8) COPY (const, 0x31, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x1, 8)
display_fonts, (register, 0x38, 8) COPY (const, 0x4118d0, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f245, 8)
display_fonts,  ---  CALL (ram, 0x401ab0, 8)
display_fonts,  ---  BRANCH (ram, 0x40eaeb, 8)
display_fonts, (register, 0x8, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0x10, 8) COPY (const, 0x38, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x1, 8)
display_fonts, (register, 0x38, 8) COPY (const, 0x411908, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f265, 8)
display_fonts,  ---  CALL (ram, 0x401ab0, 8)
display_fonts,  ---  BRANCH (ram, 0x40eafd, 8)
display_fonts, (register, 0x8, 8) COPY (ram, 0x613d00, 8)
display_fonts, (register, 0x10, 8) COPY (const, 0x37, 8)
display_fonts, (register, 0x30, 8) COPY (const, 0x1, 8)
display_fonts, (register, 0x38, 8) COPY (const, 0x411898, 8)
display_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f285, 8)
display_fonts,  ---  CALL (ram, 0x401ab0, 8)
display_fonts,  ---  BRANCH (ram, 0x40f059, 8)
display_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_fonts, (register, 0xa0, 4) INT_XOR (register, 0xa0, 4) , (register, 0xa0, 4)
display_fonts, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
display_fonts, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
display_fonts, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
display_fonts, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
display_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_fonts,  ---  BRANCH (ram, 0x40eee6, 8)
display_fonts, (unique, 0x3800, 8) INT_ADD (const, 0x24, 8) , (register, 0x20, 8)
display_fonts, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
display_fonts,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
display_fonts,  ---  BRANCH (ram, 0x40f04d, 8)
list_fonts, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
list_fonts, (register, 0xb0, 8) COPY (register, 0x30, 8)
list_fonts, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
list_fonts, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
list_fonts, (register, 0xa0, 8) COPY (register, 0x38, 8)
list_fonts, (unique, 0xe780, 8) COPY (register, 0x28, 8)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
list_fonts, (unique, 0xe780, 8) COPY (register, 0x18, 8)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
list_fonts, (register, 0x18, 8) COPY (const, 0x613c40, 8)
list_fonts,  ---  BRANCH (ram, 0x40f2ca, 8)
list_fonts, (register, 0x38, 8) COPY (register, 0xa0, 8)
list_fonts, (register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x8, 8)
list_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x8, 8)
list_fonts, (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)
list_fonts, (register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)
list_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)
list_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f2c4, 8)
list_fonts,  ---  CALL (ram, 0x401a00, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
list_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
list_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (register, 0x28, 4) COPY (register, 0x0, 4)
list_fonts, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
list_fonts,  ---  CBRANCH (ram, 0x40f300, 8) , (register, 0x206, 1)
list_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
list_fonts, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (unique, 0x59300, 8) INT_AND (register, 0x30, 8) , (register, 0x30, 8)
list_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
list_fonts,  ---  CBRANCH (ram, 0x40f2b8, 8) , (unique, 0xc680, 1)
list_fonts, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
list_fonts, (register, 0x8, 8) COPY (register, 0xa0, 8)
list_fonts, (register, 0x10, 8) COPY (register, 0xb0, 8)
list_fonts, (register, 0x30, 8) COPY (const, 0x411818, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
list_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
list_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
list_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
list_fonts, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
list_fonts, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
list_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f2ed, 8)
list_fonts,  ---  CALL (ram, 0x401b10, 8)
list_fonts, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
list_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
list_fonts, (register, 0x0, 4) COPY (register, 0x28, 4)
list_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
list_fonts, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
list_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
list_fonts, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
list_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
list_fonts, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
list_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
list_fonts, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
list_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
list_fonts, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
list_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  RETURN (register, 0x288, 8)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f305, 8)
list_fonts,  ---  CALL (ram, 0x401ad0, 8)
list_fonts, (register, 0x8, 8) COPY (ram, 0x613cf8, 8)
list_fonts, (register, 0x10, 8) COPY (ram, 0x613d00, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)
list_fonts, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
list_fonts, (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
list_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (register, 0x80, 8) COPY (register, 0x0, 8)
list_fonts, (register, 0x38, 8) COPY (register, 0xa0, 8)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f320, 8)
list_fonts,  ---  CALL (ram, 0x401830, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
list_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (register, 0xa8, 8) COPY (register, 0x0, 8)
list_fonts,  ---  CBRANCH (ram, 0x40f4f3, 8) , (register, 0x206, 1)
list_fonts, (register, 0x30, 8) COPY (const, 0x41198b, 8)
list_fonts, (register, 0x38, 8) COPY (register, 0xa8, 8)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f339, 8)
list_fonts,  ---  CALL (ram, 0x4019a0, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
list_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
list_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
list_fonts,  ---  CBRANCH (ram, 0x40f4a0, 8) , (unique, 0xc680, 1)
list_fonts, (register, 0x30, 8) COPY (const, 0x4119a8, 8)
list_fonts, (register, 0x38, 8) COPY (register, 0xa8, 8)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f34e, 8)
list_fonts,  ---  CALL (ram, 0x4019a0, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
list_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
list_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
list_fonts,  ---  CBRANCH (ram, 0x40f430, 8) , (unique, 0xc680, 1)
list_fonts, (register, 0x30, 8) COPY (const, 0x4119b4, 8)
list_fonts, (register, 0x38, 8) COPY (register, 0xa8, 8)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f363, 8)
list_fonts,  ---  CALL (ram, 0x4019a0, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
list_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
list_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
list_fonts,  ---  CBRANCH (ram, 0x40f3e0, 8) , (unique, 0xc680, 1)
list_fonts, (register, 0x30, 8) COPY (const, 0x4119be, 8)
list_fonts, (register, 0x38, 8) COPY (register, 0xa8, 8)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f374, 8)
list_fonts,  ---  CALL (ram, 0x4019a0, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
list_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
list_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
list_fonts,  ---  CBRANCH (ram, 0x40f390, 8) , (unique, 0xc680, 1)
list_fonts, (register, 0x28, 8) COPY (const, 0x1, 8)
list_fonts, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
list_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
list_fonts, (register, 0x0, 4) COPY (register, 0x28, 4)
list_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
list_fonts, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
list_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
list_fonts, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
list_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
list_fonts, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
list_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
list_fonts, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
list_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
list_fonts, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
list_fonts, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  RETURN (register, 0x288, 8)
list_fonts, (register, 0x38, 8) COPY (register, 0xa8, 8)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f398, 8)
list_fonts,  ---  CALL (ram, 0x401840, 8)
list_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
list_fonts, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (unique, 0x59300, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)
list_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts,  ---  CBRANCH (ram, 0x40f378, 8) , (register, 0x206, 1)
list_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x4a0, 8)
list_fonts, (register, 0x18, 8) COPY (unique, 0x3200, 8)
list_fonts, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
list_fonts, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
list_fonts, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
list_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
list_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
list_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x4a0, 8)
list_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x4a0, 8)
list_fonts, (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x4a0, 8)
list_fonts, (register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)
list_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)
list_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (register, 0x30, 8) COPY (const, 0x41199e, 8)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f3ca, 8)
list_fonts,  ---  CALL (ram, 0x401b10, 8)
list_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xfffffffffffffb60, 8)
list_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
list_fonts, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (unique, 0x59300, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)
list_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
list_fonts,  ---  CBRANCH (ram, 0x40f3b0, 8) , (unique, 0xc680, 1)
list_fonts,  ---  BRANCH (ram, 0x40f378, 8)
list_fonts, (register, 0x38, 8) COPY (register, 0xa8, 8)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f3e8, 8)
list_fonts,  ---  CALL (ram, 0x401b20, 8)
list_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
list_fonts, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (unique, 0x59300, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)
list_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts,  ---  CBRANCH (ram, 0x40f367, 8) , (register, 0x206, 1)
list_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x480, 8)
list_fonts, (register, 0x18, 8) COPY (unique, 0x3200, 8)
list_fonts, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
list_fonts, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
list_fonts, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
list_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
list_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
list_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x480, 8)
list_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x480, 8)
list_fonts, (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x480, 8)
list_fonts, (register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)
list_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)
list_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (register, 0x30, 8) COPY (const, 0x41199e, 8)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f41a, 8)
list_fonts,  ---  CALL (ram, 0x401b10, 8)
list_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xfffffffffffffb80, 8)
list_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
list_fonts, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (unique, 0x59300, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)
list_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
list_fonts,  ---  CBRANCH (ram, 0x40f400, 8) , (unique, 0xc680, 1)
list_fonts,  ---  BRANCH (ram, 0x40f367, 8)
list_fonts, (register, 0x38, 8) COPY (register, 0xa8, 8)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f438, 8)
list_fonts,  ---  CALL (ram, 0x401980, 8)
list_fonts, (register, 0x30, 8) COPY (const, 0x4119a2, 8)
list_fonts, (register, 0x18, 8) COPY (register, 0x0, 8)
list_fonts, (register, 0x38, 8) COPY (register, 0xa8, 8)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f448, 8)
list_fonts,  ---  CALL (ram, 0x4019a0, 8)
list_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
list_fonts, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
list_fonts, (register, 0x28, 4) COPY (register, 0x0, 4)
list_fonts, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (unique, 0x59300, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)
list_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts,  ---  CBRANCH (ram, 0x40f356, 8) , (register, 0x206, 1)
list_fonts, (register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x160, 8)
list_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x160, 8)
list_fonts, (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x160, 8)
list_fonts, (register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)
list_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)
list_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (unique, 0x59200, 4) INT_AND (register, 0x28, 4) , (register, 0x28, 4)
list_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
list_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
list_fonts,  ---  CBRANCH (ram, 0x40f46e, 8) , (unique, 0xc680, 1)
list_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xfffffffffffffea8, 8)
list_fonts, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
list_fonts, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
list_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
list_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
list_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts,  ---  CBRANCH (ram, 0x40f481, 8) , (register, 0x206, 1)
list_fonts, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
list_fonts, (register, 0x30, 8) COPY (const, 0x41199e, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
list_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
list_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
list_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f481, 8)
list_fonts,  ---  CALL (ram, 0x401b10, 8)
list_fonts, (register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x160, 8)
list_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x160, 8)
list_fonts, (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x160, 8)
list_fonts, (register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)
list_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)
list_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xfffffffffffffea0, 8)
list_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
list_fonts, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (unique, 0x59300, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)
list_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
list_fonts,  ---  CBRANCH (ram, 0x40f460, 8) , (unique, 0xc680, 1)
list_fonts,  ---  BRANCH (ram, 0x40f356, 8)
list_fonts, (register, 0x38, 8) COPY (register, 0xa8, 8)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f4a8, 8)
list_fonts,  ---  CALL (ram, 0x401710, 8)
list_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
list_fonts, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (unique, 0x59300, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)
list_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts,  ---  CBRANCH (ram, 0x40f341, 8) , (register, 0x206, 1)
list_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x230, 8)
list_fonts, (register, 0x18, 8) COPY (unique, 0x3200, 8)
list_fonts,  ---  BRANCH (ram, 0x40f4d7, 8)
list_fonts, (register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x230, 8)
list_fonts, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x230, 8)
list_fonts, (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x230, 8)
list_fonts, (register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)
list_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)
list_fonts, (unique, 0x12c00, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xfffffffffffffdd0, 8)
list_fonts, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
list_fonts, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (unique, 0x59300, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)
list_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
list_fonts, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts,  ---  CBRANCH (ram, 0x40f341, 8) , (register, 0x206, 1)
list_fonts, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0xfffffffffffffff8, 8)
list_fonts, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
list_fonts, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
list_fonts, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
list_fonts, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
list_fonts, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts,  ---  CBRANCH (ram, 0x40f4c0, 8) , (register, 0x206, 1)
list_fonts, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
list_fonts, (register, 0x30, 8) COPY (const, 0x41199e, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
list_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
list_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
list_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f4f1, 8)
list_fonts,  ---  CALL (ram, 0x401b10, 8)
list_fonts,  ---  BRANCH (ram, 0x40f4c0, 8)
list_fonts, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
list_fonts, (register, 0x8, 8) COPY (register, 0xa0, 8)
list_fonts, (register, 0x10, 8) COPY (register, 0xb0, 8)
list_fonts, (register, 0x30, 8) COPY (const, 0x411818, 8)
list_fonts, (register, 0x200, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x20b, 1) COPY (const, 0x0, 1)
list_fonts, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
list_fonts, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
list_fonts, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
list_fonts, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
list_fonts, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
list_fonts, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
list_fonts, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
list_fonts, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
list_fonts, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
list_fonts,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f50c, 8)
list_fonts,  ---  CALL (ram, 0x401b10, 8)
list_fonts,  ---  BRANCH (ram, 0x40f2ed, 8)
elementp,  ---  BRANCH (ram, 0x40f52c, 8)
FUN_0040f52c, (register, 0x200, 1) INT_LESS (register, 0x38, 4) , (register, 0x0, 4)
FUN_0040f52c, (register, 0x20b, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x0, 4)
FUN_0040f52c, (unique, 0x28600, 4) INT_SUB (register, 0x38, 4) , (register, 0x0, 4)
FUN_0040f52c, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
FUN_0040f52c, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
FUN_0040f52c, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
FUN_0040f52c, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
FUN_0040f52c, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
FUN_0040f52c, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
FUN_0040f52c,  ---  CBRANCH (ram, 0x40f540, 8) , (register, 0x206, 1)
FUN_0040f52c, (register, 0x200, 1) INT_CARRY (register, 0x30, 8) , (const, 0x4, 8)
FUN_0040f52c, (register, 0x20b, 1) INT_SCARRY (register, 0x30, 8) , (const, 0x4, 8)
FUN_0040f52c, (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x4, 8)
FUN_0040f52c, (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)
FUN_0040f52c, (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)
FUN_0040f52c, (unique, 0x12c00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)
FUN_0040f52c, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
FUN_0040f52c, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
FUN_0040f52c, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
FUN_0040f52c, (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8)
FUN_0040f52c, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
FUN_0040f52c, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
FUN_0040f52c, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
FUN_0040f52c, (register, 0x200, 1) COPY (const, 0x0, 1)
FUN_0040f52c, (register, 0x20b, 1) COPY (const, 0x0, 1)
FUN_0040f52c, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
FUN_0040f52c, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
FUN_0040f52c, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
FUN_0040f52c, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
FUN_0040f52c, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
FUN_0040f52c, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
FUN_0040f52c, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
FUN_0040f52c, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
FUN_0040f52c,  ---  CBRANCH (ram, 0x40f528, 8) , (unique, 0xc680, 1)
FUN_0040f52c, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
FUN_0040f52c, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
FUN_0040f52c,  ---  RETURN (register, 0x288, 8)
FUN_0040f52c, (register, 0x0, 8) COPY (const, 0x1, 8)
FUN_0040f52c, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
FUN_0040f52c, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
FUN_0040f52c,  ---  RETURN (register, 0x288, 8)
display_usage, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
display_usage, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
display_usage, (register, 0x200, 1) COPY (const, 0x0, 1)
display_usage, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_usage, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_usage, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_usage, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
display_usage, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
display_usage, (register, 0xa0, 8) COPY (register, 0x30, 8)
display_usage, (unique, 0xe780, 8) COPY (register, 0x28, 8)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
display_usage, (unique, 0xe780, 8) COPY (register, 0x18, 8)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
display_usage, (register, 0x18, 8) COPY (register, 0x38, 8)
display_usage, (register, 0x30, 8) COPY (const, 0x411a0d, 8)
display_usage, (register, 0x200, 1) COPY (const, 0x0, 1)
display_usage, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_usage, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
display_usage, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
display_usage, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (register, 0x200, 1) COPY (const, 0x0, 1)
display_usage, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_usage, (register, 0xb0, 4) INT_XOR (register, 0xb0, 4) , (register, 0xb0, 4)
display_usage, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
display_usage, (register, 0x207, 1) INT_SLESS (register, 0xb0, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (register, 0xb0, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x28, 8)
display_usage, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x28, 8)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x28, 8)
display_usage, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
display_usage, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
display_usage, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
display_usage, (unique, 0xbd80, 8) COPY (register, 0x38, 8)
display_usage,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
display_usage, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
display_usage, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
display_usage,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
display_usage, (register, 0x10, 8) COPY (register, 0x38, 8)
display_usage, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_usage, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0x20, 8)
display_usage, (unique, 0xbc80, 4) COPY (register, 0x8, 4)
display_usage,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f58d, 8)
display_usage,  ---  CALL (ram, 0x401b10, 8)
display_usage, (register, 0x38, 8) COPY (register, 0x18, 8)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f595, 8)
display_usage,  ---  CALL (ram, 0x4018d0, 8)
display_usage, (register, 0x38, 8) COPY (ram, 0x613500, 8)
display_usage, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x7, 8)
display_usage, (register, 0x18, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
display_usage, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
display_usage, (register, 0x200, 1) COPY (const, 0x0, 1)
display_usage, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_usage, (unique, 0x59300, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)
display_usage, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
display_usage, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
display_usage, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage,  ---  CBRANCH (ram, 0x40f67d, 8) , (register, 0x206, 1)
display_usage, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
display_usage, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
display_usage, (register, 0x0, 8) COPY (register, 0xb0, 8)
display_usage, (unique, 0x53900, 4) INT_AND (const, 0x5, 4) , (const, 0x3f, 4)
display_usage, (unique, 0x53980, 8) COPY (register, 0x0, 8)
display_usage, (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53900, 4)
display_usage, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_usage, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
display_usage, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
display_usage, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
display_usage, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
display_usage, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
display_usage, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
display_usage, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
display_usage, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
display_usage, (unique, 0x15580, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_usage, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
display_usage, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
display_usage, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
display_usage, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
display_usage, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
display_usage, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12f80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_usage, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_usage, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
display_usage, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
display_usage, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
display_usage, (unique, 0x13280, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
display_usage, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_usage, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
display_usage, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
display_usage, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
display_usage, (unique, 0x13500, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
display_usage, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
display_usage, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
display_usage, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
display_usage, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_usage, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
display_usage, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
display_usage, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
display_usage, (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x613518, 8)
display_usage, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_usage, (register, 0x8, 4) COPY (unique, 0xbc80, 4)
display_usage, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
display_usage, (register, 0x0, 8) COPY (register, 0xa0, 8)
display_usage,  ---  BRANCH (ram, 0x40f5d0, 8)
display_usage, (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x10, 4)
display_usage, (register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x10, 4)
display_usage, (unique, 0x28600, 4) INT_SUB (register, 0x8, 4) , (register, 0x10, 4)
display_usage, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage,  ---  CBRANCH (ram, 0x40f660, 8) , (register, 0x206, 1)
display_usage, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x4, 8)
display_usage, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x4, 8)
display_usage, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8)
display_usage, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_usage, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
display_usage, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xfffffffffffffffc, 8)
display_usage, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
display_usage, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
display_usage, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
display_usage, (register, 0x200, 1) COPY (const, 0x0, 1)
display_usage, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_usage, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
display_usage, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_usage,  ---  CBRANCH (ram, 0x40f5c8, 8) , (unique, 0xc680, 1)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f5e0, 8)
display_usage,  ---  CALL (ram, 0x4018d0, 8)
display_usage, (register, 0xb8, 8) COPY (register, 0x0, 8)
display_usage, (register, 0x0, 8) COPY (const, 0x40, 8)
display_usage, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0xb8, 4)
display_usage, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0xb8, 4)
display_usage, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0xb8, 4)
display_usage, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_usage, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x18, 4)
display_usage, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x18, 4)
display_usage, (unique, 0x28600, 4) INT_SUB (register, 0x0, 4) , (register, 0x18, 4)
display_usage, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
display_usage, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
display_usage,  ---  CBRANCH (ram, 0x40f710, 8) , (unique, 0xce80, 1)
display_usage, (register, 0xa8, 8) COPY (register, 0xb0, 8)
display_usage, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_usage, (register, 0x200, 1) COPY (const, 0x0, 1)
display_usage, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_usage, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_usage, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_usage, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (unique, 0x53900, 4) INT_AND (const, 0x5, 4) , (const, 0x3f, 4)
display_usage, (unique, 0x53980, 8) COPY (register, 0xa8, 8)
display_usage, (register, 0xa8, 8) INT_LEFT (register, 0xa8, 8) , (unique, 0x53900, 4)
display_usage, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_usage, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
display_usage, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
display_usage, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
display_usage, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
display_usage, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
display_usage, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
display_usage, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
display_usage, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
display_usage, (unique, 0x15580, 1) INT_SLESS (register, 0xa8, 8) , (const, 0x0, 8)
display_usage, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
display_usage, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
display_usage, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
display_usage, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
display_usage, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
display_usage, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12f80, 1) INT_SLESS (register, 0xa8, 8) , (const, 0x0, 8)
display_usage, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_usage, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
display_usage, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
display_usage, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
display_usage, (unique, 0x13280, 1) INT_EQUAL (register, 0xa8, 8) , (const, 0x0, 8)
display_usage, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_usage, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
display_usage, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
display_usage, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
display_usage, (unique, 0x13500, 8) INT_AND (register, 0xa8, 8) , (const, 0xff, 8)
display_usage, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
display_usage, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
display_usage, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
display_usage, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_usage, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
display_usage, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
display_usage, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
display_usage, (register, 0x30, 8) COPY (const, 0x411a1a, 8)
display_usage, (unique, 0x3880, 8) INT_ADD (const, 0x4, 8) , (register, 0x18, 8)
display_usage, (unique, 0x3900, 8) INT_MULT (register, 0xb8, 8) , (const, 0x1, 8)
display_usage, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
display_usage, (register, 0x18, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4)
display_usage, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
display_usage, (unique, 0x3200, 8) INT_ADD (register, 0xa8, 8) , (const, 0x613500, 8)
display_usage, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_usage, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f619, 8)
display_usage,  ---  CALL (ram, 0x401b10, 8)
display_usage, (unique, 0x3200, 8) INT_ADD (register, 0xa8, 8) , (const, 0x613518, 8)
display_usage, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_usage, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
display_usage, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
display_usage, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0xff, 4)
display_usage, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0xff, 4)
display_usage, (unique, 0x27f00, 4) INT_SUB (register, 0x10, 4) , (const, 0xff, 4)
display_usage, (register, 0x207, 1) INT_SLESS (unique, 0x27f00, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (unique, 0x27f00, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (unique, 0x27f00, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
display_usage,  ---  CBRANCH (ram, 0x40f6f0, 8) , (unique, 0xc780, 1)
display_usage, (register, 0x80, 8) COPY (register, 0xb0, 8)
display_usage, (unique, 0x53900, 4) INT_AND (const, 0x5, 4) , (const, 0x3f, 4)
display_usage, (unique, 0x53980, 8) COPY (register, 0x80, 8)
display_usage, (register, 0x80, 8) INT_LEFT (register, 0x80, 8) , (unique, 0x53900, 4)
display_usage, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_usage, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
display_usage, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
display_usage, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
display_usage, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
display_usage, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
display_usage, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
display_usage, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
display_usage, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
display_usage, (unique, 0x15580, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)
display_usage, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
display_usage, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
display_usage, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
display_usage, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
display_usage, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
display_usage, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12f80, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)
display_usage, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_usage, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
display_usage, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
display_usage, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
display_usage, (unique, 0x13280, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)
display_usage, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_usage, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
display_usage, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
display_usage, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
display_usage, (unique, 0x13500, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)
display_usage, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
display_usage, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
display_usage, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
display_usage, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_usage, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
display_usage, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
display_usage, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
display_usage, (unique, 0x3200, 8) INT_ADD (register, 0x80, 8) , (const, 0x613508, 8)
display_usage, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_usage, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
display_usage, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_usage, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x1, 4)
display_usage, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x1, 4)
display_usage, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)
display_usage, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage,  ---  CBRANCH (ram, 0x40f75b, 8) , (register, 0x206, 1)
display_usage, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)
display_usage, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x2, 4)
display_usage, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4)
display_usage, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage,  ---  CBRANCH (ram, 0x40f738, 8) , (register, 0x206, 1)
display_usage, (register, 0x30, 8) COPY (ram, 0x613d00, 8)
display_usage, (register, 0x38, 8) COPY (const, 0x5d, 8)
display_usage, (register, 0x200, 1) INT_CARRY (register, 0x18, 4) , (const, 0x1, 4)
display_usage, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 4) , (const, 0x1, 4)
display_usage, (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
display_usage, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
display_usage, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f660, 8)
display_usage,  ---  CALL (ram, 0x401890, 8)
display_usage, (register, 0x200, 1) INT_CARRY (register, 0x28, 4) , (const, 0x1, 4)
display_usage, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x1, 4)
display_usage, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
display_usage, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
display_usage, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (register, 0xb0, 8) INT_SEXT (register, 0x28, 4)
display_usage, (register, 0x0, 8) COPY (register, 0xb0, 8)
display_usage, (unique, 0x53900, 4) INT_AND (const, 0x5, 4) , (const, 0x3f, 4)
display_usage, (unique, 0x53980, 8) COPY (register, 0x0, 8)
display_usage, (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53900, 4)
display_usage, (unique, 0x15000, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_usage, (unique, 0x15080, 4) INT_SUB (unique, 0x53900, 4) , (const, 0x1, 4)
display_usage, (unique, 0x15100, 8) INT_LEFT (unique, 0x53980, 8) , (unique, 0x15080, 4)
display_usage, (unique, 0x15200, 1) INT_SLESS (unique, 0x15100, 8) , (const, 0x0, 8)
display_usage, (unique, 0x15280, 1) BOOL_NEGATE (unique, 0x15000, 1)
display_usage, (unique, 0x15300, 1) INT_AND (unique, 0x15280, 1) , (register, 0x200, 1)
display_usage, (unique, 0x15380, 1) INT_AND (unique, 0x15000, 1) , (unique, 0x15200, 1)
display_usage, (register, 0x200, 1) INT_OR (unique, 0x15300, 1) , (unique, 0x15380, 1)
display_usage, (unique, 0x15500, 1) INT_EQUAL (unique, 0x53900, 4) , (const, 0x1, 4)
display_usage, (unique, 0x15580, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_usage, (unique, 0x15680, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15580, 1)
display_usage, (unique, 0x15700, 1) BOOL_NEGATE (unique, 0x15500, 1)
display_usage, (unique, 0x15780, 1) INT_AND (unique, 0x15700, 1) , (register, 0x20b, 1)
display_usage, (unique, 0x15800, 1) INT_AND (unique, 0x15500, 1) , (unique, 0x15680, 1)
display_usage, (register, 0x20b, 1) INT_OR (unique, 0x15780, 1) , (unique, 0x15800, 1)
display_usage, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x53900, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12f80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
display_usage, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_usage, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
display_usage, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
display_usage, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
display_usage, (unique, 0x13280, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
display_usage, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_usage, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
display_usage, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
display_usage, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
display_usage, (unique, 0x13500, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
display_usage, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
display_usage, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
display_usage, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
display_usage, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
display_usage, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
display_usage, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
display_usage, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
display_usage, (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x613500, 8)
display_usage, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)
display_usage, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
display_usage, (register, 0x200, 1) COPY (const, 0x0, 1)
display_usage, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_usage, (unique, 0x59300, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)
display_usage, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
display_usage, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
display_usage, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_usage,  ---  CBRANCH (ram, 0x40f5b0, 8) , (unique, 0xc680, 1)
display_usage, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
display_usage, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_usage, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
display_usage, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_usage, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
display_usage, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_usage, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
display_usage, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
display_usage, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
display_usage, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage,  ---  CBRANCH (ram, 0x40f794, 8) , (register, 0x206, 1)
display_usage, (register, 0x30, 8) COPY (ram, 0x613d00, 8)
display_usage, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
display_usage, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_usage, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f69a, 8)
display_usage,  ---  CALL (ram, 0x401970, 8)
display_usage, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0x20, 8)
display_usage, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_usage, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x1, 4)
display_usage, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_usage, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x1, 4)
display_usage, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_usage, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x1, 4)
display_usage, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage,  ---  CBRANCH (ram, 0x40f7b0, 8) , (register, 0x206, 1)
display_usage, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0x20, 8)
display_usage, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_usage, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
display_usage, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_usage, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)
display_usage, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (const, 0x2, 4)
display_usage, (unique, 0x28200, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4)
display_usage, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)
display_usage, (register, 0x18, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
display_usage, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
display_usage,  ---  CBRANCH (ram, 0x40f80a, 8) , (register, 0x206, 1)
display_usage, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (const, 0x1, 4)
display_usage, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (const, 0x1, 4)
display_usage, (unique, 0x28200, 4) INT_SUB (register, 0x18, 4) , (const, 0x1, 4)
display_usage, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)
display_usage,  ---  CBRANCH (ram, 0x40f77e, 8) , (unique, 0xc780, 1)
display_usage, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
display_usage, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_usage, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
display_usage, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_usage, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
display_usage, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_usage, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
display_usage, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
display_usage, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
display_usage, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_usage,  ---  CBRANCH (ram, 0x40f77e, 8) , (unique, 0xc680, 1)
display_usage, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_usage, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x28, 8)
display_usage, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x28, 8)
display_usage, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x28, 8)
display_usage, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
display_usage, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
display_usage, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (register, 0x10, 8) COPY (const, 0x411a39, 8)
display_usage, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
display_usage, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
display_usage, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
display_usage, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
display_usage, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
display_usage, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
display_usage, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
display_usage, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
display_usage, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
display_usage, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
display_usage, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
display_usage, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
display_usage, (register, 0x30, 8) COPY (const, 0x411a4f, 8)
display_usage, (register, 0x200, 1) COPY (const, 0x0, 1)
display_usage, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_usage, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_usage, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_usage, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage,  ---  BRANCH (ram, 0x401b10, 8)
display_usage, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_usage, (register, 0x30, 8) COPY (const, 0x411a21, 8)
display_usage, (register, 0x200, 1) COPY (const, 0x0, 1)
display_usage, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_usage, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_usage, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_usage, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (register, 0x200, 1) INT_CARRY (register, 0x18, 4) , (const, 0x5, 4)
display_usage, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 4) , (const, 0x5, 4)
display_usage, (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x5, 4)
display_usage, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
display_usage, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f706, 8)
display_usage,  ---  CALL (ram, 0x401b10, 8)
display_usage,  ---  BRANCH (ram, 0x40f62c, 8)
display_usage, (register, 0x8, 8) COPY (ram, 0x613d00, 8)
display_usage, (register, 0x10, 8) COPY (const, 0x2, 8)
display_usage, (register, 0x30, 8) COPY (const, 0x1, 8)
display_usage, (register, 0x38, 8) COPY (const, 0x411a17, 8)
display_usage, (register, 0x18, 8) COPY (const, 0x8, 8)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f730, 8)
display_usage,  ---  CALL (ram, 0x401ab0, 8)
display_usage,  ---  BRANCH (ram, 0x40f5f3, 8)
display_usage, (register, 0x8, 8) COPY (ram, 0x613d00, 8)
display_usage, (register, 0x10, 8) COPY (const, 0xa, 8)
display_usage, (register, 0x30, 8) COPY (const, 0x1, 8)
display_usage, (register, 0x38, 8) COPY (const, 0x411a2e, 8)
display_usage, (register, 0x200, 1) INT_CARRY (register, 0x18, 4) , (const, 0xa, 4)
display_usage, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 4) , (const, 0xa, 4)
display_usage, (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xa, 4)
display_usage, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
display_usage, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f756, 8)
display_usage,  ---  CALL (ram, 0x401ab0, 8)
display_usage,  ---  BRANCH (ram, 0x40f660, 8)
display_usage, (register, 0x8, 8) COPY (ram, 0x613d00, 8)
display_usage, (register, 0x10, 8) COPY (const, 0x5, 8)
display_usage, (register, 0x30, 8) COPY (const, 0x1, 8)
display_usage, (register, 0x38, 8) COPY (const, 0x411a28, 8)
display_usage, (register, 0x200, 1) INT_CARRY (register, 0x18, 4) , (const, 0x5, 4)
display_usage, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 4) , (const, 0x5, 4)
display_usage, (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x5, 4)
display_usage, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
display_usage, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f779, 8)
display_usage,  ---  CALL (ram, 0x401ab0, 8)
display_usage,  ---  BRANCH (ram, 0x40f660, 8)
display_usage, (register, 0x30, 8) COPY (ram, 0x613d00, 8)
display_usage, (register, 0x38, 8) COPY (const, 0xa, 8)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f78f, 8)
display_usage,  ---  CALL (ram, 0x401890, 8)
display_usage,  ---  BRANCH (ram, 0x40f6ca, 8)
display_usage, (register, 0x30, 8) COPY (ram, 0x613d00, 8)
display_usage, (register, 0x38, 8) COPY (const, 0xa, 8)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f7a5, 8)
display_usage,  ---  CALL (ram, 0x401890, 8)
display_usage, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0x20, 8)
display_usage, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_usage, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x1, 4)
display_usage, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_usage, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x1, 4)
display_usage, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_usage, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x1, 4)
display_usage, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
display_usage,  ---  CBRANCH (ram, 0x40f6a5, 8) , (unique, 0xc680, 1)
display_usage, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
display_usage, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_usage, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
display_usage, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_usage, (register, 0x30, 8) COPY (const, 0x411a88, 8)
display_usage, (register, 0x200, 1) COPY (const, 0x0, 1)
display_usage, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_usage, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_usage, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_usage, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f7c8, 8)
display_usage,  ---  CALL (ram, 0x401b10, 8)
display_usage, (register, 0x8, 8) COPY (ram, 0x613d00, 8)
display_usage, (register, 0x10, 8) COPY (const, 0x6b, 8)
display_usage, (register, 0x30, 8) COPY (const, 0x1, 8)
display_usage, (register, 0x38, 8) COPY (const, 0x411b50, 8)
display_usage, (unique, 0x3800, 8) INT_ADD (const, 0x14, 8) , (register, 0x20, 8)
display_usage, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_usage, (register, 0x18, 4) COPY (unique, 0xbc80, 4)
display_usage, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f7e7, 8)
display_usage,  ---  CALL (ram, 0x401ab0, 8)
display_usage, (register, 0x8, 8) COPY (ram, 0x613d00, 8)
display_usage, (register, 0x10, 8) COPY (const, 0x43, 8)
display_usage, (register, 0x30, 8) COPY (const, 0x1, 8)
display_usage, (register, 0x38, 8) COPY (const, 0x411bc0, 8)
display_usage, (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (const, 0x1, 4)
display_usage, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 4) , (const, 0x1, 4)
display_usage, (register, 0x18, 4) INT_SUB (register, 0x18, 4) , (const, 0x1, 4)
display_usage, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
display_usage, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f805, 8)
display_usage,  ---  CALL (ram, 0x401ab0, 8)
display_usage,  ---  BRANCH (ram, 0x40f6b5, 8)
display_usage, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
display_usage, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
display_usage, (register, 0x10, 8) COPY (unique, 0xbd80, 8)
display_usage, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_usage, (register, 0x30, 8) COPY (const, 0x411ad8, 8)
display_usage, (register, 0x200, 1) COPY (const, 0x0, 1)
display_usage, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_usage, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_usage, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_usage, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_usage, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_usage, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_usage, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_usage, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_usage, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_usage, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_usage,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f822, 8)
display_usage,  ---  CALL (ram, 0x401b10, 8)
display_usage,  ---  BRANCH (ram, 0x40f7c8, 8)
display_version, (unique, 0xe780, 8) COPY (register, 0x28, 8)
display_version, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_version,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
display_version, (unique, 0xe780, 8) COPY (register, 0x18, 8)
display_version, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_version,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
display_version, (register, 0x28, 8) COPY (register, 0x10, 8)
display_version, (register, 0x10, 8) COPY (register, 0x38, 8)
display_version, (register, 0x18, 8) COPY (register, 0x30, 8)
display_version, (register, 0x80, 8) COPY (const, 0x411a63, 8)
display_version, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
display_version, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
display_version, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_version, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
display_version, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
display_version, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
display_version, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_version, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_version, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_version, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_version, (register, 0x8, 8) COPY (const, 0x411a67, 8)
display_version, (register, 0x30, 8) COPY (const, 0x411a75, 8)
display_version, (register, 0x200, 1) COPY (const, 0x0, 1)
display_version, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_version, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_version, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_version, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_version, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_version, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_version, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_version, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_version, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_version, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_version,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f85d, 8)
display_version,  ---  CALL (ram, 0x401b10, 8)
display_version, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_version, (register, 0x10, 8) COPY (register, 0x28, 8)
display_version, (register, 0x30, 8) COPY (const, 0x41199e, 8)
display_version, (register, 0x200, 1) COPY (const, 0x0, 1)
display_version, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_version, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_version, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_version, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_version, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_version, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_version, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_version, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_version, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_version, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_version,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f873, 8)
display_version,  ---  CALL (ram, 0x401b10, 8)
display_version, (register, 0x8, 8) COPY (ram, 0x613d00, 8)
display_version, (register, 0x10, 8) COPY (const, 0x97, 8)
display_version, (register, 0x30, 8) COPY (const, 0x1, 8)
display_version, (register, 0x38, 8) COPY (const, 0x411c08, 8)
display_version, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
display_version,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40f88e, 8)
display_version,  ---  CALL (ram, 0x401ab0, 8)
display_version, (register, 0x38, 8) COPY (ram, 0x613d00, 8)
display_version, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
display_version, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
display_version, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
display_version, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
display_version, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
display_version, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
display_version, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
display_version, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_version, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_version, (register, 0x10, 8) COPY (register, 0x18, 8)
display_version, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
display_version, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
display_version, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
display_version, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
display_version, (register, 0x30, 8) COPY (const, 0x41199e, 8)
display_version, (register, 0x200, 1) COPY (const, 0x0, 1)
display_version, (register, 0x20b, 1) COPY (const, 0x0, 1)
display_version, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
display_version, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
display_version, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
display_version, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
display_version, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
display_version, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
display_version, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
display_version, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
display_version,  ---  BRANCH (ram, 0x401b10, 8)
exchange, (register, 0x0, 8) INT_SEXT (ram, 0x613d20, 4)
exchange, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
exchange, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
exchange,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
exchange, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
exchange, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
exchange,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
exchange, (unique, 0xe780, 8) COPY (register, 0x28, 8)
exchange, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
exchange,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
exchange, (register, 0x28, 4) COPY (ram, 0x613d24, 4)
exchange, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
exchange, (unique, 0xe780, 8) COPY (register, 0x18, 8)
exchange, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
exchange,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
exchange, (register, 0x18, 4) COPY (ram, 0x613d10, 4)
exchange, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
exchange, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
exchange, (unique, 0x3400, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8)
exchange, (register, 0x30, 8) COPY (unique, 0x3400, 8)
exchange, (register, 0x88, 8) COPY (register, 0x0, 8)
exchange, (register, 0x90, 4) COPY (register, 0x28, 4)
exchange, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
exchange, (register, 0x98, 4) COPY (register, 0x18, 4)
exchange, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
exchange, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
exchange, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
exchange, (register, 0x200, 1) INT_LESS (register, 0x88, 4) , (register, 0x90, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0x88, 4) , (register, 0x90, 4)
exchange, (unique, 0x28600, 4) INT_SUB (register, 0x88, 4) , (register, 0x90, 4)
exchange, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
exchange, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
exchange, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
exchange,  ---  CBRANCH (ram, 0x40f931, 8) , (unique, 0xce80, 1)
exchange, (register, 0x200, 1) INT_LESS (register, 0x98, 4) , (register, 0x88, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0x98, 4) , (register, 0x88, 4)
exchange, (unique, 0x28600, 4) INT_SUB (register, 0x98, 4) , (register, 0x88, 4)
exchange, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
exchange, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
exchange, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
exchange,  ---  CBRANCH (ram, 0x40f931, 8) , (unique, 0xce80, 1)
exchange, (register, 0xa0, 4) COPY (register, 0x98, 4)
exchange, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
exchange, (register, 0xa8, 4) COPY (register, 0x88, 4)
exchange, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
exchange, (register, 0x200, 1) INT_LESS (register, 0xa0, 4) , (register, 0x88, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0xa0, 4) , (register, 0x88, 4)
exchange, (register, 0xa0, 4) INT_SUB (register, 0xa0, 4) , (register, 0x88, 4)
exchange, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
exchange, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange, (register, 0x200, 1) INT_LESS (register, 0xa8, 4) , (register, 0x90, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0xa8, 4) , (register, 0x90, 4)
exchange, (register, 0xa8, 4) INT_SUB (register, 0xa8, 4) , (register, 0x90, 4)
exchange, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0xa8, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4)
exchange, (unique, 0x12c00, 4) INT_AND (register, 0xa8, 4) , (const, 0xff, 4)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange, (register, 0x200, 1) INT_LESS (register, 0xa0, 4) , (register, 0xa8, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0xa0, 4) , (register, 0xa8, 4)
exchange, (unique, 0x28600, 4) INT_SUB (register, 0xa0, 4) , (register, 0xa8, 4)
exchange, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
exchange, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
exchange, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
exchange, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
exchange,  ---  CBRANCH (ram, 0x40f950, 8) , (unique, 0xd080, 1)
exchange, (register, 0x200, 1) COPY (const, 0x0, 1)
exchange, (register, 0x20b, 1) COPY (const, 0x0, 1)
exchange, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
exchange, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
exchange, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
exchange, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
exchange,  ---  CBRANCH (ram, 0x40f929, 8) , (unique, 0xce80, 1)
exchange, (register, 0x0, 8) INT_SEXT (register, 0x90, 4)
exchange, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
exchange, (unique, 0x3400, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8)
exchange, (register, 0x10, 8) COPY (unique, 0x3400, 8)
exchange, (register, 0x200, 1) COPY (const, 0x0, 1)
exchange, (register, 0x20b, 1) COPY (const, 0x0, 1)
exchange, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
exchange, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
exchange, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
exchange, (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8)
exchange, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
exchange, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
exchange, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
exchange, (unique, 0x3400, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8)
exchange, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
exchange, (register, 0x80, 8) COPY (unique, 0xbd80, 8)
exchange, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
exchange, (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8)
exchange, (unique, 0xbd80, 8) COPY (register, 0x80, 8)
exchange,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbd80, 8)
exchange, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
exchange, (unique, 0x3400, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8)
exchange, (unique, 0xbd80, 8) COPY (register, 0x8, 8)
exchange,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbd80, 8)
exchange, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x1, 8)
exchange, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x1, 8)
exchange, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
exchange, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange, (register, 0x200, 1) INT_LESS (register, 0xa0, 4) , (register, 0x0, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0xa0, 4) , (register, 0x0, 4)
exchange, (unique, 0x28600, 4) INT_SUB (register, 0xa0, 4) , (register, 0x0, 4)
exchange, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
exchange, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
exchange, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
exchange, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
exchange,  ---  CBRANCH (ram, 0x40f910, 8) , (unique, 0xd080, 1)
exchange, (register, 0x200, 1) INT_CARRY (register, 0x90, 4) , (register, 0xa0, 4)
exchange, (register, 0x20b, 1) INT_SCARRY (register, 0x90, 4) , (register, 0xa0, 4)
exchange, (register, 0x90, 4) INT_ADD (register, 0x90, 4) , (register, 0xa0, 4)
exchange, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x90, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x90, 4) , (const, 0x0, 4)
exchange, (unique, 0x12c00, 4) INT_AND (register, 0x90, 4) , (const, 0xff, 4)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange, (register, 0x200, 1) INT_LESS (register, 0x88, 4) , (register, 0x90, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0x88, 4) , (register, 0x90, 4)
exchange, (unique, 0x28600, 4) INT_SUB (register, 0x88, 4) , (register, 0x90, 4)
exchange, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
exchange, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
exchange, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
exchange, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
exchange,  ---  CBRANCH (ram, 0x40f8e5, 8) , (unique, 0xd080, 1)
exchange, (register, 0x0, 4) COPY (register, 0x18, 4)
exchange, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
exchange, (ram, 0x613d20, 4) COPY (register, 0x18, 4)
exchange, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x88, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x88, 4)
exchange, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x88, 4)
exchange, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
exchange, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange, (register, 0x200, 1) INT_CARRY (register, 0x28, 4) , (register, 0x0, 4)
exchange, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 4) , (register, 0x0, 4)
exchange, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (register, 0x0, 4)
exchange, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
exchange, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
exchange, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
exchange, (ram, 0x613d24, 4) COPY (register, 0x28, 4)
exchange, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
exchange, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
exchange, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
exchange, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
exchange, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
exchange, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
exchange, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
exchange, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
exchange,  ---  RETURN (register, 0x288, 8)
exchange, (register, 0x200, 1) COPY (const, 0x0, 1)
exchange, (register, 0x20b, 1) COPY (const, 0x0, 1)
exchange, (unique, 0x59200, 4) INT_AND (register, 0xa8, 4) , (register, 0xa8, 4)
exchange, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
exchange, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
exchange, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
exchange,  ---  CBRANCH (ram, 0x40f989, 8) , (unique, 0xce80, 1)
exchange, (register, 0x0, 8) INT_SEXT (register, 0x90, 4)
exchange, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
exchange, (unique, 0x3400, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8)
exchange, (register, 0x8, 8) COPY (unique, 0x3400, 8)
exchange, (register, 0x0, 4) COPY (register, 0x90, 4)
exchange, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
exchange, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x88, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x88, 4)
exchange, (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x88, 4)
exchange, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
exchange, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (register, 0x98, 4)
exchange, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (register, 0x98, 4)
exchange, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x98, 4)
exchange, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
exchange, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange, (register, 0x0, 8) INT_SEXT (register, 0x0, 4)
exchange, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
exchange, (unique, 0x3400, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8)
exchange, (register, 0x10, 8) COPY (unique, 0x3400, 8)
exchange, (register, 0x200, 1) COPY (const, 0x0, 1)
exchange, (register, 0x20b, 1) COPY (const, 0x0, 1)
exchange, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
exchange, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
exchange, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
exchange, (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)
exchange, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
exchange, (register, 0x80, 8) COPY (unique, 0xbd80, 8)
exchange, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
exchange, (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8)
exchange, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
exchange, (register, 0xa0, 8) COPY (unique, 0xbd80, 8)
exchange, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
exchange, (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)
exchange, (unique, 0xbd80, 8) COPY (register, 0xa0, 8)
exchange,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbd80, 8)
exchange, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
exchange, (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8)
exchange, (unique, 0xbd80, 8) COPY (register, 0x80, 8)
exchange,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbd80, 8)
exchange, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x1, 8)
exchange, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x1, 8)
exchange, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
exchange, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange, (register, 0x200, 1) INT_LESS (register, 0xa8, 4) , (register, 0x0, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0xa8, 4) , (register, 0x0, 4)
exchange, (unique, 0x28600, 4) INT_SUB (register, 0xa8, 4) , (register, 0x0, 4)
exchange, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
exchange, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange, (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1)
exchange, (unique, 0xcf80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)
exchange, (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1)
exchange,  ---  CBRANCH (ram, 0x40f970, 8) , (unique, 0xd080, 1)
exchange, (register, 0x200, 1) INT_LESS (register, 0x98, 4) , (register, 0xa8, 4)
exchange, (register, 0x20b, 1) INT_SBORROW (register, 0x98, 4) , (register, 0xa8, 4)
exchange, (register, 0x98, 4) INT_SUB (register, 0x98, 4) , (register, 0xa8, 4)
exchange, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
exchange, (register, 0x207, 1) INT_SLESS (register, 0x98, 4) , (const, 0x0, 4)
exchange, (register, 0x206, 1) INT_EQUAL (register, 0x98, 4) , (const, 0x0, 4)
exchange, (unique, 0x12c00, 4) INT_AND (register, 0x98, 4) , (const, 0xff, 4)
exchange, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
exchange, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
exchange, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
exchange,  ---  BRANCH (ram, 0x40f8e0, 8)
_getopt_internal, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
_getopt_internal, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
_getopt_internal, (register, 0xb8, 8) COPY (register, 0x8, 8)
_getopt_internal, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
_getopt_internal, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
_getopt_internal, (register, 0xa8, 4) COPY (register, 0x38, 4)
_getopt_internal, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
_getopt_internal, (unique, 0xe780, 8) COPY (register, 0x28, 8)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
_getopt_internal, (unique, 0xe780, 8) COPY (register, 0x18, 8)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x58, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x58, 8)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x58, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x0, 4) COPY (ram, 0x613d10, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (ram, 0x613d18, 8) COPY (const, 0x0, 8)
_getopt_internal, (unique, 0xbd80, 8) COPY (register, 0x30, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd80, 8) COPY (register, 0x10, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd80, 8) COPY (register, 0x80, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x1c, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbc80, 4) COPY (register, 0x88, 4)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fb90, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x18, 8) COPY (ram, 0x613d30, 8)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59300, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fae0, 8) , (register, 0x206, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fae0, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59300, 8) INT_AND (register, 0xb8, 8) , (register, 0xb8, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fee8, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x0, 8) INT_SEXT (ram, 0x613d10, 4)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
_getopt_internal, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (unique, 0x3680, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
_getopt_internal, (register, 0x30, 8) COPY (unique, 0x3680, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
_getopt_internal, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
_getopt_internal, (unique, 0x3400, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
_getopt_internal, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd80, 8) COPY (register, 0x30, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd80, 8) COPY (register, 0x0, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
_getopt_internal, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x2d, 1)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x2d, 1)
_getopt_internal, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x2d, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x4e, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xba80, 1) COPY (register, 0x0, 1)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xba80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fc30, 8) , (register, 0x206, 1)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x1c, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0xb0, 4) COPY (unique, 0xbc80, 4)
_getopt_internal, (register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59200, 4) INT_AND (register, 0xb0, 4) , (register, 0xb0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fc08, 8) , (unique, 0xc680, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
_getopt_internal, (register, 0x28, 4) INT_SEXT (unique, 0xbb00, 1)
_getopt_internal, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
_getopt_internal, (register, 0xa0, 4) COPY (register, 0x28, 4)
_getopt_internal, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
_getopt_internal, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)
_getopt_internal, (register, 0xb0, 8) COPY (unique, 0x3100, 8)
_getopt_internal, (ram, 0x613d30, 8) COPY (register, 0xb0, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (register, 0x30, 4) COPY (register, 0x28, 4)
_getopt_internal, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40fa67, 8)
_getopt_internal,  ---  CALL (ram, 0x401990, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fa74, 8) , (unique, 0xc680, 1)
_getopt_internal, (register, 0x200, 1) INT_CARRY (ram, 0x613d10, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (ram, 0x613d10, 4) , (const, 0x1, 4)
_getopt_internal, (ram, 0x613d10, 4) INT_ADD (ram, 0x613d10, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (ram, 0x613d10, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (ram, 0x613d10, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (ram, 0x613d10, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0xa0, 1) , (const, 0x3a, 1)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0xa0, 1) , (const, 0x3a, 1)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (register, 0xa0, 1) , (const, 0x3a, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fe70, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fe70, 8) , (register, 0x206, 1)
_getopt_internal, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x3a, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x3a, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x3a, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fb7d, 8) , (unique, 0xc680, 1)
_getopt_internal, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x3a, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x3a, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x3a, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x4100f4, 8) , (register, 0x206, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x4100a5, 8) , (unique, 0xc680, 1)
_getopt_internal, (register, 0x0, 8) INT_SEXT (ram, 0x613d10, 4)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0xa8, 4)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0xa8, 4)
_getopt_internal, (unique, 0x28600, 4) INT_SUB (register, 0x0, 4) , (register, 0xa8, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x4101b0, 8) , (register, 0x206, 1)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
_getopt_internal, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
_getopt_internal, (register, 0x10, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)
_getopt_internal, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
_getopt_internal, (ram, 0x613d10, 4) COPY (register, 0x10, 4)
_getopt_internal, (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)
_getopt_internal, (unique, 0x3400, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
_getopt_internal, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (ram, 0x613d18, 8) COPY (register, 0x0, 8)
_getopt_internal, (ram, 0x613d30, 8) COPY (const, 0x0, 8)
_getopt_internal,  ---  BRANCH (ram, 0x40fb7d, 8)
_getopt_internal, (register, 0x10, 4) COPY (ram, 0x613d28, 4)
_getopt_internal, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (const, 0x1, 4)
_getopt_internal, (unique, 0x28200, 4) INT_SUB (register, 0x10, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fdc0, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0xa8, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0xa8, 4) , (register, 0x0, 4)
_getopt_internal, (unique, 0x28600, 4) INT_SUB (register, 0xa8, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fd88, 8) , (register, 0x206, 1)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
_getopt_internal, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (register, 0x30, 8) INT_SEXT (register, 0x0, 4)
_getopt_internal, (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x8, 8)
_getopt_internal, (unique, 0x3400, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
_getopt_internal, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fb60, 8) , (unique, 0xc680, 1)
_getopt_internal, (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fe38, 8) , (unique, 0xc680, 1)
_getopt_internal, (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x2, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fe38, 8) , (unique, 0xc680, 1)
_getopt_internal, (register, 0x10, 4) COPY (ram, 0x613d24, 4)
_getopt_internal, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
_getopt_internal, (register, 0x8, 4) COPY (ram, 0x613d20, 4)
_getopt_internal, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (ram, 0x613d10, 4) COPY (register, 0x0, 4)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (register, 0x8, 4)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (register, 0x8, 4)
_getopt_internal, (unique, 0x28600, 4) INT_SUB (register, 0x10, 4) , (register, 0x8, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x410098, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x8, 4)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0x8, 4)
_getopt_internal, (unique, 0x28600, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fb48, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40fb42, 8)
_getopt_internal,  ---  CALL (ram, 0x40f8b0, 8)
_getopt_internal, (register, 0x10, 4) COPY (ram, 0x613d24, 4)
_getopt_internal, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
_getopt_internal, (ram, 0x613d20, 4) COPY (register, 0xa8, 4)
_getopt_internal, (ram, 0x613d10, 4) COPY (register, 0xa8, 4)
_getopt_internal,  ---  BRANCH (ram, 0x40fd95, 8)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fda0, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (ram, 0x613d18, 8) COPY (register, 0x30, 8)
_getopt_internal, (register, 0x28, 8) COPY (const, 0x1, 8)
_getopt_internal, (ram, 0x613d10, 4) COPY (register, 0x0, 4)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x58, 8)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x58, 8)
_getopt_internal, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x58, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x0, 4) COPY (register, 0x28, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
_getopt_internal, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
_getopt_internal, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
_getopt_internal, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
_getopt_internal, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
_getopt_internal, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
_getopt_internal, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
_getopt_internal, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  RETURN (register, 0x288, 8)
_getopt_internal, (ram, 0x613d10, 4) COPY (const, 0x1, 4)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
_getopt_internal, (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (ram, 0x613d20, 4) COPY (const, 0x1, 4)
_getopt_internal, (ram, 0x613d24, 4) COPY (const, 0x1, 4)
_getopt_internal, (ram, 0x613d30, 8) COPY (const, 0x0, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x2d, 1)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x2d, 1)
_getopt_internal, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x2d, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40ffb0, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x2b, 1)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x2b, 1)
_getopt_internal, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x2b, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40feb0, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x38, 8) COPY (const, 0x411ca0, 8)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40fbd6, 8)
_getopt_internal,  ---  CALL (ram, 0x4019c0, 8)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fdb0, 8) , (register, 0x206, 1)
_getopt_internal, (ram, 0x613d28, 4) COPY (const, 0x0, 4)
_getopt_internal, (register, 0x0, 4) COPY (ram, 0x613d10, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x10, 4) COPY (ram, 0x613d28, 4)
_getopt_internal, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0xa8, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0xa8, 4) , (register, 0x0, 4)
_getopt_internal, (unique, 0x28600, 4) INT_SUB (register, 0xa8, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40faf8, 8) , (unique, 0xc680, 1)
_getopt_internal,  ---  BRANCH (ram, 0x40fd88, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fc30, 8) , (unique, 0xc680, 1)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x4e, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x30, 4) INT_SEXT (unique, 0xbb00, 1)
_getopt_internal, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40fc22, 8)
_getopt_internal,  ---  CALL (ram, 0x401990, 8)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fa4a, 8) , (unique, 0xc680, 1)
_getopt_internal, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
_getopt_internal, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
_getopt_internal, (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x28, 8) COPY (register, 0x18, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x3d, 1)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x3d, 1)
_getopt_internal, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x3d, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x4f, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xba80, 1) COPY (register, 0x0, 1)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xba80, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fd70, 8) , (unique, 0xc680, 1)
_getopt_internal, (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
_getopt_internal, (unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
_getopt_internal, (register, 0xb0, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59300, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x410009, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x0, 8) COPY (register, 0x28, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbc80, 4) COPY (register, 0xa8, 4)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0xa0, 4) INT_XOR (register, 0xa0, 4) , (register, 0xa0, 4)
_getopt_internal, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x18, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0x18, 8)
_getopt_internal, (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x18, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd00, 4) COPY (const, 0x0, 4)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbe00, 8) COPY (const, 0x0, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbe00, 8)
_getopt_internal, (register, 0xa8, 8) COPY (register, 0x0, 8)
_getopt_internal,  ---  BRANCH (ram, 0x40fc98, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd00, 4) COPY (const, 0x1, 4)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0xb8, 8) , (const, 0x20, 8)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0xb8, 8) , (const, 0x20, 8)
_getopt_internal, (register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x20, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
_getopt_internal, (register, 0xb0, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0xa0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0xa0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59300, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fce0, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x10, 8) COPY (register, 0xa8, 8)
_getopt_internal, (register, 0x30, 8) COPY (register, 0x18, 8)
_getopt_internal, (register, 0x38, 8) COPY (register, 0xb0, 8)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40fca6, 8)
_getopt_internal,  ---  CALL (ram, 0x4017f0, 8)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fc88, 8) , (unique, 0xc680, 1)
_getopt_internal, (register, 0x38, 8) COPY (register, 0xb0, 8)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40fcb2, 8)
_getopt_internal,  ---  CALL (ram, 0x4018d0, 8)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (register, 0x18, 8)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (register, 0x18, 8)
_getopt_internal, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x18, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x28, 8) , (register, 0x0, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 8) , (register, 0x0, 8)
_getopt_internal, (unique, 0x28700, 8) INT_SUB (register, 0x28, 8) , (register, 0x0, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40ffa0, 8) , (register, 0x206, 1)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbe00, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbe00, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (unique, 0x28300, 8) INT_SUB (unique, 0xbe00, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x28300, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x28300, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (unique, 0x28300, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fc80, 8) , (unique, 0xc680, 1)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd80, 8) COPY (register, 0xb8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0xb8, 8) , (const, 0x20, 8)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0xb8, 8) , (const, 0x20, 8)
_getopt_internal, (register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x20, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
_getopt_internal, (register, 0xb0, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbc80, 4) COPY (register, 0xa0, 4)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0xa0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0xa0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59300, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fc98, 8) , (unique, 0xc680, 1)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x18, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0xa0, 4) COPY (unique, 0xbc80, 4)
_getopt_internal, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0xa8, 4) COPY (unique, 0xbc80, 4)
_getopt_internal, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59200, 4) INT_AND (register, 0xa0, 4) , (register, 0xa0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40ff00, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x98, 4) COPY (ram, 0x613cec, 4)
_getopt_internal, (register, 0x98, 8) INT_ZEXT (register, 0x98, 4)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59200, 4) INT_AND (register, 0x98, 4) , (register, 0x98, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fd2f, 8) , (register, 0x206, 1)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
_getopt_internal, (register, 0x30, 8) COPY (const, 0x411cd0, 8)
_getopt_internal, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40fd1e, 8)
_getopt_internal,  ---  CALL (ram, 0x401b10, 8)
_getopt_internal, (register, 0x0, 4) COPY (ram, 0x613d10, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x18, 8) COPY (ram, 0x613d30, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
_getopt_internal, (register, 0x38, 8) COPY (register, 0x18, 8)
_getopt_internal, (register, 0x28, 8) COPY (const, 0x3f, 8)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40fd3c, 8)
_getopt_internal,  ---  CALL (ram, 0x4018d0, 8)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (register, 0x18, 8)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (register, 0x18, 8)
_getopt_internal, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x18, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (ram, 0x613d30, 8) COPY (register, 0x0, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (ram, 0x613d10, 4) COPY (register, 0x0, 4)
_getopt_internal,  ---  BRANCH (ram, 0x40fb7d, 8)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0x28, 8) , (const, 0x1, 8)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 8) , (const, 0x1, 8)
_getopt_internal, (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x28, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (register, 0x28, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
_getopt_internal, (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 1) , (const, 0x3d, 1)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x3d, 1)
_getopt_internal, (unique, 0x27900, 1) INT_SUB (register, 0x0, 1) , (const, 0x3d, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27900, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fc48, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59000, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fd60, 8) , (unique, 0xc680, 1)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
_getopt_internal, (register, 0xb0, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59300, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fc54, 8) , (unique, 0xc680, 1)
_getopt_internal,  ---  BRANCH (ram, 0x410009, 8)
_getopt_internal, (register, 0xa8, 4) COPY (ram, 0x613d20, 4)
_getopt_internal, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
_getopt_internal, (register, 0x10, 4) COPY (ram, 0x613d24, 4)
_getopt_internal, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (register, 0xa8, 4)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (register, 0xa8, 4)
_getopt_internal, (unique, 0x28600, 4) INT_SUB (register, 0x10, 4) , (register, 0xa8, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fda0, 8) , (register, 0x206, 1)
_getopt_internal, (ram, 0x613d10, 4) COPY (register, 0x10, 4)
_getopt_internal, (register, 0x28, 8) COPY (const, 0xffffffff, 8)
_getopt_internal,  ---  BRANCH (ram, 0x40fb7d, 8)
_getopt_internal, (register, 0x0, 4) COPY (ram, 0x613d10, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (ram, 0x613d28, 4) COPY (const, 0x1, 4)
_getopt_internal, (register, 0x30, 4) COPY (ram, 0x613d24, 4)
_getopt_internal, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
_getopt_internal, (register, 0x10, 4) COPY (ram, 0x613d20, 4)
_getopt_internal, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x30, 4) , (register, 0x10, 4)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 4) , (register, 0x10, 4)
_getopt_internal, (unique, 0x28600, 4) INT_SUB (register, 0x30, 4) , (register, 0x10, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x410080, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x10, 4) , (register, 0x0, 4)
_getopt_internal, (unique, 0x28600, 4) INT_SUB (register, 0x10, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fde7, 8) , (register, 0x206, 1)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
_getopt_internal, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40fde1, 8)
_getopt_internal,  ---  CALL (ram, 0x40f8b0, 8)
_getopt_internal, (register, 0x0, 4) COPY (ram, 0x613d10, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
_getopt_internal, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (register, 0x10, 8) INT_SEXT (register, 0x0, 4)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0xa8, 4)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0xa8, 4)
_getopt_internal, (unique, 0x28600, 4) INT_SUB (register, 0x0, 4) , (register, 0xa8, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8)
_getopt_internal, (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)
_getopt_internal, (register, 0x10, 8) COPY (unique, 0x3400, 8)
_getopt_internal, (unique, 0xcc00, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fe16, 8) , (unique, 0xcc00, 1)
_getopt_internal,  ---  BRANCH (ram, 0x40fec8, 8)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0x10, 8) , (const, 0x8, 8)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x10, 8) , (const, 0x8, 8)
_getopt_internal, (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0xa8, 4)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x0, 4) , (register, 0xa8, 4)
_getopt_internal, (unique, 0x28600, 4) INT_SUB (register, 0x0, 4) , (register, 0xa8, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (ram, 0x613d10, 4) COPY (register, 0x0, 4)
_getopt_internal,  ---  CBRANCH (ram, 0x40fec8, 8) , (register, 0x206, 1)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)
_getopt_internal, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fe00, 8) , (unique, 0xc680, 1)
_getopt_internal, (unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fe00, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x10, 4) COPY (register, 0x0, 4)
_getopt_internal, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
_getopt_internal, (register, 0x0, 4) COPY (ram, 0x613d10, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal,  ---  BRANCH (ram, 0x40feca, 8)
_getopt_internal, (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x38, 4) INT_ZEXT (unique, 0xbb00, 1)
_getopt_internal, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59000, 1) INT_AND (register, 0x38, 1) , (register, 0x38, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59000, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59000, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x59000, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fb60, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x38, 1) , (const, 0x2d, 1)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x38, 1) , (const, 0x2d, 1)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (register, 0x38, 1) , (const, 0x2d, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x0, 1) COPY (register, 0x206, 1)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)
_getopt_internal, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59300, 8) INT_AND (register, 0xb8, 8) , (register, 0xb8, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal, (register, 0x10, 1) COPY (unique, 0xc680, 1)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x0, 8) INT_AND (register, 0x0, 8) , (register, 0x10, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3880, 8) INT_ADD (const, 0x1, 8) , (register, 0x30, 8)
_getopt_internal, (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
_getopt_internal, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
_getopt_internal, (register, 0x18, 8) COPY (unique, 0x3a00, 8)
_getopt_internal, (ram, 0x613d30, 8) COPY (register, 0x18, 8)
_getopt_internal,  ---  BRANCH (ram, 0x40f9f9, 8)
_getopt_internal, (register, 0x8, 4) COPY (ram, 0x613cec, 4)
_getopt_internal, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59200, 4) INT_AND (register, 0x8, 4) , (register, 0x8, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fe96, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
_getopt_internal, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
_getopt_internal, (register, 0x8, 4) COPY (register, 0x28, 4)
_getopt_internal, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
_getopt_internal, (register, 0x30, 8) COPY (const, 0x411cb0, 8)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40fe96, 8)
_getopt_internal,  ---  CALL (ram, 0x401b10, 8)
_getopt_internal, (ram, 0x613ce8, 4) COPY (register, 0x28, 4)
_getopt_internal, (register, 0x28, 8) COPY (const, 0x3f, 8)
_getopt_internal,  ---  BRANCH (ram, 0x40fb7d, 8)
_getopt_internal, (ram, 0x613d28, 4) COPY (const, 0x0, 4)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x200, 1) INT_CARRY (unique, 0xbe00, 8) , (const, 0x1, 8)
_getopt_internal, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (unique, 0xbe00, 8) , (const, 0x1, 8)
_getopt_internal, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (unique, 0xbe00, 8) INT_ADD (unique, 0xbe00, 8) , (const, 0x1, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbe00, 8)
_getopt_internal, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0xbe00, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (unique, 0xbe00, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  BRANCH (ram, 0x40fbe9, 8)
_getopt_internal, (register, 0x10, 4) COPY (register, 0x0, 4)
_getopt_internal, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0xa8, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0xa8, 4) , (register, 0x0, 4)
_getopt_internal, (unique, 0x28600, 4) INT_SUB (register, 0xa8, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (ram, 0x613d20, 4) COPY (register, 0x10, 4)
_getopt_internal, (register, 0x10, 8) COPY (const, 0x1, 8)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40faf8, 8) , (unique, 0xc680, 1)
_getopt_internal,  ---  BRANCH (ram, 0x40fd88, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)
_getopt_internal, (register, 0x28, 4) INT_SEXT (unique, 0xbb00, 1)
_getopt_internal, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
_getopt_internal, (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)
_getopt_internal, (register, 0xb0, 8) COPY (unique, 0x3100, 8)
_getopt_internal, (ram, 0x613d30, 8) COPY (register, 0xb0, 8)
_getopt_internal, (register, 0xa0, 4) COPY (register, 0x28, 4)
_getopt_internal, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
_getopt_internal,  ---  BRANCH (ram, 0x40fa5b, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x8, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x410009, 8) , (register, 0x206, 1)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x34, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0xa0, 4) COPY (unique, 0xbc80, 4)
_getopt_internal, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
_getopt_internal, (register, 0xb8, 8) COPY (register, 0x0, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (ram, 0x613d10, 4) COPY (register, 0x0, 4)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40ffc5, 8) , (register, 0x206, 1)
_getopt_internal, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x8, 8)
_getopt_internal, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x90, 4) COPY (unique, 0xbc80, 4)
_getopt_internal, (register, 0x90, 8) INT_ZEXT (register, 0x90, 4)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59200, 4) INT_AND (register, 0x90, 4) , (register, 0x90, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x4100b8, 8) , (unique, 0xc680, 1)
_getopt_internal, (register, 0x88, 4) COPY (ram, 0x613cec, 4)
_getopt_internal, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x88, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40ff84, 8) , (register, 0x206, 1)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
_getopt_internal, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x8, 8)
_getopt_internal, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
_getopt_internal, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x41014c, 8) , (register, 0x206, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
_getopt_internal, (register, 0x8, 4) INT_SEXT (unique, 0xbb00, 1)
_getopt_internal, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
_getopt_internal, (register, 0x80, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (register, 0x30, 8) COPY (const, 0x411d30, 8)
_getopt_internal, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
_getopt_internal, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ff7d, 8)
_getopt_internal,  ---  CALL (ram, 0x401b10, 8)
_getopt_internal, (register, 0x18, 8) COPY (ram, 0x613d30, 8)
_getopt_internal, (register, 0x38, 8) COPY (register, 0x18, 8)
_getopt_internal, (register, 0x28, 8) COPY (const, 0x3f, 8)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ff91, 8)
_getopt_internal,  ---  CALL (ram, 0x4018d0, 8)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (register, 0x18, 8)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (register, 0x18, 8)
_getopt_internal, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x18, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (ram, 0x613d30, 8) COPY (register, 0x0, 8)
_getopt_internal,  ---  BRANCH (ram, 0x40fb7d, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x48, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0xa8, 4) COPY (unique, 0xbc80, 4)
_getopt_internal, (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)
_getopt_internal,  ---  BRANCH (ram, 0x40ff16, 8)
_getopt_internal, (ram, 0x613d28, 4) COPY (const, 0x2, 4)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x200, 1) INT_CARRY (unique, 0xbe00, 8) , (const, 0x1, 8)
_getopt_internal, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (unique, 0xbe00, 8) , (const, 0x1, 8)
_getopt_internal, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (unique, 0xbe00, 8) INT_ADD (unique, 0xbe00, 8) , (const, 0x1, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbe00, 8)
_getopt_internal, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0xbe00, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (unique, 0xbe00, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  BRANCH (ram, 0x40fbe9, 8)
_getopt_internal, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x8, 8)
_getopt_internal, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbd00, 4) , (const, 0x1, 4)
_getopt_internal, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbd00, 4) , (const, 0x1, 4)
_getopt_internal, (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (unique, 0x28200, 4) INT_SUB (unique, 0xbd00, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x4100c8, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x38, 8) COPY (register, 0x18, 8)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40ffd8, 8)
_getopt_internal,  ---  CALL (ram, 0x4018d0, 8)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (register, 0x0, 8)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (register, 0x0, 8)
_getopt_internal, (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0x0, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x20, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (ram, 0x613d30, 8) COPY (register, 0x18, 8)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40ffef, 8) , (register, 0x206, 1)
_getopt_internal, (unique, 0xbc80, 4) COPY (register, 0xa0, 4)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbc80, 4)
_getopt_internal, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x10, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x41010a, 8) , (register, 0x206, 1)
_getopt_internal, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x18, 8)
_getopt_internal, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x10, 4) COPY (unique, 0xbc80, 4)
_getopt_internal, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
_getopt_internal, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbc80, 4) COPY (register, 0x10, 4)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbc80, 4)
_getopt_internal,  ---  BRANCH (ram, 0x40fb7d, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x1c, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x38, 4) COPY (unique, 0xbc80, 4)
_getopt_internal, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59200, 4) INT_AND (register, 0x38, 4) , (register, 0x38, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x410175, 8) , (unique, 0xc680, 1)
_getopt_internal, (register, 0x30, 4) COPY (ram, 0x613cec, 4)
_getopt_internal, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59200, 4) INT_AND (register, 0x30, 4) , (register, 0x30, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x410059, 8) , (register, 0x206, 1)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x4e, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x410201, 8) , (register, 0x206, 1)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x28, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
_getopt_internal, (register, 0x80, 8) COPY (register, 0x18, 8)
_getopt_internal, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
_getopt_internal, (register, 0x30, 8) COPY (const, 0x411dc0, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
_getopt_internal, (register, 0x8, 4) INT_SEXT (unique, 0xbb00, 1)
_getopt_internal, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x41004f, 8)
_getopt_internal,  ---  CALL (ram, 0x401b10, 8)
_getopt_internal, (register, 0x0, 4) COPY (ram, 0x613d10, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (ram, 0x613d30, 8) COPY (const, 0x411a19, 8)
_getopt_internal, (register, 0x28, 8) COPY (const, 0x3f, 8)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (ram, 0x613d10, 4) COPY (register, 0x0, 4)
_getopt_internal,  ---  BRANCH (ram, 0x40fb7d, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0x30, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0x30, 4) , (register, 0x0, 4)
_getopt_internal, (unique, 0x28600, 4) INT_SUB (register, 0x30, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fde7, 8) , (register, 0x206, 1)
_getopt_internal, (ram, 0x613d24, 4) COPY (register, 0x0, 4)
_getopt_internal,  ---  BRANCH (ram, 0x40fde7, 8)
_getopt_internal, (ram, 0x613d24, 4) COPY (register, 0x0, 4)
_getopt_internal, (register, 0x10, 4) COPY (register, 0x0, 4)
_getopt_internal, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
_getopt_internal,  ---  BRANCH (ram, 0x40fb48, 8)
_getopt_internal, (ram, 0x613d18, 8) COPY (register, 0xb0, 8)
_getopt_internal, (register, 0x200, 1) INT_CARRY (ram, 0x613d10, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (ram, 0x613d10, 4) , (const, 0x1, 4)
_getopt_internal, (ram, 0x613d10, 4) INT_ADD (ram, 0x613d10, 4) , (const, 0x1, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (ram, 0x613d10, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (ram, 0x613d10, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (ram, 0x613d10, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  BRANCH (ram, 0x40facd, 8)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0x28, 8) , (const, 0x1, 8)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x28, 8) , (const, 0x1, 8)
_getopt_internal, (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x28, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (register, 0x28, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (ram, 0x613d18, 8) COPY (register, 0x28, 8)
_getopt_internal,  ---  BRANCH (ram, 0x40ffd0, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (register, 0xa8, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (register, 0xa8, 4) , (register, 0x0, 4)
_getopt_internal, (unique, 0x28600, 4) INT_SUB (register, 0xa8, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x28600, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)
_getopt_internal, (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x410113, 8) , (unique, 0xce80, 1)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x0, 4) COPY (unique, 0xbc80, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x40, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x30, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 4) , (const, 0x2, 4)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 4) , (const, 0x2, 4)
_getopt_internal, (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x2, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (ram, 0x613d10, 4) COPY (register, 0x0, 4)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
_getopt_internal, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (unique, 0x3880, 8) INT_ADD (const, 0x8, 8) , (register, 0x0, 8)
_getopt_internal, (unique, 0x3900, 8) INT_MULT (register, 0x30, 8) , (const, 0x1, 8)
_getopt_internal, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)
_getopt_internal, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (ram, 0x613d18, 8) COPY (register, 0x0, 8)
_getopt_internal,  ---  BRANCH (ram, 0x40ffd0, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x4100a5, 8) , (unique, 0xc680, 1)
_getopt_internal, (ram, 0x613d18, 8) COPY (const, 0x0, 8)
_getopt_internal,  ---  BRANCH (ram, 0x40facd, 8)
_getopt_internal, (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x18, 8)
_getopt_internal, (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)
_getopt_internal, (register, 0x28, 4) COPY (unique, 0xbc80, 4)
_getopt_internal, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
_getopt_internal,  ---  BRANCH (ram, 0x40fb7d, 8)
_getopt_internal, (register, 0x80, 4) COPY (ram, 0x613cec, 4)
_getopt_internal, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59200, 4) INT_AND (register, 0x80, 4) , (register, 0x80, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x41022d, 8) , (unique, 0xc680, 1)
_getopt_internal, (register, 0x38, 8) COPY (register, 0x18, 8)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
_getopt_internal, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x41012d, 8)
_getopt_internal,  ---  CALL (ram, 0x4018d0, 8)
_getopt_internal, (register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (register, 0x18, 8)
_getopt_internal, (register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (register, 0x18, 8)
_getopt_internal, (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x18, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (ram, 0x613d30, 8) COPY (register, 0x0, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x3a, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x3a, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x3a, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal, (register, 0x28, 1) COPY (unique, 0xc680, 1)
_getopt_internal, (unique, 0x3880, 8) INT_ADD (const, 0x3a, 8) , (register, 0x28, 8)
_getopt_internal, (unique, 0x3900, 8) INT_MULT (register, 0x28, 8) , (const, 0x4, 8)
_getopt_internal, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
_getopt_internal, (register, 0x28, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4)
_getopt_internal, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
_getopt_internal,  ---  BRANCH (ram, 0x40fb7d, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)
_getopt_internal, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
_getopt_internal, (register, 0x30, 8) COPY (const, 0x411cf8, 8)
_getopt_internal, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x410169, 8)
_getopt_internal,  ---  CALL (ram, 0x401b10, 8)
_getopt_internal, (register, 0x18, 8) COPY (ram, 0x613d30, 8)
_getopt_internal,  ---  BRANCH (ram, 0x40ff84, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x4e, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x2d, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x2d, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2d, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x4101f3, 8) , (register, 0x206, 1)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x4f, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0xa0, 4) INT_ZEXT (unique, 0xbb00, 1)
_getopt_internal, (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (register, 0x28, 4) INT_SEXT (register, 0xa0, 1)
_getopt_internal, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
_getopt_internal, (register, 0x30, 4) COPY (register, 0x28, 4)
_getopt_internal, (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x410192, 8)
_getopt_internal,  ---  CALL (ram, 0x401990, 8)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
_getopt_internal, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x40fa50, 8) , (unique, 0xc680, 1)
_getopt_internal, (register, 0x200, 1) INT_LESS (ram, 0x613cec, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (ram, 0x613cec, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x28200, 4) INT_SUB (ram, 0x613cec, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x28200, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x28200, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x28200, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x41002a, 8) , (unique, 0xc680, 1)
_getopt_internal,  ---  BRANCH (ram, 0x410059, 8)
_getopt_internal, (register, 0x10, 4) COPY (ram, 0x613cec, 4)
_getopt_internal, (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59200, 4) INT_AND (register, 0x10, 4) , (register, 0x10, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x4101d6, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
_getopt_internal, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
_getopt_internal, (register, 0x8, 4) COPY (register, 0x28, 4)
_getopt_internal, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
_getopt_internal, (register, 0x30, 8) COPY (const, 0x411de8, 8)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4101d6, 8)
_getopt_internal,  ---  CALL (ram, 0x401b10, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (ram, 0x613ce8, 4) COPY (register, 0x28, 4)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x28, 4) INT_XOR (register, 0x28, 4) , (register, 0x28, 4)
_getopt_internal, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
_getopt_internal, (register, 0x200, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x3a, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
_getopt_internal, (register, 0x20b, 1) INT_SBORROW (unique, 0xbb00, 1) , (const, 0x3a, 1)
_getopt_internal, (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)
_getopt_internal, (unique, 0x27d00, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x3a, 1)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x27d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0x12c00, 1) INT_AND (unique, 0x27d00, 1) , (const, 0xff, 1)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 1)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
_getopt_internal, (register, 0x28, 1) COPY (unique, 0xc680, 1)
_getopt_internal, (unique, 0x3880, 8) INT_ADD (const, 0x3a, 8) , (register, 0x28, 8)
_getopt_internal, (unique, 0x3900, 8) INT_MULT (register, 0x28, 8) , (const, 0x4, 8)
_getopt_internal, (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)
_getopt_internal, (register, 0x28, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4)
_getopt_internal, (register, 0x28, 8) INT_ZEXT (register, 0x28, 4)
_getopt_internal,  ---  BRANCH (ram, 0x40facd, 8)
_getopt_internal, (register, 0x0, 4) COPY (ram, 0x613cec, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (unique, 0x59200, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal,  ---  CBRANCH (ram, 0x410059, 8) , (register, 0x206, 1)
_getopt_internal, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
_getopt_internal, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
_getopt_internal, (register, 0x8, 8) COPY (register, 0x18, 8)
_getopt_internal, (register, 0x30, 8) COPY (const, 0x411d98, 8)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x41021e, 8)
_getopt_internal,  ---  CALL (ram, 0x401b10, 8)
_getopt_internal, (register, 0x0, 4) COPY (ram, 0x613d10, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x30, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbc80, 4) COPY (register, 0x0, 4)
_getopt_internal,  ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbc80, 4)
_getopt_internal,  ---  BRANCH (ram, 0x410059, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x20, 8)
_getopt_internal, (register, 0x0, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (unique, 0x3800, 8) INT_ADD (const, 0x38, 8) , (register, 0x20, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)
_getopt_internal, (register, 0x38, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (register, 0x30, 8) COPY (const, 0x411d68, 8)
_getopt_internal, (register, 0x10, 8) COPY (ram, 0x6134d8, 8)
_getopt_internal, (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x8, 8)
_getopt_internal, (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)
_getopt_internal, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
_getopt_internal, (register, 0x8, 8) COPY (unique, 0xbd80, 8)
_getopt_internal, (register, 0x38, 8) COPY (ram, 0x613cf8, 8)
_getopt_internal, (register, 0x200, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x20b, 1) COPY (const, 0x0, 1)
_getopt_internal, (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)
_getopt_internal, (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)
_getopt_internal, (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)
_getopt_internal, (unique, 0x12c00, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)
_getopt_internal, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
_getopt_internal, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_getopt_internal, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_getopt_internal, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_getopt_internal,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x410254, 8)
_getopt_internal,  ---  CALL (ram, 0x401b10, 8)
_getopt_internal, (register, 0x18, 8) COPY (ram, 0x613d30, 8)
_getopt_internal,  ---  BRANCH (ram, 0x410123, 8)
gnu_getopt, (register, 0x200, 1) COPY (const, 0x0, 1)
gnu_getopt, (register, 0x20b, 1) COPY (const, 0x0, 1)
gnu_getopt, (register, 0x88, 4) INT_XOR (register, 0x88, 4) , (register, 0x88, 4)
gnu_getopt, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
gnu_getopt, (register, 0x207, 1) INT_SLESS (register, 0x88, 4) , (const, 0x0, 4)
gnu_getopt, (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)
gnu_getopt, (unique, 0x12c00, 4) INT_AND (register, 0x88, 4) , (const, 0xff, 4)
gnu_getopt, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
gnu_getopt, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
gnu_getopt, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
gnu_getopt, (register, 0x200, 1) COPY (const, 0x0, 1)
gnu_getopt, (register, 0x20b, 1) COPY (const, 0x0, 1)
gnu_getopt, (register, 0x80, 4) INT_XOR (register, 0x80, 4) , (register, 0x80, 4)
gnu_getopt, (register, 0x80, 8) INT_ZEXT (register, 0x80, 4)
gnu_getopt, (register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)
gnu_getopt, (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)
gnu_getopt, (unique, 0x12c00, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)
gnu_getopt, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
gnu_getopt, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
gnu_getopt, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
gnu_getopt, (register, 0x200, 1) COPY (const, 0x0, 1)
gnu_getopt, (register, 0x20b, 1) COPY (const, 0x0, 1)
gnu_getopt, (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x8, 4)
gnu_getopt, (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)
gnu_getopt, (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
gnu_getopt, (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
gnu_getopt, (unique, 0x12c00, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)
gnu_getopt, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
gnu_getopt, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
gnu_getopt, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
gnu_getopt,  ---  BRANCH (ram, 0x40f9a0, 8)
getopt_long, (register, 0x200, 1) COPY (const, 0x0, 1)
getopt_long, (register, 0x20b, 1) COPY (const, 0x0, 1)
getopt_long, (register, 0x88, 4) INT_XOR (register, 0x88, 4) , (register, 0x88, 4)
getopt_long, (register, 0x88, 8) INT_ZEXT (register, 0x88, 4)
getopt_long, (register, 0x207, 1) INT_SLESS (register, 0x88, 4) , (const, 0x0, 4)
getopt_long, (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)
getopt_long, (unique, 0x12c00, 4) INT_AND (register, 0x88, 4) , (const, 0xff, 4)
getopt_long, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
getopt_long, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
getopt_long, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
getopt_long,  ---  BRANCH (ram, 0x40f9a0, 8)
getopt_long_only, (register, 0x88, 8) COPY (const, 0x1, 8)
getopt_long_only,  ---  BRANCH (ram, 0x40f9a0, 8)
xmalloc, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
xmalloc, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
xmalloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xmalloc, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
xmalloc, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
xmalloc, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
xmalloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
xmalloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xmalloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xmalloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xmalloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x410299, 8)
xmalloc,  ---  CALL (ram, 0x401800, 8)
xmalloc, (register, 0x200, 1) COPY (const, 0x0, 1)
xmalloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
xmalloc, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
xmalloc, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
xmalloc, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
xmalloc, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
xmalloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
xmalloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xmalloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xmalloc,  ---  CBRANCH (ram, 0x4102a3, 8) , (register, 0x206, 1)
xmalloc, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
xmalloc, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
xmalloc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
xmalloc, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
xmalloc, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
xmalloc, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
xmalloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
xmalloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xmalloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xmalloc, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
xmalloc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
xmalloc,  ---  RETURN (register, 0x288, 8)
xmalloc, (register, 0x38, 8) COPY (const, 0x411e10, 8)
xmalloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xmalloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4102ad, 8)
xmalloc,  ---  CALL (ram, 0x401af0, 8)
xmalloc, (register, 0x38, 8) COPY (const, 0x1, 8)
xmalloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xmalloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4102b7, 8)
xmalloc,  ---  CALL (ram, 0x4017a0, 8)
xrealloc, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
xrealloc, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
xrealloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xrealloc, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
xrealloc, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
xrealloc, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
xrealloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
xrealloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xrealloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xrealloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xrealloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4102c9, 8)
xrealloc,  ---  CALL (ram, 0x401ac0, 8)
xrealloc, (register, 0x200, 1) COPY (const, 0x0, 1)
xrealloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
xrealloc, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
xrealloc, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
xrealloc, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
xrealloc, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
xrealloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
xrealloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xrealloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xrealloc,  ---  CBRANCH (ram, 0x4102d3, 8) , (register, 0x206, 1)
xrealloc, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
xrealloc, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
xrealloc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
xrealloc, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
xrealloc, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
xrealloc, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
xrealloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
xrealloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xrealloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xrealloc, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
xrealloc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
xrealloc,  ---  RETURN (register, 0x288, 8)
xrealloc, (register, 0x38, 8) COPY (const, 0x411e10, 8)
xrealloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xrealloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4102dd, 8)
xrealloc,  ---  CALL (ram, 0x401af0, 8)
xrealloc, (register, 0x38, 8) COPY (const, 0x1, 8)
xrealloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xrealloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4102e7, 8)
xrealloc,  ---  CALL (ram, 0x4017a0, 8)
xcalloc, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
xcalloc, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
xcalloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xcalloc, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
xcalloc, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
xcalloc, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
xcalloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
xcalloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xcalloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xcalloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xcalloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4102f9, 8)
xcalloc,  ---  CALL (ram, 0x401a60, 8)
xcalloc, (register, 0x200, 1) COPY (const, 0x0, 1)
xcalloc, (register, 0x20b, 1) COPY (const, 0x0, 1)
xcalloc, (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)
xcalloc, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
xcalloc, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
xcalloc, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
xcalloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
xcalloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xcalloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xcalloc,  ---  CBRANCH (ram, 0x410303, 8) , (register, 0x206, 1)
xcalloc, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
xcalloc, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
xcalloc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
xcalloc, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
xcalloc, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
xcalloc, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
xcalloc, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
xcalloc, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
xcalloc, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
xcalloc, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
xcalloc, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
xcalloc,  ---  RETURN (register, 0x288, 8)
xcalloc, (register, 0x38, 8) COPY (const, 0x411e10, 8)
xcalloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xcalloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x41030d, 8)
xcalloc,  ---  CALL (ram, 0x401af0, 8)
xcalloc, (register, 0x38, 8) COPY (const, 0x1, 8)
xcalloc, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xcalloc,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x410317, 8)
xcalloc,  ---  CALL (ram, 0x4017a0, 8)
xstrdup, (unique, 0xe780, 8) COPY (register, 0x18, 8)
xstrdup, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xstrdup,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
xstrdup, (register, 0x18, 8) COPY (register, 0x38, 8)
xstrdup, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xstrdup,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x410329, 8)
xstrdup,  ---  CALL (ram, 0x4018d0, 8)
xstrdup, (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)
xstrdup, (register, 0x38, 8) COPY (unique, 0x3100, 8)
xstrdup, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xstrdup,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x410332, 8)
xstrdup,  ---  CALL (ram, 0x410290, 8)
xstrdup, (register, 0x30, 8) COPY (register, 0x18, 8)
xstrdup, (register, 0x38, 8) COPY (register, 0x0, 8)
xstrdup, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
xstrdup,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x41033d, 8)
xstrdup,  ---  CALL (ram, 0x401a40, 8)
xstrdup, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
xstrdup, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
xstrdup, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
xstrdup, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
xstrdup,  ---  RETURN (register, 0x288, 8)
__libc_csu_init, (unique, 0xe780, 8) COPY (register, 0xb8, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__libc_csu_init, (register, 0xb8, 4) COPY (register, 0x38, 4)
__libc_csu_init, (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)
__libc_csu_init, (unique, 0xe780, 8) COPY (register, 0xb0, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__libc_csu_init, (register, 0xb0, 8) COPY (register, 0x30, 8)
__libc_csu_init, (unique, 0xe780, 8) COPY (register, 0xa8, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__libc_csu_init, (register, 0xa8, 8) COPY (register, 0x10, 8)
__libc_csu_init, (unique, 0xe780, 8) COPY (register, 0xa0, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__libc_csu_init, (register, 0xa0, 8) COPY (const, 0x613000, 8)
__libc_csu_init, (unique, 0xe780, 8) COPY (register, 0x28, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__libc_csu_init, (register, 0x28, 8) COPY (const, 0x613008, 8)
__libc_csu_init, (unique, 0xe780, 8) COPY (register, 0x18, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xe780, 8)
__libc_csu_init, (register, 0x200, 1) INT_LESS (register, 0x28, 8) , (register, 0xa0, 8)
__libc_csu_init, (register, 0x20b, 1) INT_SBORROW (register, 0x28, 8) , (register, 0xa0, 8)
__libc_csu_init, (register, 0x28, 8) INT_SUB (register, 0x28, 8) , (register, 0xa0, 8)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x28, 8) , (const, 0x0, 8)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x12c00, 8) INT_AND (register, 0x28, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init, (register, 0x200, 1) COPY (const, 0x0, 1)
__libc_csu_init, (register, 0x20b, 1) COPY (const, 0x0, 1)
__libc_csu_init, (register, 0x18, 4) INT_XOR (register, 0x18, 4) , (register, 0x18, 4)
__libc_csu_init, (register, 0x18, 8) INT_ZEXT (register, 0x18, 4)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x12c00, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 4)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x51b80, 4) INT_AND (const, 0x3, 4) , (const, 0x3f, 4)
__libc_csu_init, (unique, 0x51c00, 8) COPY (register, 0x28, 8)
__libc_csu_init, (register, 0x28, 8) INT_SRIGHT (register, 0x28, 8) , (unique, 0x51b80, 4)
__libc_csu_init, (unique, 0x15980, 1) INT_NOTEQUAL (unique, 0x51b80, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x15a00, 4) INT_SUB (unique, 0x51b80, 4) , (const, 0x1, 4)
__libc_csu_init, (unique, 0x15a80, 8) INT_SRIGHT (unique, 0x51c00, 8) , (unique, 0x15a00, 4)
__libc_csu_init, (unique, 0x15b00, 8) INT_AND (unique, 0x15a80, 8) , (const, 0x1, 8)
__libc_csu_init, (unique, 0x15c00, 1) INT_NOTEQUAL (unique, 0x15b00, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x15c80, 1) BOOL_NEGATE (unique, 0x15980, 1)
__libc_csu_init, (unique, 0x15d00, 1) INT_AND (unique, 0x15c80, 1) , (register, 0x200, 1)
__libc_csu_init, (unique, 0x15d80, 1) INT_AND (unique, 0x15980, 1) , (unique, 0x15c00, 1)
__libc_csu_init, (register, 0x200, 1) INT_OR (unique, 0x15d00, 1) , (unique, 0x15d80, 1)
__libc_csu_init, (unique, 0x15f00, 1) INT_EQUAL (unique, 0x51b80, 4) , (const, 0x1, 4)
__libc_csu_init, (unique, 0x15f80, 1) BOOL_NEGATE (unique, 0x15f00, 1)
__libc_csu_init, (register, 0x20b, 1) INT_AND (unique, 0x15f80, 1) , (register, 0x20b, 1)
__libc_csu_init, (unique, 0x12e80, 1) INT_NOTEQUAL (unique, 0x51b80, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x12f80, 1) INT_SLESS (register, 0x28, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x13000, 1) BOOL_NEGATE (unique, 0x12e80, 1)
__libc_csu_init, (unique, 0x13080, 1) INT_AND (unique, 0x13000, 1) , (register, 0x207, 1)
__libc_csu_init, (unique, 0x13100, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x12f80, 1)
__libc_csu_init, (register, 0x207, 1) INT_OR (unique, 0x13080, 1) , (unique, 0x13100, 1)
__libc_csu_init, (unique, 0x13280, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x13300, 1) BOOL_NEGATE (unique, 0x12e80, 1)
__libc_csu_init, (unique, 0x13380, 1) INT_AND (unique, 0x13300, 1) , (register, 0x206, 1)
__libc_csu_init, (unique, 0x13400, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13280, 1)
__libc_csu_init, (register, 0x206, 1) INT_OR (unique, 0x13380, 1) , (unique, 0x13400, 1)
__libc_csu_init, (unique, 0x13500, 8) INT_AND (register, 0x28, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x13580, 1) POPCOUNT (unique, 0x13500, 8)
__libc_csu_init, (unique, 0x13600, 1) INT_AND (unique, 0x13580, 1) , (const, 0x1, 1)
__libc_csu_init, (unique, 0x13700, 1) INT_EQUAL (unique, 0x13600, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x13780, 1) BOOL_NEGATE (unique, 0x12e80, 1)
__libc_csu_init, (unique, 0x13800, 1) INT_AND (unique, 0x13780, 1) , (register, 0x202, 1)
__libc_csu_init, (unique, 0x13880, 1) INT_AND (unique, 0x12e80, 1) , (unique, 0x13700, 1)
__libc_csu_init, (register, 0x202, 1) INT_OR (unique, 0x13800, 1) , (unique, 0x13880, 1)
__libc_csu_init, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x410373, 8)
__libc_csu_init,  ---  CALL (ram, 0x4016b8, 8)
__libc_csu_init, (register, 0x200, 1) COPY (const, 0x0, 1)
__libc_csu_init, (register, 0x20b, 1) COPY (const, 0x0, 1)
__libc_csu_init, (unique, 0x59300, 8) INT_AND (register, 0x28, 8) , (register, 0x28, 8)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (unique, 0x59300, 8) , (const, 0x0, 8)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x12c00, 8) INT_AND (unique, 0x59300, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init,  ---  CBRANCH (ram, 0x410396, 8) , (register, 0x206, 1)
__libc_csu_init, (unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)
__libc_csu_init, (unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)
__libc_csu_init, (register, 0x10, 8) COPY (register, 0xa8, 8)
__libc_csu_init, (register, 0x30, 8) COPY (register, 0xb0, 8)
__libc_csu_init, (register, 0x38, 4) COPY (register, 0xb8, 4)
__libc_csu_init, (register, 0x38, 8) INT_ZEXT (register, 0x38, 4)
__libc_csu_init, (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x8, 8)
__libc_csu_init, (unique, 0x3400, 8) INT_ADD (register, 0xa0, 8) , (unique, 0x3300, 8)
__libc_csu_init, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x41038d, 8)
__libc_csu_init, (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)
__libc_csu_init,  ---  CALLIND (unique, 0xbd80, 8)
__libc_csu_init, (register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x1, 8)
__libc_csu_init, (register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x1, 8)
__libc_csu_init, (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x12c00, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init, (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (register, 0x28, 8)
__libc_csu_init, (register, 0x20b, 1) INT_SBORROW (register, 0x18, 8) , (register, 0x28, 8)
__libc_csu_init, (unique, 0x28700, 8) INT_SUB (register, 0x18, 8) , (register, 0x28, 8)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (unique, 0x28700, 8) , (const, 0x0, 8)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x12c00, 8) INT_AND (unique, 0x28700, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1)
__libc_csu_init,  ---  CBRANCH (ram, 0x410380, 8) , (unique, 0xc680, 1)
__libc_csu_init, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
__libc_csu_init, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
__libc_csu_init, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
__libc_csu_init, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
__libc_csu_init, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
__libc_csu_init, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
__libc_csu_init, (register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_init, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_init,  ---  RETURN (register, 0x288, 8)
__libc_csu_fini, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
__libc_csu_fini, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
__libc_csu_fini,  ---  RETURN (register, 0x288, 8)
_fini, (register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x8, 8)
_fini, (register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x8, 8)
_fini, (register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)
_fini, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
_fini, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
_fini, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
_fini, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_fini, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_fini, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_fini, (register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)
_fini, (register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)
_fini, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_fini, (register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)
_fini, (register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)
_fini, (unique, 0x12c00, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)
_fini, (unique, 0x12c80, 1) POPCOUNT (unique, 0x12c00, 8)
_fini, (unique, 0x12d00, 1) INT_AND (unique, 0x12c80, 1) , (const, 0x1, 1)
_fini, (register, 0x202, 1) INT_EQUAL (unique, 0x12d00, 1) , (const, 0x0, 1)
_fini, (register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)
_fini, (register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)
_fini,  ---  RETURN (register, 0x288, 8)
