
void __regparm3 plot_errorbar(Multigrapher *multigrapher,Point *p)

{
  double dVar1;
  double dVar2;
  double dVar3;
  double dVar4;
  double dVar5;
  double dVar6;
  double dVar7;
  double dVar8;
  double dVar9;
  double dVar10;
  double dVar11;
  double dVar12;
  double dVar13;
  bool bVar14;
  bool bVar15;
  undefined4 local_3c;
  undefined4 uStack56;
  double local_34;
  double local_2c;
  undefined4 local_24;
  undefined4 uStack32;
  undefined4 local_1c;
  undefined4 uStack24;
  
  if ((p->have_x_errorbar != false) || (p->have_y_errorbar != false)) {
    pl_savestate_r(multigrapher->plotter);
    pl_linemod_r(multigrapher->plotter,"solid");
    if (p->have_x_errorbar != false) {
      dVar1 = (multigrapher->y_trans).output_min;
      bVar14 = (multigrapher->y_trans).reverse;
      dVar2 = (multigrapher->y_trans).squeezed_min;
      if (bVar14 == false) {
        dVar7 = (p->y - (multigrapher->y_trans).input_min) / (multigrapher->y_trans).input_range;
        local_2c = dVar7;
      }
      else {
        local_2c = (p->y - (multigrapher->y_trans).input_min) / (multigrapher->y_trans).input_range;
        dVar7 = 1.0 - local_2c;
      }
      dVar3 = (multigrapher->y_trans).squeezed_range;
      dVar4 = (multigrapher->y_trans).output_range;
      dVar5 = (multigrapher->x_trans).output_range;
      dVar6 = (multigrapher->x_trans).squeezed_range;
      dVar9 = dVar5 * dVar6;
      dVar12 = dVar3 * dVar4;
      dVar8 = dVar9;
      if (dVar12 <= dVar9) {
        dVar8 = dVar12;
      }
      bVar15 = (multigrapher->x_trans).reverse;
      dVar13 = p->symbol_size * dVar8 * 0.5 + (dVar7 * dVar3 + dVar2) * dVar4 + dVar1;
      dVar7 = (multigrapher->x_trans).output_min;
      dVar8 = (multigrapher->x_trans).squeezed_min;
      if (bVar15 == false) {
        dVar10 = (p->xmin - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range
        ;
        dVar11 = dVar10;
      }
      else {
        dVar10 = (p->xmin - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range
        ;
        dVar11 = 1.0 - dVar10;
      }
      if (bVar14 != false) {
        local_2c = 1.0 - local_2c;
      }
      if (dVar12 <= dVar9) {
        dVar9 = dVar12;
      }
      if (bVar15 != false) {
        dVar10 = 1.0 - dVar10;
      }
      uStack24 = (undefined4)((ulonglong)dVar13 >> 0x20);
      local_1c = SUB84(dVar13,0);
      pl_fline_r(multigrapher->plotter,(dVar6 * dVar10 + dVar8) * dVar5 + dVar7,
                 ((dVar3 * local_2c + dVar2) * dVar4 + dVar1) - dVar9 * p->symbol_size * 0.5,
                 (dVar11 * dVar6 + dVar8) * dVar5 + dVar7,local_1c,uStack24);
      bVar14 = (multigrapher->y_trans).reverse;
      dVar1 = (multigrapher->y_trans).output_min;
      dVar2 = (multigrapher->y_trans).squeezed_min;
      if (bVar14 == false) {
        dVar7 = (p->y - (multigrapher->y_trans).input_min) / (multigrapher->y_trans).input_range;
        dVar3 = dVar7;
      }
      else {
        dVar7 = (p->y - (multigrapher->y_trans).input_min) / (multigrapher->y_trans).input_range;
        dVar3 = 1.0 - dVar7;
      }
      dVar4 = (multigrapher->y_trans).squeezed_range;
      bVar15 = (multigrapher->x_trans).reverse;
      dVar5 = (multigrapher->y_trans).output_range;
      dVar12 = (dVar3 * dVar4 + dVar2) * dVar5 + dVar1;
      dVar3 = (multigrapher->x_trans).output_min;
      dVar6 = (multigrapher->x_trans).squeezed_min;
      dVar8 = (multigrapher->x_trans).input_min;
      dVar9 = (multigrapher->x_trans).input_range;
      dVar13 = (p->xmax - dVar8) / dVar9;
      if (bVar15 != false) {
        dVar13 = 1.0 - dVar13;
      }
      dVar10 = (multigrapher->x_trans).squeezed_range;
      dVar11 = (multigrapher->x_trans).output_range;
      if (bVar14 != false) {
        dVar7 = 1.0 - dVar7;
      }
      dVar9 = (p->xmin - dVar8) / dVar9;
      if (bVar15 != false) {
        dVar9 = 1.0 - dVar9;
      }
      uStack56 = (undefined4)((ulonglong)dVar12 >> 0x20);
      local_3c = SUB84(dVar12,0);
      pl_fline_r(multigrapher->plotter,(dVar10 * dVar9 + dVar6) * dVar11 + dVar3,
                 (dVar4 * dVar7 + dVar2) * dVar5 + dVar1,(dVar13 * dVar10 + dVar6) * dVar11 + dVar3,
                 local_3c,uStack56);
      dVar1 = (multigrapher->y_trans).output_min;
      bVar14 = (multigrapher->y_trans).reverse;
      dVar2 = (multigrapher->y_trans).squeezed_min;
      if (bVar14 == false) {
        dVar7 = (p->y - (multigrapher->y_trans).input_min) / (multigrapher->y_trans).input_range;
        local_2c = dVar7;
      }
      else {
        local_2c = (p->y - (multigrapher->y_trans).input_min) / (multigrapher->y_trans).input_range;
        dVar7 = 1.0 - local_2c;
      }
      dVar3 = (multigrapher->y_trans).squeezed_range;
      dVar4 = (multigrapher->y_trans).output_range;
      dVar5 = (multigrapher->x_trans).output_range;
      dVar6 = (multigrapher->x_trans).squeezed_range;
      dVar9 = dVar5 * dVar6;
      dVar12 = dVar3 * dVar4;
      dVar8 = dVar9;
      if (dVar12 <= dVar9) {
        dVar8 = dVar12;
      }
      bVar15 = (multigrapher->x_trans).reverse;
      dVar13 = p->symbol_size * dVar8 * 0.5 + (dVar7 * dVar3 + dVar2) * dVar4 + dVar1;
      dVar7 = (multigrapher->x_trans).output_min;
      dVar8 = (multigrapher->x_trans).squeezed_min;
      if (bVar15 == false) {
        dVar10 = (p->xmax - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range
        ;
        dVar11 = dVar10;
      }
      else {
        dVar10 = (p->xmax - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range
        ;
        dVar11 = 1.0 - dVar10;
      }
      if (bVar14 != false) {
        local_2c = 1.0 - local_2c;
      }
      if (dVar12 <= dVar9) {
        dVar9 = dVar12;
      }
      if (bVar15 != false) {
        dVar10 = 1.0 - dVar10;
      }
      uStack24 = (undefined4)((ulonglong)dVar13 >> 0x20);
      local_1c = SUB84(dVar13,0);
      pl_fline_r(multigrapher->plotter,(dVar6 * dVar10 + dVar8) * dVar5 + dVar7,
                 ((dVar3 * local_2c + dVar2) * dVar4 + dVar1) - dVar9 * p->symbol_size * 0.5,
                 (dVar11 * dVar6 + dVar8) * dVar5 + dVar7,local_1c,uStack24);
    }
    if (p->have_y_errorbar != false) {
      dVar1 = (multigrapher->y_trans).output_min;
      bVar14 = (multigrapher->y_trans).reverse;
      dVar2 = (multigrapher->y_trans).squeezed_min;
      if (bVar14 == false) {
        dVar7 = (p->ymin - (multigrapher->y_trans).input_min) / (multigrapher->y_trans).input_range;
        local_34 = dVar7;
      }
      else {
        local_34 = (p->ymin - (multigrapher->y_trans).input_min) /
                   (multigrapher->y_trans).input_range;
        dVar7 = 1.0 - local_34;
      }
      dVar3 = (multigrapher->y_trans).squeezed_range;
      bVar15 = (multigrapher->x_trans).reverse;
      dVar4 = (multigrapher->y_trans).output_range;
      dVar6 = (dVar7 * dVar3 + dVar2) * dVar4 + dVar1;
      dVar7 = (multigrapher->x_trans).output_min;
      dVar5 = (multigrapher->x_trans).squeezed_min;
      if (bVar15 == false) {
        dVar8 = (p->x - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range;
        local_2c = dVar8;
      }
      else {
        local_2c = (p->x - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range;
        dVar8 = 1.0 - local_2c;
      }
      dVar9 = (multigrapher->x_trans).squeezed_range;
      dVar12 = (multigrapher->x_trans).output_range;
      dVar11 = dVar9 * dVar12;
      dVar13 = dVar3 * dVar4;
      dVar10 = dVar11;
      if (dVar13 <= dVar11) {
        dVar10 = dVar13;
      }
      if (bVar14 != false) {
        local_34 = 1.0 - local_34;
      }
      if (bVar15 != false) {
        local_2c = 1.0 - local_2c;
      }
      if (dVar13 <= dVar11) {
        dVar11 = dVar13;
      }
      uStack32 = (undefined4)((ulonglong)dVar6 >> 0x20);
      local_24 = SUB84(dVar6,0);
      pl_fline_r(multigrapher->plotter,
                 ((dVar9 * local_2c + dVar5) * dVar12 + dVar7) - dVar11 * p->symbol_size * 0.5,
                 (dVar3 * local_34 + dVar2) * dVar4 + dVar1,
                 p->symbol_size * dVar10 * 0.5 + (dVar8 * dVar9 + dVar5) * dVar12 + dVar7,local_24,
                 uStack32);
      dVar1 = (multigrapher->y_trans).output_min;
      bVar14 = (multigrapher->y_trans).reverse;
      dVar2 = (multigrapher->y_trans).squeezed_min;
      dVar7 = (multigrapher->y_trans).input_min;
      if (bVar14 == false) {
        local_34 = (multigrapher->y_trans).input_range;
        dVar3 = (p->ymax - dVar7) / local_34;
      }
      else {
        local_34 = (multigrapher->y_trans).input_range;
        dVar3 = 1.0 - (p->ymax - dVar7) / local_34;
      }
      dVar4 = (multigrapher->y_trans).squeezed_range;
      bVar15 = (multigrapher->x_trans).reverse;
      dVar5 = (multigrapher->y_trans).output_range;
      dVar8 = (dVar3 * dVar4 + dVar2) * dVar5 + dVar1;
      dVar3 = (multigrapher->x_trans).output_min;
      dVar6 = (multigrapher->x_trans).squeezed_min;
      if (bVar15 == false) {
        dVar9 = (p->x - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range;
        dVar12 = dVar9;
      }
      else {
        dVar9 = (p->x - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range;
        dVar12 = 1.0 - dVar9;
      }
      dVar13 = (multigrapher->x_trans).squeezed_range;
      dVar10 = (multigrapher->x_trans).output_range;
      local_34 = (p->ymin - dVar7) / local_34;
      if (bVar14 != false) {
        local_34 = 1.0 - local_34;
      }
      if (bVar15 != false) {
        dVar9 = 1.0 - dVar9;
      }
      uStack56 = (undefined4)((ulonglong)dVar8 >> 0x20);
      local_3c = SUB84(dVar8,0);
      pl_fline_r(multigrapher->plotter,dVar3 + (dVar13 * dVar9 + dVar6) * dVar10,
                 (local_34 * dVar4 + dVar2) * dVar5 + dVar1,
                 (dVar12 * dVar13 + dVar6) * dVar10 + dVar3,local_3c,uStack56);
      dVar1 = (multigrapher->y_trans).output_min;
      bVar14 = (multigrapher->y_trans).reverse;
      dVar2 = (multigrapher->y_trans).squeezed_min;
      if (bVar14 == false) {
        dVar7 = (p->ymax - (multigrapher->y_trans).input_min) / (multigrapher->y_trans).input_range;
        local_34 = dVar7;
      }
      else {
        local_34 = (p->ymax - (multigrapher->y_trans).input_min) /
                   (multigrapher->y_trans).input_range;
        dVar7 = 1.0 - local_34;
      }
      dVar3 = (multigrapher->y_trans).squeezed_range;
      bVar15 = (multigrapher->x_trans).reverse;
      dVar4 = (multigrapher->y_trans).output_range;
      dVar6 = (dVar7 * dVar3 + dVar2) * dVar4 + dVar1;
      dVar7 = (multigrapher->x_trans).output_min;
      dVar5 = (multigrapher->x_trans).squeezed_min;
      if (bVar15 == false) {
        dVar8 = (p->x - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range;
        local_2c = dVar8;
      }
      else {
        local_2c = (p->x - (multigrapher->x_trans).input_min) / (multigrapher->x_trans).input_range;
        dVar8 = 1.0 - local_2c;
      }
      dVar9 = (multigrapher->x_trans).squeezed_range;
      dVar12 = (multigrapher->x_trans).output_range;
      dVar11 = dVar9 * dVar12;
      dVar13 = dVar3 * dVar4;
      dVar10 = dVar11;
      if (dVar13 <= dVar11) {
        dVar10 = dVar13;
      }
      if (bVar14 != false) {
        local_34 = 1.0 - local_34;
      }
      if (bVar15 != false) {
        local_2c = 1.0 - local_2c;
      }
      if (dVar13 <= dVar11) {
        dVar11 = dVar13;
      }
      uStack32 = (undefined4)((ulonglong)dVar6 >> 0x20);
      local_24 = SUB84(dVar6,0);
      pl_fline_r(multigrapher->plotter,
                 ((dVar9 * local_2c + dVar5) * dVar12 + dVar7) - dVar11 * p->symbol_size * 0.5,
                 (dVar3 * local_34 + dVar2) * dVar4 + dVar1,
                 p->symbol_size * dVar10 * 0.5 + (dVar8 * dVar9 + dVar5) * dVar12 + dVar7,local_24,
                 uStack32);
    }
    pl_restorestate_r(multigrapher->plotter);
  }
  return;
}

