_init, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x2c, 4)
_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
_init, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_init, (register, 0x58, 4) COPY (const, 0x11368, 4)
_init,  ---  CALL (ram, 0x13340, 4)
_init, (register, 0x80, 4) COPY (register, 0x54, 4)
_init, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_init, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_init, (register, 0x54, 4) COPY (register, 0x80, 4)
_init, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
_init, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
_init, (register, 0x69, 1) COPY (register, 0xb0, 1)
_init, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
_init,  ---  RETURN (register, 0x5c, 4)
strcmp, (register, 0x50, 4) COPY (const, 0x11388, 4)
strcmp, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
strcmp, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
strcmp, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
strcmp, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
strcmp, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
strcmp, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
strcmp, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
strcmp, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
strcmp, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
strcmp, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
strcmp, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
strcmp, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
strcmp, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xb88, 4)
strcmp, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
strcmp, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
strcmp, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
strcmp, (register, 0x69, 1) COPY (register, 0xb0, 1)
strcmp, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
strcmp,  ---  BRANCHIND (register, 0x5c, 4)
__cxa_finalize, (register, 0x50, 4) COPY (const, 0x11394, 4)
__cxa_finalize, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
__cxa_finalize, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
__cxa_finalize, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__cxa_finalize, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
__cxa_finalize, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__cxa_finalize, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__cxa_finalize, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__cxa_finalize, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
__cxa_finalize, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
__cxa_finalize, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
__cxa_finalize, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
__cxa_finalize, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
__cxa_finalize, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xb80, 4)
__cxa_finalize, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
__cxa_finalize, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
__cxa_finalize, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__cxa_finalize, (register, 0x69, 1) COPY (register, 0xb0, 1)
__cxa_finalize, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
__cxa_finalize,  ---  BRANCHIND (register, 0x5c, 4)
fopen, (register, 0x50, 4) COPY (const, 0x113a0, 4)
fopen, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
fopen, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
fopen, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
fopen, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
fopen, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
fopen, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
fopen, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
fopen, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
fopen, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
fopen, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
fopen, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
fopen, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
fopen, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xb78, 4)
fopen, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
fopen, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
fopen, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
fopen, (register, 0x69, 1) COPY (register, 0xb0, 1)
fopen, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
fopen,  ---  BRANCHIND (register, 0x5c, 4)
fflush, (register, 0x50, 4) COPY (const, 0x113ac, 4)
fflush, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
fflush, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
fflush, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
fflush, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
fflush, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
fflush, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
fflush, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
fflush, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
fflush, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
fflush, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
fflush, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
fflush, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
fflush, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xb70, 4)
fflush, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
fflush, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
fflush, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
fflush, (register, 0x69, 1) COPY (register, 0xb0, 1)
fflush, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
fflush,  ---  BRANCHIND (register, 0x5c, 4)
pcre_maketables, (register, 0x50, 4) COPY (const, 0x113b8, 4)
pcre_maketables, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
pcre_maketables, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pcre_maketables, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcre_maketables, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pcre_maketables, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcre_maketables, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcre_maketables, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcre_maketables, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
pcre_maketables, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
pcre_maketables, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
pcre_maketables, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pcre_maketables, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pcre_maketables, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xb68, 4)
pcre_maketables, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pcre_maketables, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pcre_maketables, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pcre_maketables, (register, 0x69, 1) COPY (register, 0xb0, 1)
pcre_maketables, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pcre_maketables,  ---  BRANCHIND (register, 0x5c, 4)
memmove, (register, 0x50, 4) COPY (const, 0x113c4, 4)
memmove, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
memmove, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
memmove, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
memmove, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
memmove, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
memmove, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
memmove, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
memmove, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
memmove, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
memmove, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
memmove, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
memmove, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
memmove, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xb60, 4)
memmove, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
memmove, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
memmove, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
memmove, (register, 0x69, 1) COPY (register, 0xb0, 1)
memmove, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
memmove,  ---  BRANCHIND (register, 0x5c, 4)
free, (register, 0x50, 4) COPY (const, 0x113d0, 4)
free, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
free, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
free, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
free, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
free, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
free, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
free, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
free, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
free, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
free, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
free, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
free, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
free, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xb58, 4)
free, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
free, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
free, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
free, (register, 0x69, 1) COPY (register, 0xb0, 1)
free, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
free,  ---  BRANCHIND (register, 0x5c, 4)
fgets, (register, 0x50, 4) COPY (const, 0x113dc, 4)
fgets, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
fgets, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
fgets, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
fgets, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
fgets, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
fgets, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
fgets, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
fgets, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
fgets, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
fgets, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
fgets, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
fgets, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
fgets, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xb50, 4)
fgets, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
fgets, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
fgets, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
fgets, (register, 0x69, 1) COPY (register, 0xb0, 1)
fgets, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
fgets,  ---  BRANCHIND (register, 0x5c, 4)
pcre_version, (register, 0x50, 4) COPY (const, 0x113e8, 4)
pcre_version, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
pcre_version, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pcre_version, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcre_version, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pcre_version, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcre_version, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcre_version, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcre_version, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
pcre_version, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
pcre_version, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
pcre_version, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pcre_version, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pcre_version, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xb48, 4)
pcre_version, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pcre_version, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pcre_version, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pcre_version, (register, 0x69, 1) COPY (register, 0xb0, 1)
pcre_version, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pcre_version,  ---  BRANCHIND (register, 0x5c, 4)
__stack_chk_fail, (register, 0x50, 4) COPY (const, 0x113f4, 4)
__stack_chk_fail, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
__stack_chk_fail, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
__stack_chk_fail, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__stack_chk_fail, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
__stack_chk_fail, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__stack_chk_fail, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__stack_chk_fail, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__stack_chk_fail, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
__stack_chk_fail, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
__stack_chk_fail, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
__stack_chk_fail, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
__stack_chk_fail, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
__stack_chk_fail, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xb40, 4)
__stack_chk_fail, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
__stack_chk_fail, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
__stack_chk_fail, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__stack_chk_fail, (register, 0x69, 1) COPY (register, 0xb0, 1)
__stack_chk_fail, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
__stack_chk_fail,  ---  BRANCHIND (register, 0x5c, 4)
pcre_exec, (register, 0x50, 4) COPY (const, 0x11400, 4)
pcre_exec, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
pcre_exec, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pcre_exec, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcre_exec, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pcre_exec, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcre_exec, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcre_exec, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcre_exec, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
pcre_exec, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
pcre_exec, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
pcre_exec, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pcre_exec, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pcre_exec, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xb38, 4)
pcre_exec, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pcre_exec, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pcre_exec, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pcre_exec, (register, 0x69, 1) COPY (register, 0xb0, 1)
pcre_exec, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pcre_exec,  ---  BRANCHIND (register, 0x5c, 4)
__xstat, (register, 0x50, 4) COPY (const, 0x1140c, 4)
__xstat, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
__xstat, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
__xstat, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__xstat, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
__xstat, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__xstat, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__xstat, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__xstat, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
__xstat, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
__xstat, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
__xstat, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
__xstat, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
__xstat, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xb30, 4)
__xstat, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
__xstat, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
__xstat, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__xstat, (register, 0x69, 1) COPY (register, 0xb0, 1)
__xstat, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
__xstat,  ---  BRANCHIND (register, 0x5c, 4)
fwrite, (register, 0x50, 4) COPY (const, 0x11418, 4)
fwrite, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
fwrite, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
fwrite, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
fwrite, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
fwrite, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
fwrite, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
fwrite, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
fwrite, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
fwrite, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
fwrite, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
fwrite, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
fwrite, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
fwrite, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xb28, 4)
fwrite, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
fwrite, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
fwrite, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
fwrite, (register, 0x69, 1) COPY (register, 0xb0, 1)
fwrite, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
fwrite,  ---  BRANCHIND (register, 0x5c, 4)
fread, (register, 0x50, 4) COPY (const, 0x11424, 4)
fread, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
fread, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
fread, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
fread, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
fread, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
fread, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
fread, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
fread, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
fread, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
fread, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
fread, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
fread, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
fread, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xb20, 4)
fread, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
fread, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
fread, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
fread, (register, 0x69, 1) COPY (register, 0xb0, 1)
fread, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
fread,  ---  BRANCHIND (register, 0x5c, 4)
opendir, (register, 0x50, 4) COPY (const, 0x11430, 4)
opendir, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
opendir, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
opendir, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
opendir, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
opendir, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
opendir, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
opendir, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
opendir, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
opendir, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
opendir, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
opendir, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
opendir, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
opendir, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xb18, 4)
opendir, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
opendir, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
opendir, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
opendir, (register, 0x69, 1) COPY (register, 0xb0, 1)
opendir, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
opendir,  ---  BRANCHIND (register, 0x5c, 4)
getenv, (register, 0x50, 4) COPY (const, 0x1143c, 4)
getenv, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
getenv, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
getenv, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
getenv, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
getenv, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
getenv, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
getenv, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
getenv, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
getenv, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
getenv, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
getenv, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
getenv, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
getenv, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xb10, 4)
getenv, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
getenv, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
getenv, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
getenv, (register, 0x69, 1) COPY (register, 0xb0, 1)
getenv, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
getenv,  ---  BRANCHIND (register, 0x5c, 4)
puts, (register, 0x50, 4) COPY (const, 0x11448, 4)
puts, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
puts, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
puts, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
puts, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
puts, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
puts, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
puts, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
puts, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
puts, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
puts, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
puts, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
puts, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
puts, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xb08, 4)
puts, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
puts, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
puts, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
puts, (register, 0x69, 1) COPY (register, 0xb0, 1)
puts, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
puts,  ---  BRANCHIND (register, 0x5c, 4)
malloc, (register, 0x50, 4) COPY (const, 0x11454, 4)
malloc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
malloc, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
malloc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
malloc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
malloc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
malloc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
malloc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
malloc, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
malloc, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
malloc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
malloc, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
malloc, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
malloc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xb00, 4)
malloc, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
malloc, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
malloc, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
malloc, (register, 0x69, 1) COPY (register, 0xb0, 1)
malloc, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
malloc,  ---  BRANCHIND (register, 0x5c, 4)
__libc_start_main, (register, 0x50, 4) COPY (const, 0x11460, 4)
__libc_start_main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
__libc_start_main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
__libc_start_main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__libc_start_main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
__libc_start_main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__libc_start_main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__libc_start_main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__libc_start_main, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
__libc_start_main, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
__libc_start_main, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
__libc_start_main, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
__libc_start_main, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
__libc_start_main, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xaf8, 4)
__libc_start_main, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
__libc_start_main, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
__libc_start_main, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__libc_start_main, (register, 0x69, 1) COPY (register, 0xb0, 1)
__libc_start_main, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
__libc_start_main,  ---  BRANCHIND (register, 0x5c, 4)
strerror, (register, 0x50, 4) COPY (const, 0x1146c, 4)
strerror, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
strerror, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
strerror, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
strerror, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
strerror, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
strerror, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
strerror, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
strerror, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
strerror, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
strerror, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
strerror, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
strerror, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
strerror, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xaf0, 4)
strerror, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
strerror, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
strerror, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
strerror, (register, 0x69, 1) COPY (register, 0xb0, 1)
strerror, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
strerror,  ---  BRANCHIND (register, 0x5c, 4)
__ctype_toupper_loc, (register, 0x50, 4) COPY (const, 0x11478, 4)
__ctype_toupper_loc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
__ctype_toupper_loc, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
__ctype_toupper_loc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__ctype_toupper_loc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
__ctype_toupper_loc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__ctype_toupper_loc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__ctype_toupper_loc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__ctype_toupper_loc, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
__ctype_toupper_loc, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
__ctype_toupper_loc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
__ctype_toupper_loc, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
__ctype_toupper_loc, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
__ctype_toupper_loc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xae8, 4)
__ctype_toupper_loc, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
__ctype_toupper_loc, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
__ctype_toupper_loc, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__ctype_toupper_loc, (register, 0x69, 1) COPY (register, 0xb0, 1)
__ctype_toupper_loc, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
__ctype_toupper_loc,  ---  BRANCHIND (register, 0x5c, 4)
pcre_config, (register, 0x50, 4) COPY (const, 0x11484, 4)
pcre_config, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
pcre_config, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pcre_config, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcre_config, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pcre_config, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcre_config, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcre_config, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcre_config, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
pcre_config, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
pcre_config, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
pcre_config, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pcre_config, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pcre_config, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xae0, 4)
pcre_config, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pcre_config, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pcre_config, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pcre_config, (register, 0x69, 1) COPY (register, 0xb0, 1)
pcre_config, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pcre_config,  ---  BRANCHIND (register, 0x5c, 4)
__ctype_b_loc, (register, 0x50, 4) COPY (const, 0x1149c, 4)
__ctype_b_loc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
__ctype_b_loc, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
__ctype_b_loc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__ctype_b_loc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
__ctype_b_loc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__ctype_b_loc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__ctype_b_loc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__ctype_b_loc, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
__ctype_b_loc, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
__ctype_b_loc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
__ctype_b_loc, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
__ctype_b_loc, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
__ctype_b_loc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xad0, 4)
__ctype_b_loc, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
__ctype_b_loc, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
__ctype_b_loc, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__ctype_b_loc, (register, 0x69, 1) COPY (register, 0xb0, 1)
__ctype_b_loc, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
__ctype_b_loc,  ---  BRANCHIND (register, 0x5c, 4)
exit, (register, 0x50, 4) COPY (const, 0x114a8, 4)
exit, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
exit, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
exit, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
exit, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
exit, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
exit, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
exit, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
exit, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
exit, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
exit, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
exit, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
exit, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
exit, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xac8, 4)
exit, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
exit, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
exit, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
exit, (register, 0x69, 1) COPY (register, 0xb0, 1)
exit, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
exit,  ---  BRANCHIND (register, 0x5c, 4)
strlen, (register, 0x50, 4) COPY (const, 0x114b4, 4)
strlen, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
strlen, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
strlen, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
strlen, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
strlen, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
strlen, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
strlen, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
strlen, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
strlen, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
strlen, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
strlen, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
strlen, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
strlen, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xac0, 4)
strlen, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
strlen, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
strlen, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
strlen, (register, 0x69, 1) COPY (register, 0xb0, 1)
strlen, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
strlen,  ---  BRANCHIND (register, 0x5c, 4)
strchr, (register, 0x50, 4) COPY (const, 0x114c0, 4)
strchr, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
strchr, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
strchr, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
strchr, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
strchr, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
strchr, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
strchr, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
strchr, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
strchr, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
strchr, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
strchr, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
strchr, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
strchr, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xab8, 4)
strchr, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
strchr, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
strchr, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
strchr, (register, 0x69, 1) COPY (register, 0xb0, 1)
strchr, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
strchr,  ---  BRANCHIND (register, 0x5c, 4)
pcre_compile, (register, 0x50, 4) COPY (const, 0x114cc, 4)
pcre_compile, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
pcre_compile, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pcre_compile, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcre_compile, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pcre_compile, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcre_compile, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcre_compile, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcre_compile, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
pcre_compile, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
pcre_compile, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
pcre_compile, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pcre_compile, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pcre_compile, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xab0, 4)
pcre_compile, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pcre_compile, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pcre_compile, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pcre_compile, (register, 0x69, 1) COPY (register, 0xb0, 1)
pcre_compile, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pcre_compile,  ---  BRANCHIND (register, 0x5c, 4)
__errno_location, (register, 0x50, 4) COPY (const, 0x114d8, 4)
__errno_location, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
__errno_location, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
__errno_location, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__errno_location, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
__errno_location, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__errno_location, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__errno_location, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__errno_location, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
__errno_location, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
__errno_location, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
__errno_location, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
__errno_location, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
__errno_location, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xaa8, 4)
__errno_location, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
__errno_location, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
__errno_location, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__errno_location, (register, 0x69, 1) COPY (register, 0xb0, 1)
__errno_location, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
__errno_location,  ---  BRANCHIND (register, 0x5c, 4)
__sprintf_chk, (register, 0x50, 4) COPY (const, 0x114e4, 4)
__sprintf_chk, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
__sprintf_chk, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
__sprintf_chk, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__sprintf_chk, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
__sprintf_chk, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__sprintf_chk, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__sprintf_chk, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__sprintf_chk, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
__sprintf_chk, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
__sprintf_chk, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
__sprintf_chk, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
__sprintf_chk, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
__sprintf_chk, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xaa0, 4)
__sprintf_chk, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
__sprintf_chk, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
__sprintf_chk, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__sprintf_chk, (register, 0x69, 1) COPY (register, 0xb0, 1)
__sprintf_chk, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
__sprintf_chk,  ---  BRANCHIND (register, 0x5c, 4)
fgetc, (register, 0x50, 4) COPY (const, 0x114f0, 4)
fgetc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
fgetc, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
fgetc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
fgetc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
fgetc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
fgetc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
fgetc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
fgetc, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
fgetc, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
fgetc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
fgetc, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
fgetc, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
fgetc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xa98, 4)
fgetc, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
fgetc, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
fgetc, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
fgetc, (register, 0x69, 1) COPY (register, 0xb0, 1)
fgetc, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
fgetc,  ---  BRANCHIND (register, 0x5c, 4)
__printf_chk, (register, 0x50, 4) COPY (const, 0x114fc, 4)
__printf_chk, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
__printf_chk, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
__printf_chk, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__printf_chk, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
__printf_chk, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__printf_chk, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__printf_chk, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__printf_chk, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
__printf_chk, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
__printf_chk, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
__printf_chk, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
__printf_chk, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
__printf_chk, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xa90, 4)
__printf_chk, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
__printf_chk, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
__printf_chk, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__printf_chk, (register, 0x69, 1) COPY (register, 0xb0, 1)
__printf_chk, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
__printf_chk,  ---  BRANCHIND (register, 0x5c, 4)
fileno, (register, 0x50, 4) COPY (const, 0x11508, 4)
fileno, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
fileno, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
fileno, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
fileno, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
fileno, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
fileno, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
fileno, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
fileno, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
fileno, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
fileno, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
fileno, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
fileno, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
fileno, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xa88, 4)
fileno, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
fileno, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
fileno, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
fileno, (register, 0x69, 1) COPY (register, 0xb0, 1)
fileno, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
fileno,  ---  BRANCHIND (register, 0x5c, 4)
__fprintf_chk, (register, 0x50, 4) COPY (const, 0x11514, 4)
__fprintf_chk, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
__fprintf_chk, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
__fprintf_chk, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__fprintf_chk, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
__fprintf_chk, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__fprintf_chk, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__fprintf_chk, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__fprintf_chk, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
__fprintf_chk, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
__fprintf_chk, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
__fprintf_chk, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
__fprintf_chk, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
__fprintf_chk, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xa80, 4)
__fprintf_chk, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
__fprintf_chk, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
__fprintf_chk, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__fprintf_chk, (register, 0x69, 1) COPY (register, 0xb0, 1)
__fprintf_chk, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
__fprintf_chk,  ---  BRANCHIND (register, 0x5c, 4)
memchr, (register, 0x50, 4) COPY (const, 0x11520, 4)
memchr, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
memchr, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
memchr, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
memchr, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
memchr, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
memchr, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
memchr, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
memchr, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
memchr, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
memchr, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
memchr, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
memchr, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
memchr, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xa78, 4)
memchr, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
memchr, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
memchr, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
memchr, (register, 0x69, 1) COPY (register, 0xb0, 1)
memchr, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
memchr,  ---  BRANCHIND (register, 0x5c, 4)
fclose, (register, 0x50, 4) COPY (const, 0x1152c, 4)
fclose, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
fclose, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
fclose, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
fclose, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
fclose, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
fclose, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
fclose, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
fclose, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
fclose, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
fclose, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
fclose, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
fclose, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
fclose, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xa70, 4)
fclose, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
fclose, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
fclose, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
fclose, (register, 0x69, 1) COPY (register, 0xb0, 1)
fclose, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
fclose,  ---  BRANCHIND (register, 0x5c, 4)
pcre_free_study, (register, 0x50, 4) COPY (const, 0x11538, 4)
pcre_free_study, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
pcre_free_study, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pcre_free_study, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcre_free_study, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pcre_free_study, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcre_free_study, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcre_free_study, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcre_free_study, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
pcre_free_study, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
pcre_free_study, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
pcre_free_study, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pcre_free_study, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pcre_free_study, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xa68, 4)
pcre_free_study, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pcre_free_study, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pcre_free_study, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pcre_free_study, (register, 0x69, 1) COPY (register, 0xb0, 1)
pcre_free_study, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pcre_free_study,  ---  BRANCHIND (register, 0x5c, 4)
setlocale, (register, 0x50, 4) COPY (const, 0x11544, 4)
setlocale, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
setlocale, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
setlocale, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
setlocale, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
setlocale, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
setlocale, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
setlocale, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
setlocale, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
setlocale, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
setlocale, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
setlocale, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
setlocale, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
setlocale, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xa60, 4)
setlocale, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
setlocale, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
setlocale, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
setlocale, (register, 0x69, 1) COPY (register, 0xb0, 1)
setlocale, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
setlocale,  ---  BRANCHIND (register, 0x5c, 4)
readdir, (register, 0x50, 4) COPY (const, 0x11550, 4)
readdir, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
readdir, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
readdir, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
readdir, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
readdir, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
readdir, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
readdir, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
readdir, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
readdir, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
readdir, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
readdir, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
readdir, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
readdir, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xa58, 4)
readdir, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
readdir, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
readdir, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
readdir, (register, 0x69, 1) COPY (register, 0xb0, 1)
readdir, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
readdir,  ---  BRANCHIND (register, 0x5c, 4)
strrchr, (register, 0x50, 4) COPY (const, 0x1155c, 4)
strrchr, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
strrchr, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
strrchr, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
strrchr, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
strrchr, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
strrchr, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
strrchr, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
strrchr, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
strrchr, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
strrchr, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
strrchr, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
strrchr, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
strrchr, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xa50, 4)
strrchr, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
strrchr, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
strrchr, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
strrchr, (register, 0x69, 1) COPY (register, 0xb0, 1)
strrchr, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
strrchr,  ---  BRANCHIND (register, 0x5c, 4)
pcre_study, (register, 0x50, 4) COPY (const, 0x11568, 4)
pcre_study, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
pcre_study, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pcre_study, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcre_study, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pcre_study, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcre_study, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcre_study, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcre_study, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
pcre_study, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
pcre_study, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
pcre_study, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pcre_study, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pcre_study, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xa48, 4)
pcre_study, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
pcre_study, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
pcre_study, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pcre_study, (register, 0x69, 1) COPY (register, 0xb0, 1)
pcre_study, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
pcre_study,  ---  BRANCHIND (register, 0x5c, 4)
fputc, (register, 0x50, 4) COPY (const, 0x11574, 4)
fputc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
fputc, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
fputc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
fputc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
fputc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
fputc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
fputc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
fputc, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
fputc, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
fputc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
fputc, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
fputc, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
fputc, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xa40, 4)
fputc, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
fputc, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
fputc, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
fputc, (register, 0x69, 1) COPY (register, 0xb0, 1)
fputc, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
fputc,  ---  BRANCHIND (register, 0x5c, 4)
isatty, (register, 0x50, 4) COPY (const, 0x11580, 4)
isatty, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
isatty, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
isatty, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
isatty, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
isatty, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
isatty, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
isatty, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
isatty, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
isatty, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
isatty, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
isatty, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
isatty, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
isatty, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xa38, 4)
isatty, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
isatty, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
isatty, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
isatty, (register, 0x69, 1) COPY (register, 0xb0, 1)
isatty, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
isatty,  ---  BRANCHIND (register, 0x5c, 4)
fputs, (register, 0x50, 4) COPY (const, 0x1158c, 4)
fputs, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
fputs, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
fputs, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
fputs, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
fputs, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
fputs, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
fputs, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
fputs, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
fputs, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
fputs, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
fputs, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
fputs, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
fputs, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xa30, 4)
fputs, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
fputs, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
fputs, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
fputs, (register, 0x69, 1) COPY (register, 0xb0, 1)
fputs, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
fputs,  ---  BRANCHIND (register, 0x5c, 4)
strncmp, (register, 0x50, 4) COPY (const, 0x11598, 4)
strncmp, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
strncmp, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
strncmp, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
strncmp, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
strncmp, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
strncmp, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
strncmp, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
strncmp, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
strncmp, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
strncmp, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
strncmp, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
strncmp, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
strncmp, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xa28, 4)
strncmp, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
strncmp, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
strncmp, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
strncmp, (register, 0x69, 1) COPY (register, 0xb0, 1)
strncmp, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
strncmp,  ---  BRANCHIND (register, 0x5c, 4)
abort, (register, 0x50, 4) COPY (const, 0x115a4, 4)
abort, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
abort, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
abort, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
abort, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
abort, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
abort, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
abort, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
abort, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
abort, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
abort, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
abort, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
abort, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
abort, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xa20, 4)
abort, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
abort, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
abort, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
abort, (register, 0x69, 1) COPY (register, 0xb0, 1)
abort, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
abort,  ---  BRANCHIND (register, 0x5c, 4)
closedir, (register, 0x50, 4) COPY (const, 0x115b0, 4)
closedir, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
closedir, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
closedir, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
closedir, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
closedir, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
closedir, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
closedir, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
closedir, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
closedir, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
closedir, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
closedir, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
closedir, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
closedir, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xa18, 4)
closedir, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
closedir, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
closedir, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
closedir, (register, 0x69, 1) COPY (register, 0xb0, 1)
closedir, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
closedir,  ---  BRANCHIND (register, 0x5c, 4)
free_pattern_chain, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
free_pattern_chain,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
free_pattern_chain, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
free_pattern_chain,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
free_pattern_chain, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
free_pattern_chain,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
free_pattern_chain, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
free_pattern_chain,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
free_pattern_chain, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
free_pattern_chain, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
free_pattern_chain, (register, 0x30, 4) COPY (register, 0x20, 4)
free_pattern_chain, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (const, 0x11610, 4)
free_pattern_chain, (unique, 0x1780, 4) INT_ADD (const, 0x115c0, 4) , (const, 0x8, 4)
free_pattern_chain, (register, 0x68, 1) COPY (register, 0x62, 1)
free_pattern_chain, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x38, 4)
free_pattern_chain, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x38, 4)
free_pattern_chain, (register, 0x38, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x38, 4)
free_pattern_chain, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
free_pattern_chain, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
free_pattern_chain, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
free_pattern_chain, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
free_pattern_chain, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
free_pattern_chain, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
free_pattern_chain, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
free_pattern_chain, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
free_pattern_chain, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
free_pattern_chain, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
free_pattern_chain, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
free_pattern_chain, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
free_pattern_chain, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
free_pattern_chain, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
free_pattern_chain, (register, 0x62, 1) COPY (register, 0x66, 1)
free_pattern_chain, (register, 0x61, 1) COPY (register, 0x65, 1)
free_pattern_chain, (register, 0x60, 1) COPY (register, 0x64, 1)
free_pattern_chain, (register, 0x63, 1) COPY (register, 0x67, 1)
free_pattern_chain,  ---  CBRANCH (ram, 0x1160c, 4) , (register, 0x61, 1)
free_pattern_chain, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc, 4)
free_pattern_chain, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
free_pattern_chain, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
free_pattern_chain, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
free_pattern_chain, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
free_pattern_chain, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
free_pattern_chain, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
free_pattern_chain, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
free_pattern_chain, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
free_pattern_chain, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
free_pattern_chain, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
free_pattern_chain, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
free_pattern_chain, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
free_pattern_chain, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
free_pattern_chain, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
free_pattern_chain, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
free_pattern_chain, (register, 0x62, 1) COPY (register, 0x66, 1)
free_pattern_chain, (register, 0x61, 1) COPY (register, 0x65, 1)
free_pattern_chain, (register, 0x60, 1) COPY (register, 0x64, 1)
free_pattern_chain, (register, 0x63, 1) COPY (register, 0x67, 1)
free_pattern_chain,  ---  CBRANCH (ram, 0x115e0, 4) , (register, 0x61, 1)
free_pattern_chain, (register, 0x58, 4) COPY (const, 0x115e0, 4)
free_pattern_chain,  ---  CALL (ram, 0x11530, 4)
free_pattern_chain, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
free_pattern_chain, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
free_pattern_chain, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x11614, 4)
free_pattern_chain, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
free_pattern_chain, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
free_pattern_chain, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
free_pattern_chain, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
free_pattern_chain, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
free_pattern_chain, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
free_pattern_chain, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
free_pattern_chain, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
free_pattern_chain, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
free_pattern_chain, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
free_pattern_chain, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
free_pattern_chain, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
free_pattern_chain, (register, 0x62, 1) COPY (register, 0x66, 1)
free_pattern_chain, (register, 0x61, 1) COPY (register, 0x65, 1)
free_pattern_chain, (register, 0x60, 1) COPY (register, 0x64, 1)
free_pattern_chain, (register, 0x63, 1) COPY (register, 0x67, 1)
free_pattern_chain,  ---  CBRANCH (ram, 0x115fc, 4) , (register, 0x61, 1)
free_pattern_chain, (unique, 0x8480, 4) INT_ADD (register, 0x38, 4) , (register, 0x2c, 4)
free_pattern_chain, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
free_pattern_chain, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
free_pattern_chain, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
free_pattern_chain, (unique, 0x0, 4) INT_AND (register, 0x2c, 4) , (const, 0x1, 4)
free_pattern_chain, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
free_pattern_chain, (register, 0x69, 1) COPY (register, 0xb0, 1)
free_pattern_chain, (register, 0x5c, 4) INT_AND (register, 0x2c, 4) , (const, 0xfffffffe, 4)
free_pattern_chain, (register, 0x58, 4) COPY (const, 0x115fc, 4)
free_pattern_chain,  ---  CALLIND (register, 0x5c, 4)
free_pattern_chain, (register, 0x20, 4) COPY (register, 0x30, 4)
free_pattern_chain, (register, 0x30, 4) COPY (register, 0x34, 4)
free_pattern_chain, (register, 0x58, 4) COPY (const, 0x11608, 4)
free_pattern_chain,  ---  CALL (ram, 0x113c8, 4)
free_pattern_chain,  ---  BRANCH (ram, 0x115c4, 4)
free_pattern_chain, (register, 0x80, 4) COPY (register, 0x54, 4)
free_pattern_chain, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
free_pattern_chain, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
free_pattern_chain, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
free_pattern_chain, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
free_pattern_chain, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
free_pattern_chain, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
free_pattern_chain, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
free_pattern_chain, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
free_pattern_chain, (register, 0x54, 4) COPY (register, 0x80, 4)
free_pattern_chain, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
free_pattern_chain, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
free_pattern_chain, (register, 0x69, 1) COPY (register, 0xb0, 1)
free_pattern_chain, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
free_pattern_chain,  ---  RETURN (register, 0x5c, 4)
compile_pattern, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
compile_pattern, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
compile_pattern, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
compile_pattern, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
compile_pattern, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
compile_pattern, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
compile_pattern, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
compile_pattern, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
compile_pattern, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
compile_pattern, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
compile_pattern, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2040, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0xd, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xd, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2040, 4) , (register, 0x54, 4)
compile_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (const, 0x1196c, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4, 4) , (register, 0x54, 4)
compile_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x4, 4)
compile_pattern, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x3c, 4) COPY (register, 0x28, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2040, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0xd, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xd, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x1780, 4) INT_ADD (const, 0x11630, 4) , (const, 0x8, 4)
compile_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x38, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x38, 4)
compile_pattern, (register, 0x38, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x38, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x28, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (const, 0x28, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x28, 4)
compile_pattern, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x28, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x34, 4) COPY (register, 0x20, 4)
compile_pattern, (register, 0x44, 4) COPY (register, 0x2c, 4)
compile_pattern, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x11970, 4)
compile_pattern, (register, 0x40, 4) COPY (register, 0x24, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x8480, 4) INT_ADD (register, 0x38, 4) , (register, 0x20, 4)
compile_pattern, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x4, 4)
compile_pattern, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2000, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2000, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2000, 4)
compile_pattern, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x2000, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3c, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (const, 0x3c, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x3c, 4)
compile_pattern, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x3c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x20, 4) COPY (register, 0x48, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x58, 4) COPY (const, 0x11670, 4)
compile_pattern,  ---  CALL (ram, 0x114ac, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x62, 1) COPY (register, 0x66, 1)
compile_pattern, (register, 0x61, 1) COPY (register, 0x65, 1)
compile_pattern, (register, 0x60, 1) COPY (register, 0x64, 1)
compile_pattern, (register, 0x63, 1) COPY (register, 0x67, 1)
compile_pattern,  ---  CBRANCH (ram, 0x11684, 4) , (register, 0x61, 1)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x20, 4) COPY (const, 0x1, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x66, 1) COPY (register, 0x68, 1)
compile_pattern, (register, 0x67, 1) COPY (register, 0x63, 1)
compile_pattern,  ---  BRANCH (ram, 0x11944, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (unique, 0x6d500, 4) INT_AND (register, 0x3c, 4) , (const, 0x4, 4)
compile_pattern, (register, 0x66, 1) COPY (register, 0x68, 1)
compile_pattern, (register, 0x67, 1) COPY (register, 0x63, 1)
compile_pattern, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x62, 1) COPY (register, 0x66, 1)
compile_pattern, (register, 0x61, 1) COPY (register, 0x65, 1)
compile_pattern, (register, 0x60, 1) COPY (register, 0x64, 1)
compile_pattern, (register, 0x63, 1) COPY (register, 0x67, 1)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x40, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x40, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x40, 4)
compile_pattern, (register, 0x4c, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
compile_pattern,  ---  CBRANCH (ram, 0x116e0, 4) , (register, 0x61, 1)
compile_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x48, 4) , (register, 0x20, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x48, 4) , (register, 0x20, 4)
compile_pattern, (register, 0x24, 4) INT_ADD (register, 0x48, 4) , (register, 0x20, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x28, 4) COPY (register, 0x2c, 4)
compile_pattern, (register, 0x20, 4) COPY (register, 0x48, 4)
compile_pattern, (register, 0x58, 4) COPY (const, 0x116ac, 4)
compile_pattern,  ---  CALL (ram, 0x134e4, 4)
compile_pattern, (unique, 0x8380, 4) INT_ADD (register, 0x4c, 4) , (const, 0xffffffec, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x62, 1) COPY (register, 0x66, 1)
compile_pattern, (register, 0x61, 1) COPY (register, 0x65, 1)
compile_pattern, (register, 0x60, 1) COPY (register, 0x64, 1)
compile_pattern, (register, 0x63, 1) COPY (register, 0x67, 1)
compile_pattern,  ---  CBRANCH (ram, 0x116e0, 4) , (register, 0x61, 1)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
compile_pattern, (register, 0x24, 4) COPY (register, 0x34, 4)
compile_pattern, (register, 0x58, 4) COPY (const, 0x116c4, 4)
compile_pattern,  ---  CALL (ram, 0x13d58, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
compile_pattern, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
compile_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x62, 1) COPY (register, 0x66, 1)
compile_pattern, (register, 0x61, 1) COPY (register, 0x65, 1)
compile_pattern, (register, 0x60, 1) COPY (register, 0x64, 1)
compile_pattern, (register, 0x63, 1) COPY (register, 0x67, 1)
compile_pattern,  ---  CBRANCH (ram, 0x11944, 4) , (register, 0x61, 1)
compile_pattern, (unique, 0x8380, 4) INT_ADD (register, 0x4c, 4) , (const, 0xffffffec, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
compile_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
compile_pattern, (register, 0x66, 1) INT_LESSEQUAL (register, 0x48, 4) , (register, 0x28, 4)
compile_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x48, 4)
compile_pattern, (register, 0x28, 4) INT_SUB (register, 0x28, 4) , (register, 0x48, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
compile_pattern, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x28, 4)
compile_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x2c, 4) INT_SUB (register, 0x28, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x11974, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x10, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_LESSEQUAL (const, 0x10, 4) , (register, 0x4c, 4)
compile_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (const, 0x10, 4)
compile_pattern, (register, 0x28, 4) INT_SUB (register, 0x4c, 4) , (const, 0x10, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
compile_pattern, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (register, 0x20, 4) COPY (register, 0x28, 4)
compile_pattern, (unique, 0x1780, 4) INT_ADD (const, 0x116f0, 4) , (const, 0x8, 4)
compile_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
compile_pattern, (unique, 0x3300, 4) INT_RIGHT (register, 0x3c, 4) , (unique, 0x3280, 4)
compile_pattern, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
compile_pattern, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3580, 4) INT_LEFT (register, 0x3c, 4) , (const, 0x2, 4)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (unique, 0x3580, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (unique, 0x3580, 4)
compile_pattern, (register, 0x58, 4) INT_ADD (register, 0x2c, 4) , (unique, 0x3580, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x7800, 4) INT_LEFT (register, 0x3c, 4) , (const, 0x2, 4)
compile_pattern, (unique, 0x8480, 4) INT_ADD (register, 0x2c, 4) , (unique, 0x7800, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
compile_pattern, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (const, 0x11978, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x58, 4) , (const, 0x20, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x1780, 4) INT_ADD (const, 0x11708, 4) , (const, 0x8, 4)
compile_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
compile_pattern, (register, 0x3c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x3c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x24, 4) COPY (const, 0x1, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x66, 1) COPY (register, 0x68, 1)
compile_pattern, (register, 0x67, 1) COPY (register, 0x63, 1)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x1197c, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
compile_pattern, (register, 0x28, 4) COPY (const, 0x200a, 4)
compile_pattern, (unique, 0x1780, 4) INT_ADD (const, 0x1172c, 4) , (const, 0x8, 4)
compile_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x48, 4)
compile_pattern, (register, 0x58, 4) COPY (const, 0x11738, 4)
compile_pattern,  ---  CALL (ram, 0x114dc, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x24, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (register, 0x24, 4) COPY (register, 0x40, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
compile_pattern, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_LESSEQUAL (const, 0x18, 4) , (register, 0x4c, 4)
compile_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (const, 0x18, 4)
compile_pattern, (register, 0x28, 4) INT_SUB (register, 0x4c, 4) , (const, 0x18, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (register, 0x20, 4) COPY (register, 0x50, 4)
compile_pattern, (register, 0x58, 4) COPY (const, 0x11758, 4)
compile_pattern,  ---  CALL (ram, 0x114c4, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
compile_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x62, 1) COPY (register, 0x66, 1)
compile_pattern, (register, 0x61, 1) COPY (register, 0x65, 1)
compile_pattern, (register, 0x60, 1) COPY (register, 0x64, 1)
compile_pattern, (register, 0x63, 1) COPY (register, 0x67, 1)
compile_pattern, (register, 0x40, 4) COPY (register, 0x20, 4)
compile_pattern, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
compile_pattern,  ---  CBRANCH (ram, 0x1167c, 4) , (unique, 0x1a80, 1)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
compile_pattern, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (register, 0x58, 4) COPY (const, 0x11770, 4)
compile_pattern,  ---  CALL (ram, 0x114ac, 4)
compile_pattern, (unique, 0x8380, 4) INT_ADD (register, 0x4c, 4) , (const, 0xffffffec, 4)
compile_pattern, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x11980, 4)
compile_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
compile_pattern, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x28, 4)
compile_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x20, 4)
compile_pattern, (register, 0x20, 4) INT_SUB (register, 0x28, 4) , (register, 0x20, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
compile_pattern, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
compile_pattern, (register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0x20, 4)
compile_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (register, 0x28, 4)
compile_pattern, (unique, 0x3ba80, 4) INT_SUB (register, 0x20, 4) , (register, 0x28, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x62, 1) COPY (register, 0x66, 1)
compile_pattern, (register, 0x61, 1) COPY (register, 0x65, 1)
compile_pattern, (register, 0x60, 1) COPY (register, 0x64, 1)
compile_pattern, (register, 0x63, 1) COPY (register, 0x67, 1)
compile_pattern, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
compile_pattern, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
compile_pattern, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
compile_pattern,  ---  CBRANCH (ram, 0x11788, 4) , (unique, 0x2680, 1)
compile_pattern, (unique, 0x8380, 4) INT_ADD (register, 0x4c, 4) , (const, 0xffffffec, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8380, 4) , (register, 0x20, 4)
compile_pattern, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
compile_pattern, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
compile_pattern, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
compile_pattern, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
compile_pattern,  ---  CBRANCH (ram, 0x1178c, 4) , (unique, 0x2680, 1)
compile_pattern, (unique, 0x8380, 4) INT_ADD (register, 0x4c, 4) , (const, 0xffffffec, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8380, 4) , (register, 0x28, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x44, 4)
compile_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x44, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3b980, 4) INT_SUB (register, 0x44, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x62, 1) COPY (register, 0x66, 1)
compile_pattern, (register, 0x61, 1) COPY (register, 0x65, 1)
compile_pattern, (register, 0x60, 1) COPY (register, 0x64, 1)
compile_pattern, (register, 0x63, 1) COPY (register, 0x67, 1)
compile_pattern, (unique, 0x8480, 4) INT_ADD (register, 0x38, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
compile_pattern,  ---  CBRANCH (ram, 0x117d8, 4) , (register, 0x61, 1)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x24, 4) COPY (const, 0x1, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x66, 1) COPY (register, 0x68, 1)
compile_pattern, (register, 0x67, 1) COPY (register, 0x63, 1)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2040, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0xd, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xd, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
compile_pattern, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x11984, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x1780, 4) INT_ADD (const, 0x117bc, 4) , (const, 0x8, 4)
compile_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
compile_pattern, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (register, 0x58, 4) COPY (const, 0x117d0, 4)
compile_pattern,  ---  CALL (ram, 0x1150c, 4)
compile_pattern, (register, 0x20, 4) COPY (register, 0x40, 4)
compile_pattern,  ---  BRANCH (ram, 0x11944, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2040, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0xd, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xd, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x62, 1) COPY (register, 0x66, 1)
compile_pattern, (register, 0x61, 1) COPY (register, 0x65, 1)
compile_pattern, (register, 0x60, 1) COPY (register, 0x64, 1)
compile_pattern, (register, 0x63, 1) COPY (register, 0x67, 1)
compile_pattern, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
compile_pattern,  ---  CBRANCH (ram, 0x11824, 4) , (unique, 0x1a80, 1)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x24, 4) COPY (const, 0x1, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x66, 1) COPY (register, 0x68, 1)
compile_pattern, (register, 0x67, 1) COPY (register, 0x63, 1)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
compile_pattern, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x11988, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
compile_pattern, (unique, 0x1780, 4) INT_ADD (const, 0x11808, 4) , (const, 0x8, 4)
compile_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
compile_pattern, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (register, 0x58, 4) COPY (const, 0x11814, 4)
compile_pattern,  ---  CALL (ram, 0x1150c, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2040, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0xd, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xd, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern,  ---  BRANCH (ram, 0x11944, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2040, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0xd, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xd, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x28, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (const, 0x28, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (const, 0x28, 4)
compile_pattern, (register, 0x20, 4) INT_ADD (register, 0x3c, 4) , (const, 0x28, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x24, 4) COPY (const, 0x1, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x66, 1) COPY (register, 0x68, 1)
compile_pattern, (register, 0x67, 1) COPY (register, 0x63, 1)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x28, 4) COPY (const, 0x8, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x66, 1) COPY (register, 0x68, 1)
compile_pattern, (register, 0x67, 1) COPY (register, 0x63, 1)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x27, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (const, 0x27, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (const, 0x27, 4)
compile_pattern, (register, 0x3c, 4) INT_ADD (register, 0x3c, 4) , (const, 0x27, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x1198c, 4)
compile_pattern, (unique, 0x1780, 4) INT_ADD (const, 0x1184c, 4) , (const, 0x8, 4)
compile_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x58, 4) COPY (const, 0x11854, 4)
compile_pattern,  ---  CALL (ram, 0x114dc, 4)
compile_pattern, (register, 0x3c, 4) INT_ADD (register, 0x3c, 4) , (const, 0x1, 4)
compile_pattern, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (register, 0x3c, 4)
compile_pattern, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x62, 1) COPY (register, 0x66, 1)
compile_pattern, (register, 0x61, 1) COPY (register, 0x65, 1)
compile_pattern, (register, 0x60, 1) COPY (register, 0x64, 1)
compile_pattern, (register, 0x63, 1) COPY (register, 0x67, 1)
compile_pattern, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
compile_pattern,  ---  CBRANCH (ram, 0x11854, 4) , (unique, 0x1a80, 1)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2040, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0xd, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xd, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x28, 4) COPY (const, 0xa, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x66, 1) COPY (register, 0x68, 1)
compile_pattern, (register, 0x67, 1) COPY (register, 0x63, 1)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2040, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0xd, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xd, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x24, 4) INT_ADD (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x24, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x24, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (register, 0x2c, 4) INT_DIV (register, 0x2c, 4) , (register, 0x28, 4)
compile_pattern, (unique, 0x3e880, 4) INT_MULT (register, 0x28, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x2c, 4) INT_SUB (register, 0x24, 4) , (unique, 0x3e880, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2, 4)
compile_pattern, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x62, 1) COPY (register, 0x66, 1)
compile_pattern, (register, 0x61, 1) COPY (register, 0x65, 1)
compile_pattern, (register, 0x60, 1) COPY (register, 0x64, 1)
compile_pattern, (register, 0x63, 1) COPY (register, 0x67, 1)
compile_pattern,  ---  CBRANCH (ram, 0x118b8, 4) , (register, 0x61, 1)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3, 4)
compile_pattern, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x62, 1) COPY (register, 0x66, 1)
compile_pattern, (register, 0x61, 1) COPY (register, 0x65, 1)
compile_pattern, (register, 0x60, 1) COPY (register, 0x64, 1)
compile_pattern, (register, 0x63, 1) COPY (register, 0x67, 1)
compile_pattern,  ---  CBRANCH (ram, 0x118d4, 4) , (register, 0x61, 1)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
compile_pattern, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x62, 1) COPY (register, 0x66, 1)
compile_pattern, (register, 0x61, 1) COPY (register, 0x65, 1)
compile_pattern, (register, 0x60, 1) COPY (register, 0x64, 1)
compile_pattern, (register, 0x63, 1) COPY (register, 0x67, 1)
compile_pattern, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
compile_pattern,  ---  CBRANCH (ram, 0x118f0, 4) , (unique, 0x1a80, 1)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x11990, 4)
compile_pattern, (unique, 0x1780, 4) INT_ADD (const, 0x118a0, 4) , (const, 0x8, 4)
compile_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x9180, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3d180, 2) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
compile_pattern, (register, 0x28, 4) INT_ZEXT (unique, 0x3d180, 2)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x2, 4)
compile_pattern, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
compile_pattern, (unique, 0x9180, 4) INT_ADD (register, 0x3c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x6a580, 2) SUBPIECE (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x9180, 4) , (unique, 0x6a580, 2)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x2, 4)
compile_pattern, (unique, 0x6a380, 1) SUBPIECE (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (unique, 0x6a380, 1)
compile_pattern,  ---  BRANCH (ram, 0x11908, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x11994, 4)
compile_pattern, (unique, 0x1780, 4) INT_ADD (const, 0x118bc, 4) , (const, 0x8, 4)
compile_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x9180, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3d180, 2) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
compile_pattern, (register, 0x28, 4) INT_ZEXT (unique, 0x3d180, 2)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x2, 4)
compile_pattern, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
compile_pattern, (unique, 0x9180, 4) INT_ADD (register, 0x3c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x6a580, 2) SUBPIECE (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x9180, 4) , (unique, 0x6a580, 2)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x2, 4)
compile_pattern, (unique, 0x6a380, 1) SUBPIECE (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (unique, 0x6a380, 1)
compile_pattern,  ---  BRANCH (ram, 0x11908, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x11998, 4)
compile_pattern, (unique, 0x1780, 4) INT_ADD (const, 0x118d8, 4) , (const, 0x8, 4)
compile_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x9180, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3d180, 2) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
compile_pattern, (register, 0x28, 4) INT_ZEXT (unique, 0x3d180, 2)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x2, 4)
compile_pattern, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
compile_pattern, (unique, 0x9180, 4) INT_ADD (register, 0x3c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x6a580, 2) SUBPIECE (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x9180, 4) , (unique, 0x6a580, 2)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x2, 4)
compile_pattern, (unique, 0x6a380, 1) SUBPIECE (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (unique, 0x6a380, 1)
compile_pattern,  ---  BRANCH (ram, 0x11908, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x1199c, 4)
compile_pattern, (unique, 0x1780, 4) INT_ADD (const, 0x118f4, 4) , (const, 0x8, 4)
compile_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x9180, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3d180, 2) LOAD (const, 0x1a1, 8) , (unique, 0x9180, 4)
compile_pattern, (register, 0x28, 4) INT_ZEXT (unique, 0x3d180, 2)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x2, 4)
compile_pattern, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
compile_pattern, (unique, 0x9180, 4) INT_ADD (register, 0x3c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x6a580, 2) SUBPIECE (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x9180, 4) , (unique, 0x6a580, 2)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x2, 4)
compile_pattern, (unique, 0x6a380, 1) SUBPIECE (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (unique, 0x6a380, 1)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
compile_pattern, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (register, 0x20, 4) COPY (register, 0x34, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x119a0, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x24, 4) COPY (const, 0x1, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x66, 1) COPY (register, 0x68, 1)
compile_pattern, (register, 0x67, 1) COPY (register, 0x63, 1)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
compile_pattern, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
compile_pattern, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
compile_pattern, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x119a4, 4)
compile_pattern, (unique, 0x1780, 4) INT_ADD (const, 0x1192c, 4) , (const, 0x8, 4)
compile_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
compile_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x28, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x28, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x28, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x28, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x1780, 4) INT_ADD (const, 0x11938, 4) , (const, 0x8, 4)
compile_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
compile_pattern, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x58, 4) COPY (const, 0x11940, 4)
compile_pattern,  ---  CALL (ram, 0x1150c, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x20, 4) COPY (const, 0x0, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x66, 1) COPY (register, 0x68, 1)
compile_pattern, (register, 0x67, 1) COPY (register, 0x63, 1)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2000, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2000, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2000, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x2000, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3c, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x3c, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x3c, 4)
compile_pattern, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x3c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
compile_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
compile_pattern, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x28, 4)
compile_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x2c, 4)
compile_pattern, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x2c, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x62, 1) COPY (register, 0x66, 1)
compile_pattern, (register, 0x61, 1) COPY (register, 0x65, 1)
compile_pattern, (register, 0x60, 1) COPY (register, 0x64, 1)
compile_pattern, (register, 0x63, 1) COPY (register, 0x67, 1)
compile_pattern,  ---  CBRANCH (ram, 0x11960, 4) , (register, 0x61, 1)
compile_pattern, (register, 0x58, 4) COPY (const, 0x11960, 4)
compile_pattern,  ---  CALL (ram, 0x113ec, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2040, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0xd, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xd, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x2040, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
compile_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
compile_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
compile_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
compile_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
compile_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
compile_pattern, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x4, 4)
compile_pattern, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x4, 4)
compile_pattern, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
compile_pattern, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x80, 4) COPY (register, 0x54, 4)
compile_pattern, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
compile_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
compile_pattern, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
compile_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
compile_pattern, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
compile_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
compile_pattern, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
compile_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
compile_pattern, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
compile_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
compile_pattern, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
compile_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
compile_pattern, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
compile_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
compile_pattern, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
compile_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
compile_pattern, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
compile_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
compile_pattern, (register, 0x54, 4) COPY (register, 0x80, 4)
compile_pattern, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
compile_pattern, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
compile_pattern, (register, 0x69, 1) COPY (register, 0xb0, 1)
compile_pattern, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
compile_pattern,  ---  RETURN (register, 0x5c, 4)
read_pattern_file, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (const, 0x11bdc, 4)
read_pattern_file, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
read_pattern_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
read_pattern_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
read_pattern_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
read_pattern_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
read_pattern_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
read_pattern_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
read_pattern_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
read_pattern_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
read_pattern_file, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_pattern_file, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2000, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2000, 4) , (register, 0x54, 4)
read_pattern_file, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x2000, 4)
read_pattern_file, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x2000, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x1780, 4) INT_ADD (const, 0x119b4, 4) , (const, 0x8, 4)
read_pattern_file, (register, 0x68, 1) COPY (register, 0x62, 1)
read_pattern_file, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x50, 4)
read_pattern_file, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x50, 4)
read_pattern_file, (register, 0x50, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x50, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x34, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_LESSEQUAL (const, 0x34, 4) , (register, 0x54, 4)
read_pattern_file, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x34, 4)
read_pattern_file, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x34, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x40, 4) COPY (register, 0x20, 4)
read_pattern_file, (register, 0x34, 4) COPY (register, 0x28, 4)
read_pattern_file, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x11be0, 4)
read_pattern_file, (register, 0x44, 4) COPY (register, 0x2c, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
read_pattern_file, (unique, 0x8480, 4) INT_ADD (register, 0x50, 4) , (register, 0x20, 4)
read_pattern_file, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (register, 0x24, 4) INT_ZEXT (unique, 0x3ca00, 1)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2000, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2000, 4)
read_pattern_file, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2000, 4)
read_pattern_file, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x2000, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (const, 0x2c, 4)
read_pattern_file, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x2c, 4)
read_pattern_file, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x2c, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x24, 4)
read_pattern_file, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x2d, 4)
read_pattern_file, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x2d, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_pattern_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_pattern_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_pattern_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
read_pattern_file, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x11a38, 4) , (unique, 0x1a80, 1)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x1, 4)
read_pattern_file, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
read_pattern_file, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_pattern_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_pattern_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_pattern_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_pattern_file, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x11a38, 4) , (unique, 0x1a80, 1)
read_pattern_file, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x11be4, 4)
read_pattern_file, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x11be8, 4)
read_pattern_file, (unique, 0x8480, 4) INT_ADD (register, 0x50, 4) , (register, 0x28, 4)
read_pattern_file, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
read_pattern_file, (unique, 0x1780, 4) INT_ADD (const, 0x11a10, 4) , (const, 0x8, 4)
read_pattern_file, (register, 0x68, 1) COPY (register, 0x62, 1)
read_pattern_file, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
read_pattern_file, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
read_pattern_file, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
read_pattern_file, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (const, 0x11bec, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x30, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x30, 4)
read_pattern_file, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x30, 4)
read_pattern_file, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x3c, 4) COPY (const, 0x0, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x66, 1) COPY (register, 0x68, 1)
read_pattern_file, (register, 0x67, 1) COPY (register, 0x63, 1)
read_pattern_file, (unique, 0x1780, 4) INT_ADD (const, 0x11a30, 4) , (const, 0x8, 4)
read_pattern_file, (register, 0x68, 1) COPY (register, 0x62, 1)
read_pattern_file, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x48, 4)
read_pattern_file, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x48, 4)
read_pattern_file, (register, 0x48, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x48, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
read_pattern_file,  ---  BRANCH (ram, 0x11ad8, 4)
read_pattern_file, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x11bf0, 4)
read_pattern_file, (register, 0x20, 4) COPY (register, 0x40, 4)
read_pattern_file, (unique, 0x1780, 4) INT_ADD (const, 0x11a40, 4) , (const, 0x8, 4)
read_pattern_file, (register, 0x68, 1) COPY (register, 0x62, 1)
read_pattern_file, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
read_pattern_file, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
read_pattern_file, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x58, 4) COPY (const, 0x11a48, 4)
read_pattern_file,  ---  CALL (ram, 0x11398, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
read_pattern_file, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x2c, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_pattern_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_pattern_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_pattern_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
read_pattern_file, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x11a20, 4) , (unique, 0x1a80, 1)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
read_pattern_file, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x11bf4, 4)
read_pattern_file, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (register, 0x2c, 4)
read_pattern_file, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (register, 0x58, 4) COPY (const, 0x11a68, 4)
read_pattern_file,  ---  CALL (ram, 0x114d0, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (register, 0x58, 4) COPY (const, 0x11a70, 4)
read_pattern_file,  ---  CALL (ram, 0x11464, 4)
read_pattern_file, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x11bf8, 4)
read_pattern_file, (register, 0x2c, 4) COPY (register, 0x40, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x24, 4) COPY (const, 0x1, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x66, 1) COPY (register, 0x68, 1)
read_pattern_file, (register, 0x67, 1) COPY (register, 0x63, 1)
read_pattern_file, (unique, 0x1780, 4) INT_ADD (const, 0x11a80, 4) , (const, 0x8, 4)
read_pattern_file, (register, 0x68, 1) COPY (register, 0x62, 1)
read_pattern_file, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
read_pattern_file, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
read_pattern_file, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x20, 4) COPY (register, 0x30, 4)
read_pattern_file, (register, 0x58, 4) COPY (const, 0x11a8c, 4)
read_pattern_file,  ---  CALL (ram, 0x1150c, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
read_pattern_file, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file,  ---  BRANCH (ram, 0x11bb0, 4)
read_pattern_file, (register, 0x58, 4) COPY (const, 0x11a98, 4)
read_pattern_file,  ---  CALL (ram, 0x11494, 4)
read_pattern_file, (register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0xffffffff, 4)
read_pattern_file, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (register, 0x4c, 4)
read_pattern_file, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x1, 4)
read_pattern_file, (unique, 0x3300, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x3280, 4)
read_pattern_file, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
read_pattern_file, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3580, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x1, 4)
read_pattern_file, (register, 0x2c, 4) COPY (unique, 0x3580, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x66, 1) COPY (register, 0x68, 1)
read_pattern_file, (register, 0x67, 1) COPY (register, 0x63, 1)
read_pattern_file, (unique, 0x9380, 4) INT_ADD (register, 0x28, 4) , (register, 0x2c, 4)
read_pattern_file, (unique, 0x3d180, 2) LOAD (const, 0x1a1, 8) , (unique, 0x9380, 4)
read_pattern_file, (register, 0x2c, 4) INT_ZEXT (unique, 0x3d180, 2)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2000, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (unique, 0x6d500, 4) INT_AND (register, 0x2c, 4) , (const, 0x2000, 4)
read_pattern_file, (register, 0x66, 1) COPY (register, 0x68, 1)
read_pattern_file, (register, 0x67, 1) COPY (register, 0x63, 1)
read_pattern_file, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_pattern_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_pattern_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_pattern_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x11abc, 4) , (register, 0x61, 1)
read_pattern_file, (register, 0x68, 1) COPY (register, 0x62, 1)
read_pattern_file, (register, 0x66, 1) INT_LESSEQUAL (register, 0x30, 4) , (register, 0x4c, 4)
read_pattern_file, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (register, 0x30, 4)
read_pattern_file, (unique, 0x3ba80, 4) INT_SUB (register, 0x4c, 4) , (register, 0x30, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_pattern_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_pattern_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_pattern_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_pattern_file, (register, 0x38, 4) COPY (register, 0x4c, 4)
read_pattern_file, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
read_pattern_file, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x11a94, 4) , (unique, 0x1f00, 1)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x2c, 4) COPY (const, 0x0, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x66, 1) COPY (register, 0x68, 1)
read_pattern_file, (register, 0x67, 1) COPY (register, 0x63, 1)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (const, 0x1, 4)
read_pattern_file, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (const, 0x1, 4)
read_pattern_file, (register, 0x3c, 4) INT_ADD (register, 0x3c, 4) , (const, 0x1, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x6a380, 1) SUBPIECE (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (unique, 0x6a380, 1)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
read_pattern_file, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (unique, 0x8380, 4) INT_ADD (register, 0x2c, 4) , (const, 0xfffffff0, 4)
read_pattern_file, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
read_pattern_file, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
read_pattern_file, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_pattern_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_pattern_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_pattern_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_pattern_file, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x11b08, 4) , (unique, 0x1a80, 1)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
read_pattern_file, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (register, 0x24, 4) COPY (const, 0x200a, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
read_pattern_file, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x10, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_LESSEQUAL (const, 0x10, 4) , (register, 0x2c, 4)
read_pattern_file, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x10, 4)
read_pattern_file, (register, 0x30, 4) INT_SUB (register, 0x2c, 4) , (const, 0x10, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x20, 4) COPY (register, 0x30, 4)
read_pattern_file, (register, 0x58, 4) COPY (const, 0x11af0, 4)
read_pattern_file,  ---  CALL (ram, 0x113d4, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
read_pattern_file, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_pattern_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_pattern_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_pattern_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x11b84, 4) , (register, 0x61, 1)
read_pattern_file, (register, 0x20, 4) COPY (register, 0x30, 4)
read_pattern_file, (register, 0x58, 4) COPY (const, 0x11b00, 4)
read_pattern_file,  ---  CALL (ram, 0x114ac, 4)
read_pattern_file, (register, 0x68, 1) COPY (register, 0x62, 1)
read_pattern_file, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (register, 0x20, 4)
read_pattern_file, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (register, 0x20, 4)
read_pattern_file, (register, 0x4c, 4) INT_ADD (register, 0x30, 4) , (register, 0x20, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
read_pattern_file,  ---  BRANCH (ram, 0x11ab0, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (register, 0x20, 4) COPY (register, 0x30, 4)
read_pattern_file, (register, 0x58, 4) COPY (const, 0x11b14, 4)
read_pattern_file,  ---  CALL (ram, 0x13d58, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
read_pattern_file, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_pattern_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_pattern_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_pattern_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_pattern_file, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x11b28, 4) , (unique, 0x1a80, 1)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x20, 4) COPY (const, 0x0, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x66, 1) COPY (register, 0x68, 1)
read_pattern_file, (register, 0x67, 1) COPY (register, 0x63, 1)
read_pattern_file,  ---  BRANCH (ram, 0x11bb0, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
read_pattern_file, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x30, 4) COPY (const, 0x0, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x66, 1) COPY (register, 0x68, 1)
read_pattern_file, (register, 0x67, 1) COPY (register, 0x63, 1)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
read_pattern_file, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_pattern_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_pattern_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_pattern_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_pattern_file, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x11b3c, 4) , (unique, 0x2680, 1)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
read_pattern_file, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x11b40, 4) , (unique, 0x2680, 1)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x40, 4)
read_pattern_file, (register, 0x28, 4) COPY (register, 0x44, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x3c, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x2c, 4) COPY (const, 0x1, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x66, 1) COPY (register, 0x68, 1)
read_pattern_file, (register, 0x67, 1) COPY (register, 0x63, 1)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x30, 4)
read_pattern_file, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (register, 0x58, 4) COPY (const, 0x11b5c, 4)
read_pattern_file,  ---  CALL (ram, 0x11618, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
read_pattern_file, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_pattern_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_pattern_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_pattern_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x11b20, 4) , (register, 0x61, 1)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
read_pattern_file, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_pattern_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_pattern_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_pattern_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x11ad8, 4) , (register, 0x61, 1)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
read_pattern_file,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
read_pattern_file,  ---  BRANCH (ram, 0x11b40, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
read_pattern_file, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x11be4, 4)
read_pattern_file, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (register, 0x2c, 4)
read_pattern_file, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
read_pattern_file, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (register, 0x68, 1) COPY (register, 0x62, 1)
read_pattern_file, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x28, 4)
read_pattern_file, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x2c, 4)
read_pattern_file, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x2c, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_pattern_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_pattern_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_pattern_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_pattern_file, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x11ba0, 4) , (unique, 0x2680, 1)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x20, 4) COPY (const, 0x1, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x66, 1) COPY (register, 0x68, 1)
read_pattern_file, (register, 0x67, 1) COPY (register, 0x63, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x11bb0, 4) , (register, 0x61, 1)
read_pattern_file, (register, 0x20, 4) COPY (register, 0x28, 4)
read_pattern_file, (register, 0x58, 4) COPY (const, 0x11bac, 4)
read_pattern_file,  ---  CALL (ram, 0x11524, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x20, 4) COPY (const, 0x1, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x66, 1) COPY (register, 0x68, 1)
read_pattern_file, (register, 0x67, 1) COPY (register, 0x63, 1)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2000, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2000, 4)
read_pattern_file, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2000, 4)
read_pattern_file, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x2000, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x2c, 4)
read_pattern_file, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x2c, 4)
read_pattern_file, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x2c, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
read_pattern_file, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
read_pattern_file, (register, 0x68, 1) COPY (register, 0x62, 1)
read_pattern_file, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x28, 4)
read_pattern_file, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x2c, 4)
read_pattern_file, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x2c, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x62, 1) COPY (register, 0x66, 1)
read_pattern_file, (register, 0x61, 1) COPY (register, 0x65, 1)
read_pattern_file, (register, 0x60, 1) COPY (register, 0x64, 1)
read_pattern_file, (register, 0x63, 1) COPY (register, 0x67, 1)
read_pattern_file,  ---  CBRANCH (ram, 0x11bd0, 4) , (register, 0x61, 1)
read_pattern_file, (register, 0x58, 4) COPY (const, 0x11bd0, 4)
read_pattern_file,  ---  CALL (ram, 0x113ec, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2000, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2000, 4)
read_pattern_file, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2000, 4)
read_pattern_file, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x2000, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x2e80, 4) INT_RIGHT (const, 0x34, 4) , (const, 0x1f, 4)
read_pattern_file, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_pattern_file, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_pattern_file, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_pattern_file, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_pattern_file, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_pattern_file, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x34, 4)
read_pattern_file, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x34, 4)
read_pattern_file, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
read_pattern_file, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x80, 4) COPY (register, 0x54, 4)
read_pattern_file, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_pattern_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_pattern_file, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_pattern_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_pattern_file, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_pattern_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_pattern_file, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_pattern_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_pattern_file, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_pattern_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_pattern_file, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_pattern_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_pattern_file, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_pattern_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_pattern_file, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_pattern_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_pattern_file, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_pattern_file, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_pattern_file, (register, 0x54, 4) COPY (register, 0x80, 4)
read_pattern_file, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
read_pattern_file, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
read_pattern_file, (register, 0x69, 1) COPY (register, 0xb0, 1)
read_pattern_file, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
read_pattern_file,  ---  RETURN (register, 0x5c, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
main, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2040, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xd, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xd, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2040, 4) , (register, 0x54, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x2040, 4)
main, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x2040, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12be4, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3c, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3c, 4) , (register, 0x54, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x3c, 4)
main, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x3c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2040, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xd, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xd, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2040, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2040, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x2040, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11c10, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x34, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (const, 0x34, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x34, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x34, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (register, 0x30, 4) COPY (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x78, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x78, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x78, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x78, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (register, 0x34, 4) COPY (register, 0x2c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12be8, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8480, 4) INT_ADD (register, 0x30, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x30, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x30, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x30, 4)
main, (register, 0x24, 4) INT_SUB (register, 0x34, 4) , (const, 0x30, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x3c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (register, 0x58, 4) COPY (const, 0x11c54, 4)
main,  ---  CALL (ram, 0x1147c, 4)
main, (unique, 0x8380, 4) INT_ADD (register, 0x34, 4) , (const, 0xffffffd0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (unique, 0x3b680, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b680, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b680, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12778, 4) , (register, 0x61, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x11c90, 4) , (unique, 0x2600, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0xd, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0xd, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0xd, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0xd, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12760, 4) , (register, 0x61, 1)
main, (register, 0x28, 4) COPY (const, 0xd0a, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x28, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x1200c, 4) , (unique, 0x1a80, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12bec, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12bf0, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11c80, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11c84, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x90, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main,  ---  BRANCH (ram, 0x11cac, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x2, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x3b680, 4) INT_ADD (register, 0x2c, 4) , (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b680, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b680, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x1200c, 4) , (unique, 0x1a80, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12bf4, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12bf8, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11ca0, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11ca4, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x90, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x30, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8380, 4) INT_ADD (register, 0x2c, 4) , (const, 0xffffffd0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8380, 4) , (register, 0x30, 4)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x11e68, 4) , (unique, 0x2600, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
main, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2d, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2d, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11e68, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11e54, 4) , (register, 0x61, 1)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12bfc, 4)
main, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c00, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11cec, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c04, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11cf8, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x44, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x44, 4)
main, (register, 0x44, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x44, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11cfc, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x44, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c08, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11d08, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x48, 4) COPY (register, 0x28, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2d, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2d, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x120e0, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x34, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x38, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x38, 4) , (const, 0x1, 4)
main, (register, 0x4c, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x120d8, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x44, 4) , (const, 0x10, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12024, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x44, 4) , (const, 0xc, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x44, 4) , (const, 0xc, 4)
main, (register, 0x30, 4) INT_ADD (register, 0x44, 4) , (const, 0xc, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main,  ---  BRANCH (ram, 0x11d4c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x14, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x14, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x14, 4)
main, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x14, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12024, 4) , (register, 0x61, 1)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x34, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x34, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x34, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11d3c, 4) , (unique, 0x1a80, 1)
main, (register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (register, 0x4c, 4)
main, (register, 0x3c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x123a4, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x5, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x5, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x5, 4)
main, (register, 0x2c, 4) INT_SUB (register, 0x38, 4) , (const, 0x5, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
main, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12064, 4) , (unique, 0x2080, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x1235c, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x30, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (register, 0x34, 4)
main, (register, 0x58, 4) COPY (const, 0x11d84, 4)
main,  ---  CALL (ram, 0x15888, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x34, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x30, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11d28, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (register, 0x20, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x11da4, 4) , (unique, 0x2680, 1)
main, (register, 0x2c, 4) COPY (register, 0x34, 4)
main,  ---  CBRANCH (ram, 0x12308, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x5, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x5, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x5, 4)
main, (register, 0x28, 4) INT_SUB (register, 0x38, 4) , (const, 0x5, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x2, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x11db4, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x1, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
main, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12320, 4) , (unique, 0x2080, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8380, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffd0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x1, 4)
main, (register, 0x24, 4) INT_SUB (register, 0x24, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (register, 0x28, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x24, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
main,  ---  CBRANCH (ram, 0x11dd0, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x34, 4) INT_OR (register, 0x34, 4) , (const, 0x1, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (unique, 0x6d500, 4) INT_AND (register, 0x34, 4) , (const, 0x1, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12790, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x1, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8380, 4) INT_ADD (register, 0x24, 4) , (const, 0xffffffd0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8380, 4) , (register, 0x28, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x28, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x24, 4) , (unique, 0x7800, 4)
main, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x7, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x7, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x7, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x7, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12368, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x8, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x8, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x8, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12460, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x9, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x9, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x9, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x9, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x123f0, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x3, 4)
main, (register, 0x38, 4) INT_SUB (register, 0x38, 4) , (const, 0x3, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x2, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
main, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12444, 4) , (unique, 0x2080, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x4c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8380, 4) INT_ADD (register, 0x2c, 4) , (const, 0xffffffd0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x30, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x30, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x30, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8380, 4) INT_ADD (register, 0x2c, 4) , (const, 0xffffffd0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8380, 4) , (register, 0x30, 4)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x11e68, 4) , (unique, 0x2600, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x30, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x2c, 4) , (unique, 0x7800, 4)
main, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2d, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2d, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11e68, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11d10, 4) , (unique, 0x1a80, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c0c, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11e58, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x94, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12f24, 4) , (register, 0x61, 1)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c10, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11e6c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x9c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x11e9c, 4) , (unique, 0x2600, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x1c, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11e88, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x1c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c14, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11e8c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x60, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11e9c, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x60, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c18, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11ea0, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x58, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x54, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main,  ---  CBRANCH (ram, 0x12720, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12734, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x50, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12734, 4) , (unique, 0x1a80, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c1c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11ed0, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c20, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11edc, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x34, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0xa0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12eb4, 4) , (register, 0x61, 1)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c24, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11ef0, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x30, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x30, 4)
main, (register, 0x30, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x30, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x24, 4) COPY (register, 0x20, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x58, 4) COPY (const, 0x11f00, 4)
main,  ---  CALL (ram, 0x1153c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x126e8, 4) , (register, 0x61, 1)
main, (register, 0x58, 4) COPY (const, 0x11f0c, 4)
main,  ---  CALL (ram, 0x113b0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c28, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11f10, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x24, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c2c, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11f1c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x34, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x98, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11f98, 4) , (register, 0x61, 1)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c30, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11f34, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x11f3c, 4)
main,  ---  CALL (ram, 0x11380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11f98, 4) , (register, 0x61, 1)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c34, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11f4c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x11f54, 4)
main,  ---  CALL (ram, 0x11380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11f5c, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11f60, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x5c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x126bc, 4) , (unique, 0x1a80, 1)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c38, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11f68, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
main, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x11f70, 4)
main,  ---  CALL (ram, 0x11434, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11f8c, 4) , (unique, 0x1a80, 1)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c3c, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11f7c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
main, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x11f84, 4)
main,  ---  CALL (ram, 0x11434, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11f98, 4) , (register, 0x61, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c40, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11f90, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c44, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11f9c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x90, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x34, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x63, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x63, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x63, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x63, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x124c8, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x72, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x72, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x72, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x72, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x124dc, 4) , (register, 0x61, 1)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c48, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11fc4, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x11fcc, 4)
main,  ---  CALL (ram, 0x11380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11fec, 4) , (register, 0x61, 1)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c4c, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11fdc, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x11fe4, 4)
main,  ---  CALL (ram, 0x11380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12ab0, 4) , (unique, 0x1a80, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c50, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1780, 4) INT_ADD (const, 0x11ff4, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x30, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x300000, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x6, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x6, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) INT_OR (register, 0x28, 4) , (const, 0x300000, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x30, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main,  ---  BRANCH (ram, 0x12504, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c54, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c58, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12014, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12018, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x90, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main,  ---  BRANCH (ram, 0x11cac, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12dac, 4)
main, (register, 0x2c, 4) COPY (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8380, 4) INT_ADD (register, 0x24, 4) , (const, 0xffffffd0, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8480, 4) INT_ADD (register, 0x20, 4) , (register, 0x28, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x50, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (unique, 0x7800, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c5c, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12054, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x1205c, 4)
main,  ---  CALL (ram, 0x1150c, 4)
main, (register, 0x58, 4) COPY (const, 0x12060, 4)
main,  ---  CALL (ram, 0x15668, 4)
main, (register, 0x58, 4) COPY (const, 0x12064, 4)
main,  ---  CALL (ram, 0x138e4, 4)
main, (register, 0x58, 4) COPY (const, 0x12068, 4)
main,  ---  CALL (ram, 0x11494, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x1, 4)
main, (unique, 0x3300, 4) INT_RIGHT (register, 0x3c, 4) , (unique, 0x3280, 4)
main, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
main, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
main, (unique, 0x3580, 4) INT_LEFT (register, 0x3c, 4) , (const, 0x1, 4)
main, (register, 0x3c, 4) COPY (unique, 0x3580, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x9380, 4) INT_ADD (register, 0x2c, 4) , (register, 0x3c, 4)
main, (unique, 0x3d180, 2) LOAD (const, 0x1a1, 8) , (unique, 0x9380, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3d180, 2)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x800, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xb, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xb, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (unique, 0x6d500, 4) INT_AND (register, 0x2c, 4) , (const, 0x800, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11d78, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x34, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x2c, 4) COPY (register, 0x34, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x28, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11da8, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x6, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x6, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11dec, 4) , (unique, 0x1a80, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0xc, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0xc, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x30, 4) , (const, 0xc, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x4, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x4, 4)
main, (register, 0x24, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) COPY (register, 0x4c, 4)
main, (register, 0x58, 4) COPY (const, 0x120a8, 4)
main,  ---  CALL (ram, 0x1571c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x120b8, 4)
main,  ---  CALL (ram, 0x13ce0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x120cc, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x120d0, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x120d4, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main,  ---  BRANCH (ram, 0x11e18, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x35a80, 4) CALLOTHER (const, 0x12, 4) , (const, 0x0, 4) , (const, 0x120dc, 4)
main,  ---  BRANCHIND (unique, 0x35a80, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x38, 4) , (const, 0x2, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x38, 4) , (const, 0x2, 4)
main, (register, 0x34, 4) INT_ADD (register, 0x38, 4) , (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3d, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x3d, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x20, 4) COPY (register, 0x34, 4)
main, (register, 0x58, 4) COPY (const, 0x120f0, 4)
main,  ---  CALL (ram, 0x114b8, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x2, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12dd8, 4) , (register, 0x61, 1)
main, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c60, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12100, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
main, (register, 0x3c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x3c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x10, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12a64, 4) , (register, 0x61, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c64, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (const, 0xc, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (const, 0xc, 4)
main, (register, 0x3c, 4) INT_ADD (register, 0x3c, 4) , (const, 0xc, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x1211c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c68, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x44, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x1212c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x48, 4)
main,  ---  BRANCH (ram, 0x121e0, 4)
main, (register, 0x20, 4) COPY (register, 0x34, 4)
main, (register, 0x58, 4) COPY (const, 0x12144, 4)
main,  ---  CALL (ram, 0x114ac, 4)
main, (register, 0x48, 4) COPY (register, 0x20, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x44, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) COPY (const, 0x18, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x28, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x28, 4) , (register, 0x50, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x28, 4)
main, (register, 0x40, 4) INT_SUB (register, 0x50, 4) , (const, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
main, (register, 0x20, 4) COPY (register, 0x40, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x10, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x10, 4) , (register, 0x50, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x10, 4)
main, (register, 0x44, 4) INT_SUB (register, 0x50, 4) , (const, 0x10, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12170, 4)
main,  ---  CALL (ram, 0x114dc, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x38, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x38, 4) , (const, 0x1, 4)
main, (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x40, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x30, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x30, 4)
main, (register, 0x50, 4) INT_SUB (register, 0x2c, 4) , (register, 0x30, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x50, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x2, 4)
main, (register, 0x50, 4) INT_SUB (register, 0x50, 4) , (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) COPY (const, 0x18, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x20, 4) COPY (register, 0x44, 4)
main, (register, 0x58, 4) COPY (const, 0x121a0, 4)
main,  ---  CALL (ram, 0x114dc, 4)
main, (register, 0x20, 4) COPY (register, 0x34, 4)
main, (register, 0x24, 4) COPY (register, 0x40, 4)
main, (register, 0x28, 4) COPY (register, 0x48, 4)
main, (register, 0x58, 4) COPY (const, 0x121b0, 4)
main,  ---  CALL (ram, 0x11590, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x122b0, 4) , (register, 0x61, 1)
main, (register, 0x24, 4) COPY (register, 0x44, 4)
main, (register, 0x28, 4) COPY (register, 0x48, 4)
main, (register, 0x20, 4) COPY (register, 0x34, 4)
main, (register, 0x58, 4) COPY (const, 0x121c8, 4)
main,  ---  CALL (ram, 0x11590, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x122b0, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x18, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x14, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (const, 0x14, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (const, 0x14, 4)
main, (register, 0x3c, 4) INT_ADD (register, 0x3c, 4) , (const, 0x14, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12a64, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0xc, 4)
main, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x28, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x20, 4) COPY (register, 0x44, 4)
main, (register, 0x58, 4) COPY (const, 0x121f0, 4)
main,  ---  CALL (ram, 0x114b8, 4)
main, (register, 0x38, 4) COPY (register, 0x20, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3d, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x3d, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x20, 4) COPY (register, 0x44, 4)
main, (register, 0x58, 4) COPY (const, 0x12200, 4)
main,  ---  CALL (ram, 0x114b8, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (register, 0x4c, 4) COPY (register, 0x20, 4)
main,  ---  CBRANCH (ram, 0x12244, 4) , (register, 0x61, 1)
main, (register, 0x20, 4) COPY (register, 0x44, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x29, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x29, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x58, 4) COPY (const, 0x12218, 4)
main,  ---  CALL (ram, 0x114b8, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x44, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (register, 0x44, 4)
main, (register, 0x20, 4) INT_SUB (register, 0x20, 4) , (register, 0x44, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x44, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x44, 4)
main, (register, 0x30, 4) INT_SUB (register, 0x38, 4) , (register, 0x44, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x1222c, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x4c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0x1, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  CBRANCH (ram, 0x1213c, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x34, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x34, 4)
main, (register, 0x48, 4) INT_SUB (register, 0x2c, 4) , (register, 0x34, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
main,  ---  BRANCH (ram, 0x12148, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x123b0, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x44, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (register, 0x44, 4)
main, (register, 0x4c, 4) INT_SUB (register, 0x20, 4) , (register, 0x44, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x1225c, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x12260, 4) , (unique, 0x2680, 1)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x34, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x34, 4)
main, (register, 0x30, 4) INT_SUB (register, 0x2c, 4) , (register, 0x34, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main,  ---  CBRANCH (ram, 0x123e0, 4) , (register, 0x61, 1)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x4c, 4) , (register, 0x30, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (register, 0x4c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x30, 4) , (register, 0x4c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x121d0, 4) , (unique, 0x1a80, 1)
main, (register, 0x24, 4) COPY (register, 0x44, 4)
main, (register, 0x20, 4) COPY (register, 0x34, 4)
main, (register, 0x28, 4) COPY (register, 0x30, 4)
main, (register, 0x58, 4) COPY (const, 0x1227c, 4)
main,  ---  CALL (ram, 0x11590, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x121d0, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8480, 4) INT_ADD (register, 0x34, 4) , (register, 0x30, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (register, 0x30, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (register, 0x30, 4)
main, (register, 0x4c, 4) INT_ADD (register, 0x34, 4) , (register, 0x30, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
main, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3d, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3d, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3d, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3d, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
main, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x1229c, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x4c, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x4c, 4) , (const, 0x1, 4)
main, (register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x122a0, 4) , (unique, 0x2680, 1)
main, (register, 0x30, 4) COPY (register, 0x3c, 4)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x122a4, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x34, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  CBRANCH (ram, 0x122e0, 4) , (register, 0x61, 1)
main, (register, 0x34, 4) COPY (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x122dc, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
main, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (register, 0x4c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
main, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
main, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x122c8, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x4c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x122cc, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x34, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x122d0, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x34, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x1242c, 4) , (unique, 0x1a80, 1)
main, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c6c, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x122d8, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x4c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x4c, 4)
main, (register, 0x4c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x4c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) COPY (register, 0x3c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12a64, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x0, 4)
main, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12084, 4) , (unique, 0x1a80, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c70, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12300, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x30, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12310, 4)
main,  ---  CALL (ram, 0x15888, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c74, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12314, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x30, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x11e18, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (unique, 0x3b680, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b680, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b680, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12414, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6f, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6f, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x6f, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x6f, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11e18, 4) , (unique, 0x1a80, 1)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c78, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1780, 4) INT_ADD (const, 0x1233c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x30, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x30, 4)
main, (register, 0x30, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x30, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8c, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12348, 4)
main,  ---  CALL (ram, 0x13ce0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12358, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x58, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x11e18, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x7, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x7, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x7, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x7, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11df4, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (register, 0x4c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x1237c, 4)
main,  ---  CALL (ram, 0x13d58, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12b34, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x123a0, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main,  ---  BRANCH (ram, 0x11e18, 4)
main, (register, 0x34, 4) COPY (register, 0x3c, 4)
main, (register, 0x2c, 4) COPY (register, 0x3c, 4)
main,  ---  BRANCH (ram, 0x122f4, 4)
main, (register, 0x24, 4) COPY (register, 0x44, 4)
main, (register, 0x20, 4) COPY (register, 0x34, 4)
main, (register, 0x58, 4) COPY (const, 0x123bc, 4)
main,  ---  CALL (ram, 0x11380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x121d0, 4) , (unique, 0x1a80, 1)
main, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c7c, 4)
main, (register, 0x34, 4) COPY (register, 0x20, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
main, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x30, 4) COPY (register, 0x3c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
main, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x123d8, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x4c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x4c, 4)
main, (register, 0x4c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x4c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
main,  ---  BRANCH (ram, 0x122e0, 4)
main, (register, 0x20, 4) COPY (register, 0x34, 4)
main, (register, 0x58, 4) COPY (const, 0x123e8, 4)
main,  ---  CALL (ram, 0x114ac, 4)
main, (register, 0x30, 4) COPY (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x12264, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (register, 0x4c, 4)
main, (register, 0x58, 4) COPY (const, 0x123fc, 4)
main,  ---  CALL (ram, 0x11380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x124a0, 4) , (unique, 0x1a80, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c80, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12408, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x3c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x11e18, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c84, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c88, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x1241c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12420, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x98, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main,  ---  BRANCH (ram, 0x11e18, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3d, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3d, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3d, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3d, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12438, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x4c, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x4c, 4) , (const, 0x1, 4)
main, (register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x1243c, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x34, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x12440, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x34, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x122dc, 4)
main, (register, 0x20, 4) COPY (register, 0x4c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x4, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x4, 4)
main, (register, 0x24, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0xc, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0xc, 4)
main, (register, 0x28, 4) INT_ADD (register, 0x30, 4) , (const, 0xc, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12454, 4)
main,  ---  CALL (ram, 0x1571c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x11e18, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (register, 0x38, 4)
main, (register, 0x58, 4) COPY (const, 0x1246c, 4)
main,  ---  CALL (ram, 0x1144c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12a9c, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x80, 4) COPY (register, 0x20, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x28, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x1248c, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x12490, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12494, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x12498, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x1249c, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x12458, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x44, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (register, 0x4c, 4)
main, (register, 0x58, 4) COPY (const, 0x124ac, 4)
main,  ---  CALL (ram, 0x11380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x1264c, 4) , (unique, 0x1a80, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c8c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1780, 4) INT_ADD (const, 0x124bc, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x3c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main,  ---  BRANCH (ram, 0x11e18, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x43, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x43, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x43, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x43, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x126a4, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x52, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x52, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x52, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x52, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11fbc, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x2, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11fbc, 4) , (unique, 0x1a80, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c90, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1780, 4) INT_ADD (const, 0x124f0, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x30, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x100000, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x6, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x6, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) INT_OR (register, 0x28, 4) , (const, 0x100000, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x30, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c94, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12508, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x34, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0xa4, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12574, 4) , (register, 0x61, 1)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c98, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12520, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12528, 4)
main,  ---  CALL (ram, 0x11380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12530, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x68, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  CBRANCH (ram, 0x12574, 4) , (register, 0x61, 1)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x12c9c, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x1253c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12544, 4)
main,  ---  CALL (ram, 0x11380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x1254c, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12550, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x68, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main,  ---  CBRANCH (ram, 0x12574, 4) , (register, 0x61, 1)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x12ca0, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x1255c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12564, 4)
main,  ---  CALL (ram, 0x11380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x1256c, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12570, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x68, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12afc, 4) , (unique, 0x1a80, 1)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (const, 0x12ca4, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12578, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x34, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0xa8, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x125c4, 4) , (register, 0x61, 1)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x12ca8, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12590, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12598, 4)
main,  ---  CALL (ram, 0x11380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x125a0, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x78, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  CBRANCH (ram, 0x125c4, 4) , (register, 0x61, 1)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x12cac, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x125ac, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x125b4, 4)
main,  ---  CALL (ram, 0x11380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x125bc, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x125c0, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x78, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12678, 4) , (unique, 0x1a80, 1)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12cb0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x3, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (const, 0x12cb4, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x125d0, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x125d4, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x30, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x30, 4)
main, (register, 0x30, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x30, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x8, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) INT_MULT (register, 0x2c, 4) , (register, 0x20, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (register, 0x58, 4) COPY (const, 0x125e8, 4)
main,  ---  CALL (ram, 0x1144c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x34, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x1294c, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12890, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x94, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12890, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8380, 4) INT_ADD (register, 0x2c, 4) , (const, 0xffffffd0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x2c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x12868, 4) , (unique, 0x2480, 1)
main, (register, 0x58, 4) COPY (const, 0x12624, 4)
main,  ---  CALL (ram, 0x15668, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2040, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xd, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xd, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2040, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2040, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x2040, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x34, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x34, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x34, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x34, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x3c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x2c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12864, 4) , (unique, 0x1a80, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2040, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xd, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xd, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x2040, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x2040, 4)
main, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x2040, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3c, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x3c, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x3c, 4)
main, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x3c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
main, (register, 0x80, 4) COPY (register, 0x54, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
main, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
main, (register, 0x54, 4) COPY (register, 0x80, 4)
main, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
main, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
main, (register, 0x69, 1) COPY (register, 0xb0, 1)
main, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
main,  ---  RETURN (register, 0x5c, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x12cb8, 4)
main, (register, 0x20, 4) COPY (register, 0x4c, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12654, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x1265c, 4)
main,  ---  CALL (ram, 0x11380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12804, 4) , (unique, 0x1a80, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12cbc, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) COPY (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1780, 4) INT_ADD (const, 0x1266c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x3c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main,  ---  BRANCH (ram, 0x11e18, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12cc0, 4)
main, (register, 0x2c, 4) COPY (register, 0x30, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x12dac, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12684, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8480, 4) INT_ADD (register, 0x50, 4) , (register, 0x20, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x1269c, 4)
main,  ---  CALL (ram, 0x1150c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x12624, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6c, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6c, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x6c, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x6c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x127c4, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x66, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x66, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x66, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x66, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11fbc, 4) , (unique, 0x1a80, 1)
main,  ---  BRANCH (ram, 0x127d8, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x12cc4, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x126c4, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x126cc, 4)
main,  ---  CALL (ram, 0x11380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x1283c, 4) , (register, 0x61, 1)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12cc8, 4)
main, (register, 0x2c, 4) COPY (register, 0x30, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x12dac, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x126e0, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main,  ---  BRANCH (ram, 0x12688, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12dac, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12ccc, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x20, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x126fc, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12cd0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0xa0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x1270c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
main, (register, 0x58, 4) COPY (const, 0x12718, 4)
main,  ---  CALL (ram, 0x1150c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x12624, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x50, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12830, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11ec8, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12dac, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4b, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) COPY (const, 0x4b, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x12cd4, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x50, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x1274c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
main, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12758, 4)
main,  ---  CALL (ram, 0x11410, 4)
main, (register, 0x58, 4) COPY (const, 0x1275c, 4)
main,  ---  CALL (ram, 0x15668, 4)
main, (register, 0x58, 4) COPY (const, 0x12760, 4)
main,  ---  CALL (ram, 0x138e4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12cd8, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12cdc, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12768, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x1276c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x90, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main,  ---  BRANCH (ram, 0x11cac, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12ce0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12ce4, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12780, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12784, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x90, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main,  ---  BRANCH (ram, 0x11cac, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x12dac, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x28, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x2c, 4) , (unique, 0x7800, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (register, 0x28, 4) COPY (register, 0x20, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x20, 4) , (register, 0x28, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12ce8, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x127b4, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x127bc, 4)
main,  ---  CALL (ram, 0x1150c, 4)
main, (register, 0x58, 4) COPY (const, 0x127c0, 4)
main,  ---  CALL (ram, 0x15668, 4)
main, (register, 0x58, 4) COPY (const, 0x127c4, 4)
main,  ---  CALL (ram, 0x138e4, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4c, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4c, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x4c, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x4c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11fbc, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x46, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x46, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x46, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x46, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11fbc, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x2, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11fbc, 4) , (unique, 0x1a80, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12cec, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1780, 4) INT_ADD (const, 0x127ec, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x30, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x200000, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x6, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x6, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) INT_OR (register, 0x28, 4) , (const, 0x200000, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x30, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main,  ---  BRANCH (ram, 0x12504, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (register, 0x4c, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x12dac, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12cf0, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x50, 4) , (register, 0x20, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x1281c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12828, 4)
main,  ---  CALL (ram, 0x1150c, 4)
main, (register, 0x58, 4) COPY (const, 0x1282c, 4)
main,  ---  CALL (ram, 0x15668, 4)
main, (register, 0x58, 4) COPY (const, 0x12830, 4)
main,  ---  CALL (ram, 0x138e4, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11ec8, 4) , (unique, 0x1a80, 1)
main,  ---  BRANCH (ram, 0x11ed8, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12cf4, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12850, 4)
main,  ---  CALL (ram, 0x11500, 4)
main, (register, 0x58, 4) COPY (const, 0x12854, 4)
main,  ---  CALL (ram, 0x11578, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x5c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11f98, 4) , (register, 0x61, 1)
main,  ---  BRANCH (ram, 0x11f64, 4)
main, (register, 0x58, 4) COPY (const, 0x12868, 4)
main,  ---  CALL (ram, 0x113ec, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (unique, 0x7800, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8380, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffd0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8380, 4) , (register, 0x2c, 4)
main, (register, 0x58, 4) COPY (const, 0x12880, 4)
main,  ---  CALL (ram, 0x13d58, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xac, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main,  ---  CBRANCH (ram, 0x12b34, 4) , (register, 0x61, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12cf8, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x34, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (const, 0x12cfc, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x1289c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d00, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x128a4, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x38, 4)
main, (register, 0x38, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x38, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0xc, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x128ac, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
main, (register, 0x3c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x3c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12904, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x30, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x1, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x88, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x128c8, 4) , (unique, 0x2680, 1)
main, (register, 0x2c, 4) COPY (register, 0x34, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x128dc, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0xc, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x128dc, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x3c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x58, 4) COPY (const, 0x128f0, 4)
main,  ---  CALL (ram, 0x11618, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12b34, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x1, 4)
main, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main,  ---  BRANCH (ram, 0x128b0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d04, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d08, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x1290c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12910, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x34, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x94, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0xc, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0xc, 4)
main, (register, 0x3c, 4) INT_ADD (register, 0x34, 4) , (const, 0xc, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0xac, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0xac, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0xac, 4)
main, (register, 0x38, 4) INT_ADD (register, 0x34, 4) , (const, 0xac, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x129d8, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (register, 0x3c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x88, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x28, 4) COPY (register, 0x38, 4)
main, (register, 0x58, 4) COPY (const, 0x1293c, 4)
main,  ---  CALL (ram, 0x119a8, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12b34, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main,  ---  BRANCH (ram, 0x12920, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d0c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12dac, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12958, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
main, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) COPY (const, 0x18, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x30, 4) COPY (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8480, 4) INT_ADD (register, 0x50, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12974, 4)
main,  ---  CALL (ram, 0x11410, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d10, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12978, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x34, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x1298c, 4) , (register, 0x61, 1)
main, (register, 0x58, 4) COPY (const, 0x1298c, 4)
main,  ---  CALL (ram, 0x113c8, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d14, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12990, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x34, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0xc, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x1299c, 4)
main,  ---  CALL (ram, 0x115b4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x7c, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x129a4, 4)
main,  ---  CALL (ram, 0x115b4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x6c, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x129ac, 4)
main,  ---  CALL (ram, 0x115b4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x80, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x129b4, 4)
main,  ---  CALL (ram, 0x115b4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x70, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x129bc, 4)
main,  ---  CALL (ram, 0x115b4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0xc0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12b10, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x129d0, 4)
main,  ---  CALL (ram, 0x113c8, 4)
main, (register, 0x20, 4) COPY (register, 0x34, 4)
main,  ---  BRANCH (ram, 0x129c0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d18, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x129dc, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0xb0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x129f8, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0xb4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12a0c, 4) , (register, 0x61, 1)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d1c, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x129fc, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x84, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) INT_OR (register, 0x2c, 4) , (const, 0x8, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x84, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d20, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x38, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12a18, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d24, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2c, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2c, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x2c, 4)
main, (register, 0x3c, 4) INT_SUB (register, 0x28, 4) , (const, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0xc, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x40, 4) COPY (register, 0x28, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12a2c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x34, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12e60, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x28, 4) COPY (register, 0x3c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x84, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12a48, 4)
main,  ---  CALL (ram, 0x11560, 4)
main, (unique, 0x8380, 4) INT_ADD (register, 0x40, 4) , (const, 0xffffffd4, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12de8, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x38, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x38, 4) , (const, 0x1, 4)
main, (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main,  ---  BRANCH (ram, 0x12a30, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12dac, 4)
main, (unique, 0x8380, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffd0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (register, 0x2c, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x20, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x2c, 4) , (unique, 0x7800, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d28, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12a8c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12a94, 4)
main,  ---  CALL (ram, 0x1150c, 4)
main, (register, 0x58, 4) COPY (const, 0x12a98, 4)
main,  ---  CALL (ram, 0x15668, 4)
main, (register, 0x58, 4) COPY (const, 0x12a9c, 4)
main,  ---  CALL (ram, 0x138e4, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d2c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12dac, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12aa8, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
main, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main,  ---  BRANCH (ram, 0x1295c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x61, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x61, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x61, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x61, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12b60, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6e, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6e, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x6e, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x6e, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12b80, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x2, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x79, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x79, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x79, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x79, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12b80, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x3, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12b80, 4) , (unique, 0x1a80, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d30, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x3, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12ae4, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x30, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x400000, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x5, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x5, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) INT_OR (register, 0x28, 4) , (const, 0x400000, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x30, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main,  ---  BRANCH (ram, 0x12504, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d34, 4)
main, (register, 0x2c, 4) COPY (register, 0x30, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x12dac, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12b08, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main,  ---  BRANCH (ram, 0x12688, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d38, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12b14, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0xb8, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12b3c, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12b2c, 4)
main,  ---  CALL (ram, 0x113c8, 4)
main, (register, 0x20, 4) COPY (register, 0x34, 4)
main,  ---  BRANCH (ram, 0x12b1c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x30, 4) COPY (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main,  ---  BRANCH (ram, 0x12974, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d3c, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12b40, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x94, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12db4, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12b58, 4)
main,  ---  CALL (ram, 0x113c8, 4)
main, (register, 0x20, 4) COPY (register, 0x34, 4)
main,  ---  BRANCH (ram, 0x12b48, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x41, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x41, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x41, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x41, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12b80, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4e, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4e, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x4e, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x4e, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12b80, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x2, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x59, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x59, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x59, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x59, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12ad0, 4) , (register, 0x61, 1)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d40, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12b88, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12b90, 4)
main,  ---  CALL (ram, 0x11380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12bb0, 4) , (register, 0x61, 1)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d44, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12ba0, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12ba8, 4)
main,  ---  CALL (ram, 0x11380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12bd0, 4) , (unique, 0x1a80, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d48, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x4, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12bb8, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x30, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x500000, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x6, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x6, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) INT_OR (register, 0x28, 4) , (const, 0x500000, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x30, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main,  ---  BRANCH (ram, 0x12504, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d4c, 4)
main, (register, 0x2c, 4) COPY (register, 0x30, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x12dac, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12bdc, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main,  ---  BRANCH (ram, 0x12688, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d50, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12db8, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0xc8, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12eec, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x12dd0, 4)
main,  ---  CALL (ram, 0x113c8, 4)
main, (register, 0x20, 4) COPY (register, 0x34, 4)
main,  ---  BRANCH (ram, 0x12dc0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x8380, 4) INT_ADD (register, 0x2c, 4) , (const, 0xffffffd0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8380, 4) , (register, 0x30, 4)
main,  ---  BRANCH (ram, 0x11e68, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0xc, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12df8, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x68, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x68, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x68, 4)
main, (register, 0x30, 4) INT_ADD (register, 0x54, 4) , (const, 0x68, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12dfc, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12e00, 4) , (unique, 0x2680, 1)
main, (unique, 0x8380, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffff0, 4)
main, (unique, 0x6a380, 1) SUBPIECE (register, 0x2c, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8380, 4) , (unique, 0x6a380, 1)
main,  ---  CBRANCH (ram, 0x12e28, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x10, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) COPY (const, 0x10, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x10, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x10, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x10, 4)
main, (register, 0x30, 4) INT_SUB (register, 0x2c, 4) , (const, 0x10, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d54, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12e20, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12e28, 4)
main,  ---  CALL (ram, 0x114dc, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) COPY (register, 0x30, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x30, 4) COPY (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12dac, 4)
main, (unique, 0x8380, 4) INT_ADD (register, 0x24, 4) , (const, 0xffffffd4, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8480, 4) INT_ADD (register, 0x50, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d58, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12e54, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12e5c, 4)
main,  ---  CALL (ram, 0x1150c, 4)
main,  ---  BRANCH (ram, 0x12974, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d5c, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12e64, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0xc, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0xb0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0xb4, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12f34, 4) , (register, 0x61, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x12e84, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x12e88, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x12e8c, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x8, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x12e90, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) INT_OR (register, 0x28, 4) , (const, 0x2, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x12e94, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x12e9c, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x12ea4, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x12ea8, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x14, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x12eac, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x10, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) INT_OR (register, 0x28, 4) , (const, 0x10, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x12eb0, 4) , (unique, 0x2680, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main,  ---  BRANCH (ram, 0x12e74, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d60, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12eb8, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
main, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x58, 4) COPY (const, 0x12ec0, 4)
main,  ---  CALL (ram, 0x11434, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0xa0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12f10, 4) , (unique, 0x1a80, 1)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d64, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12ed0, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x30, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x30, 4)
main, (register, 0x30, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x30, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (register, 0x58, 4) COPY (const, 0x12edc, 4)
main,  ---  CALL (ram, 0x11434, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0xa0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x11f18, 4) , (register, 0x61, 1)
main,  ---  BRANCH (ram, 0x11ef4, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d68, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12ef0, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x34, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x58, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12f1c, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x58, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (register, 0x58, 4) COPY (const, 0x12f0c, 4)
main,  ---  CALL (ram, 0x113c8, 4)
main,  ---  BRANCH (ram, 0x12ef4, 4)
main, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d6c, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12f14, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x30, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x30, 4)
main, (register, 0x30, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x30, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main,  ---  BRANCH (ram, 0x11ef4, 4)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (register, 0x58, 4) COPY (const, 0x12f24, 4)
main,  ---  CALL (ram, 0x138e4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0xc, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x11e68, 4) , (unique, 0x1a80, 1)
main,  ---  BRANCH (ram, 0x12a94, 4)
main, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d70, 4)
main, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d74, 4)
main, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d78, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12f40, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x44, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x44, 4)
main, (register, 0x44, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x44, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12f44, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x40, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x40, 4)
main, (register, 0x40, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x40, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12f48, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
main, (register, 0x3c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x3c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x40, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x44, 4) , (const, 0x40, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x44, 4) , (const, 0x40, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x44, 4) , (const, 0x40, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x38, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
main, (unique, 0x3300, 4) INT_RIGHT (register, 0x30, 4) , (unique, 0x3280, 4)
main, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
main, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
main, (unique, 0x3580, 4) INT_LEFT (register, 0x30, 4) , (const, 0x2, 4)
main, (register, 0x48, 4) COPY (unique, 0x3580, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x30, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x2c, 4) , (unique, 0x7800, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12fb8, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x30, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x50, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (const, 0x50, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (const, 0x50, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x3c, 4) , (const, 0x50, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x38, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x1, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8480, 4) INT_ADD (register, 0x48, 4) , (register, 0x2c, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x12f7c, 4) , (unique, 0x2680, 1)
main, (register, 0x2c, 4) COPY (register, 0x38, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12f8c, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x12f8c, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (register, 0x20, 4) COPY (register, 0x34, 4)
main, (register, 0x2c, 4) COPY (register, 0x28, 4)
main, (register, 0x58, 4) COPY (const, 0x12fa4, 4)
main,  ---  CALL (ram, 0x11618, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12b34, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x38, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x38, 4) , (const, 0x1, 4)
main, (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main,  ---  BRANCH (ram, 0x12f60, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4, 4) , (register, 0x30, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x4, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x4, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x12f4c, 4) , (unique, 0x1a80, 1)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d7c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d80, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12fcc, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x12fd0, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0xb8, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x7c, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x7c, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x7c, 4)
main, (register, 0x38, 4) INT_ADD (register, 0x2c, 4) , (const, 0x7c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0xbc, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0xbc, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0xbc, 4)
main, (register, 0x30, 4) INT_ADD (register, 0x2c, 4) , (const, 0xbc, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x1300c, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x4, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (register, 0x38, 4)
main, (register, 0x28, 4) COPY (register, 0x30, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x58, 4) COPY (const, 0x12ffc, 4)
main,  ---  CALL (ram, 0x119a8, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12b34, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main,  ---  BRANCH (ram, 0x12fe0, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d84, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d88, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x13014, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x13018, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0xc0, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x80, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x80, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x80, 4)
main, (register, 0x38, 4) INT_ADD (register, 0x2c, 4) , (const, 0x80, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc4, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0xc4, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0xc4, 4)
main, (register, 0x30, 4) INT_ADD (register, 0x2c, 4) , (const, 0xc4, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x13054, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x4, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x24, 4) COPY (register, 0x38, 4)
main, (register, 0x28, 4) COPY (register, 0x30, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x2c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x58, 4) COPY (const, 0x13044, 4)
main,  ---  CALL (ram, 0x119a8, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x12b34, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main,  ---  BRANCH (ram, 0x13028, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d8c, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x13058, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0xc8, 4)
main, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x1317c, 4) , (register, 0x61, 1)
main, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d90, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x30, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d94, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x13074, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x48, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x48, 4)
main, (register, 0x48, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x48, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x13078, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x1320c, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2d, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2d, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x131ec, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x131ec, 4) , (unique, 0x1a80, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12da0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (register, 0x2c, 4)
main, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x0, 4)
main, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x68, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x68, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x68, 4)
main, (register, 0x34, 4) INT_ADD (register, 0x54, 4) , (const, 0x68, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x4c, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x20, 4) COPY (register, 0x34, 4)
main, (register, 0x24, 4) COPY (const, 0x200a, 4)
main, (register, 0x28, 4) COPY (register, 0x38, 4)
main, (register, 0x58, 4) COPY (const, 0x130cc, 4)
main,  ---  CALL (ram, 0x113d4, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x131d0, 4) , (register, 0x61, 1)
main, (register, 0x20, 4) COPY (register, 0x34, 4)
main, (register, 0x58, 4) COPY (const, 0x130dc, 4)
main,  ---  CALL (ram, 0x114ac, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (register, 0x20, 4)
main, (register, 0x44, 4) INT_ADD (register, 0x34, 4) , (register, 0x20, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x48, 4)
main, (register, 0x48, 4) COPY (register, 0x3c, 4)
main, (register, 0x3c, 4) COPY (register, 0x38, 4)
main, (register, 0x38, 4) COPY (register, 0x30, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x34, 4) , (register, 0x44, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x44, 4) , (register, 0x34, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x44, 4) , (register, 0x34, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (register, 0x30, 4) COPY (register, 0x44, 4)
main, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
main, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x13118, 4) , (unique, 0x2080, 1)
main, (register, 0x58, 4) COPY (const, 0x13100, 4)
main,  ---  CALL (ram, 0x11494, 4)
main, (register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0xffffffff, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (register, 0x44, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x1, 4)
main, (unique, 0x3300, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x3280, 4)
main, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
main, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
main, (unique, 0x3580, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x2c, 4) COPY (unique, 0x3580, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x9380, 4) INT_ADD (register, 0x24, 4) , (register, 0x2c, 4)
main, (unique, 0x3d180, 2) LOAD (const, 0x1a1, 8) , (unique, 0x9380, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3d180, 2)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2000, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (unique, 0x6d500, 4) INT_AND (register, 0x2c, 4) , (const, 0x2000, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x130f0, 4) , (unique, 0x1a80, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x28, 4) COPY (register, 0x30, 4)
main, (register, 0x30, 4) COPY (register, 0x38, 4)
main, (register, 0x38, 4) COPY (register, 0x3c, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x6a380, 1) SUBPIECE (register, 0x4c, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (unique, 0x6a380, 1)
main, (register, 0x3c, 4) COPY (register, 0x48, 4)
main, (unique, 0x8380, 4) INT_ADD (register, 0x2c, 4) , (const, 0xfffffff0, 4)
main, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
main, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
main, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x130bc, 4) , (register, 0x61, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x68, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x20, 4) COPY (register, 0x34, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x2, 4)
main, (register, 0x24, 4) INT_SUB (register, 0x24, 4) , (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x24, 4) CALLOTHER (const, 0x0, 4) , (register, 0x24, 4)
main, (unique, 0x3800, 4) INT_SUB (const, 0x5, 4) , (const, 0x1, 4)
main, (unique, 0x3880, 4) INT_RIGHT (register, 0x24, 4) , (unique, 0x3800, 4)
main, (unique, 0x3980, 4) INT_AND (unique, 0x3880, 4) , (const, 0x1, 4)
main, (register, 0x68, 1) SUBPIECE (unique, 0x3980, 4) , (const, 0x0, 4)
main, (unique, 0x3b00, 4) INT_RIGHT (register, 0x24, 4) , (const, 0x5, 4)
main, (register, 0x24, 4) COPY (unique, 0x3b00, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x58, 4) COPY (const, 0x1315c, 4)
main,  ---  CALL (ram, 0x155ec, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x1, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x13174, 4) , (unique, 0x2480, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x1316c, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x30, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x1, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x13170, 4) , (unique, 0x2680, 1)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x13174, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x30, 4) COPY (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x130bc, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8380, 4) INT_ADD (register, 0x2c, 4) , (const, 0xffffffd0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x2c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x13068, 4) , (unique, 0x2480, 1)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d98, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12d9c, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x13198, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x1319c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x4, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12da0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x2, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2180, 1)
main,  ---  CBRANCH (ram, 0x131bc, 4) , (unique, 0x2680, 1)
main, (register, 0x28, 4) COPY (register, 0x24, 4)
main, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2280, 1)
main,  ---  CBRANCH (ram, 0x131c0, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x28, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x131c8, 4)
main,  ---  CALL (ram, 0x13e1c, 4)
main, (register, 0x30, 4) COPY (register, 0x20, 4)
main,  ---  BRANCH (ram, 0x12974, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x38, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x38, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x38, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x131e4, 4) , (register, 0x61, 1)
main, (register, 0x20, 4) COPY (register, 0x38, 4)
main, (register, 0x58, 4) COPY (const, 0x131e4, 4)
main,  ---  CALL (ram, 0x11524, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
main, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main,  ---  BRANCH (ram, 0x13080, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x131f4, 4)
main,  ---  CALL (ram, 0x11398, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x38, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main,  ---  CBRANCH (ram, 0x132a4, 4) , (register, 0x61, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12da0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (register, 0x2c, 4)
main, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main,  ---  BRANCH (ram, 0x130b4, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8380, 4) INT_ADD (register, 0x2c, 4) , (const, 0xffffffd0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x1, 4)
main, (register, 0x28, 4) INT_SUB (register, 0x28, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x2c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x13224, 4) , (unique, 0x2680, 1)
main, (register, 0x38, 4) COPY (register, 0x40, 4)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x1323c, 4) , (unique, 0x1a80, 1)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x12da4, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x1322c, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0xc8, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x38, 4) CALLOTHER (const, 0x0, 4) , (register, 0x2c, 4)
main, (unique, 0x3800, 4) INT_SUB (const, 0x5, 4) , (const, 0x1, 4)
main, (unique, 0x3880, 4) INT_RIGHT (register, 0x38, 4) , (unique, 0x3800, 4)
main, (unique, 0x3980, 4) INT_AND (unique, 0x3880, 4) , (const, 0x1, 4)
main, (register, 0x68, 1) SUBPIECE (unique, 0x3980, 4) , (const, 0x0, 4)
main, (unique, 0x3b00, 4) INT_RIGHT (register, 0x38, 4) , (const, 0x5, 4)
main, (register, 0x38, 4) COPY (unique, 0x3b00, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (const, 0x12da8, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
main, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x1780, 4) INT_ADD (const, 0x13244, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x34, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x34, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
main, (unique, 0x8380, 4) INT_ADD (register, 0x3c, 4) , (const, 0xffffffd0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x2c, 4)
main, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x2c, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
main,  ---  CBRANCH (ram, 0x12974, 4) , (unique, 0x2600, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x68, 4)
main, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x28, 4) COPY (register, 0x38, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x24, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x2, 4)
main, (register, 0x24, 4) INT_SUB (register, 0x24, 4) , (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x24, 4) CALLOTHER (const, 0x0, 4) , (register, 0x24, 4)
main, (unique, 0x7800, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x20, 4) , (unique, 0x7800, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x3800, 4) INT_SUB (const, 0x5, 4) , (const, 0x1, 4)
main, (unique, 0x3880, 4) INT_RIGHT (register, 0x24, 4) , (unique, 0x3800, 4)
main, (unique, 0x3980, 4) INT_AND (unique, 0x3880, 4) , (const, 0x1, 4)
main, (register, 0x68, 1) SUBPIECE (unique, 0x3980, 4) , (const, 0x0, 4)
main, (unique, 0x3b00, 4) INT_RIGHT (register, 0x24, 4) , (const, 0x5, 4)
main, (register, 0x24, 4) COPY (unique, 0x3b00, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (register, 0x58, 4) COPY (const, 0x13278, 4)
main,  ---  CALL (ram, 0x155ec, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x1, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
main, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
main,  ---  CBRANCH (ram, 0x13290, 4) , (unique, 0x2480, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x13288, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x30, 4)
main, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x1, 4)
main, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
main, (register, 0x62, 1) COPY (register, 0x66, 1)
main, (register, 0x61, 1) COPY (register, 0x65, 1)
main, (register, 0x60, 1) COPY (register, 0x64, 1)
main, (register, 0x63, 1) COPY (register, 0x67, 1)
main, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
main, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
main,  ---  CBRANCH (ram, 0x1328c, 4) , (unique, 0x2680, 1)
main, (register, 0x20, 4) COPY (register, 0x30, 4)
main, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
main,  ---  CBRANCH (ram, 0x13290, 4) , (unique, 0x2680, 1)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x20, 4) COPY (const, 0x0, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8380, 4) INT_ADD (register, 0x3c, 4) , (const, 0xffffffd0, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
main, (register, 0x30, 4) COPY (register, 0x20, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
main, (unique, 0x8380, 4) INT_ADD (register, 0x3c, 4) , (const, 0xffffffd0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8380, 4) , (register, 0x2c, 4)
main,  ---  BRANCH (ram, 0x13248, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12dac, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x30, 4) COPY (const, 0x2, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
main, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (unique, 0x8480, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
main, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
main, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x132c0, 4)
main,  ---  CALL (ram, 0x114d0, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
main, (register, 0x58, 4) COPY (const, 0x132c8, 4)
main,  ---  CALL (ram, 0x11464, 4)
main, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x12db0, 4)
main, (register, 0x2c, 4) COPY (register, 0x38, 4)
main, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
main,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
main, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
main, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
main, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
main, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
main, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
main, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
main, (register, 0x24, 4) COPY (const, 0x1, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
main, (register, 0x66, 1) COPY (register, 0x68, 1)
main, (register, 0x67, 1) COPY (register, 0x63, 1)
main, (unique, 0x1780, 4) INT_ADD (const, 0x132d8, 4) , (const, 0x8, 4)
main, (register, 0x68, 1) COPY (register, 0x62, 1)
main, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
main, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
main, (register, 0x20, 4) COPY (register, 0x34, 4)
main, (register, 0x58, 4) COPY (const, 0x132e4, 4)
main,  ---  CALL (ram, 0x1150c, 4)
main,  ---  BRANCH (ram, 0x12974, 4)
_start, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_start, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_start, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_start, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_start, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_start, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_start, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_start, (register, 0x4c, 4) COPY (const, 0x0, 4)
_start, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
_start, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
_start, (register, 0x66, 1) COPY (register, 0x68, 1)
_start, (register, 0x67, 1) COPY (register, 0x63, 1)
_start, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
_start, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
_start, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
_start, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
_start, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
_start, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
_start, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
_start, (register, 0x58, 4) COPY (const, 0x0, 4)
_start, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
_start, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
_start, (register, 0x66, 1) COPY (register, 0x68, 1)
_start, (register, 0x67, 1) COPY (register, 0x63, 1)
_start, (unique, 0x8800, 4) COPY (register, 0x54, 4)
_start, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
_start, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8800, 4)
_start, (register, 0x28, 4) COPY (register, 0x54, 4)
_start, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x54, 4) , (register, 0x28, 4)
_start, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x54, 4) , (register, 0x20, 4)
_start, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (const, 0x13330, 4)
_start, (register, 0x2c, 4) COPY (const, 0x13330, 4)
_start, (register, 0x68, 1) COPY (register, 0x62, 1)
_start, (register, 0x66, 1) INT_CARRY (register, 0x48, 4) , (register, 0x2c, 4)
_start, (register, 0x67, 1) INT_SCARRY (register, 0x48, 4) , (register, 0x2c, 4)
_start, (register, 0x48, 4) INT_ADD (register, 0x48, 4) , (register, 0x2c, 4)
_start, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
_start, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
_start, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (const, 0x13334, 4)
_start, (unique, 0x8480, 4) INT_ADD (register, 0x48, 4) , (register, 0x50, 4)
_start, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
_start, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)
_start,  ---  STORE (const, 0x1a1, 8) , (register, 0x54, 4) , (register, 0x50, 4)
_start, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x13338, 4)
_start, (unique, 0x8480, 4) INT_ADD (register, 0x48, 4) , (register, 0x2c, 4)
_start, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
_start, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x1333c, 4)
_start, (unique, 0x8480, 4) INT_ADD (register, 0x48, 4) , (register, 0x20, 4)
_start, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
_start, (register, 0x58, 4) COPY (const, 0x1332c, 4)
_start,  ---  CALL (ram, 0x11458, 4)
_start, (register, 0x58, 4) COPY (const, 0x13330, 4)
_start,  ---  CALL (ram, 0x1159c, 4)
call_weak_fn, (register, 0x50, 4) COPY (const, 0x11490, 4)
call_weak_fn, (unique, 0x2e80, 4) INT_RIGHT (const, 0x16000, 4) , (const, 0x1f, 4)
call_weak_fn, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
call_weak_fn, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
call_weak_fn, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
call_weak_fn, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
call_weak_fn, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
call_weak_fn, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
call_weak_fn, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x16000, 4)
call_weak_fn, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x16000, 4)
call_weak_fn, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x16000, 4)
call_weak_fn, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
call_weak_fn, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
call_weak_fn, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xad8, 4)
call_weak_fn, (unique, 0x3c880, 4) LOAD (const, 0x1a1, 8) , (register, 0x50, 4)
call_weak_fn, (unique, 0x0, 4) INT_AND (unique, 0x3c880, 4) , (const, 0x1, 4)
call_weak_fn, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
call_weak_fn, (register, 0x69, 1) COPY (register, 0xb0, 1)
call_weak_fn, (register, 0x5c, 4) INT_AND (unique, 0x3c880, 4) , (const, 0xfffffffe, 4)
call_weak_fn,  ---  BRANCHIND (register, 0x5c, 4)
call_weak_fn, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x1335c, 4)
call_weak_fn, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x13360, 4)
call_weak_fn, (unique, 0x1780, 4) INT_ADD (const, 0x13348, 4) , (const, 0x8, 4)
call_weak_fn, (register, 0x68, 1) COPY (register, 0x62, 1)
call_weak_fn, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
call_weak_fn, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
call_weak_fn, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
call_weak_fn, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
call_weak_fn, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
call_weak_fn, (unique, 0x8480, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
call_weak_fn, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
call_weak_fn, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
call_weak_fn, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
call_weak_fn, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
call_weak_fn, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
call_weak_fn, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
call_weak_fn, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
call_weak_fn, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
call_weak_fn, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
call_weak_fn, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
call_weak_fn, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
call_weak_fn, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
call_weak_fn, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
call_weak_fn, (register, 0x62, 1) COPY (register, 0x66, 1)
call_weak_fn, (register, 0x61, 1) COPY (register, 0x65, 1)
call_weak_fn, (register, 0x60, 1) COPY (register, 0x64, 1)
call_weak_fn, (register, 0x63, 1) COPY (register, 0x67, 1)
call_weak_fn, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
call_weak_fn,  ---  CBRANCH (ram, 0x13358, 4) , (unique, 0x2680, 1)
call_weak_fn, (unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
call_weak_fn, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
call_weak_fn, (register, 0x69, 1) COPY (register, 0xb0, 1)
call_weak_fn, (register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
call_weak_fn,  ---  RETURN (register, 0x5c, 4)
call_weak_fn,  ---  BRANCH (ram, 0x11488, 4)
deregister_tm_clones, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x133b4, 4)
deregister_tm_clones, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x133b8, 4)
deregister_tm_clones, (unique, 0x1780, 4) INT_ADD (const, 0x1336c, 4) , (const, 0x8, 4)
deregister_tm_clones, (register, 0x68, 1) COPY (register, 0x62, 1)
deregister_tm_clones, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
deregister_tm_clones, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
deregister_tm_clones, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
deregister_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0x1780, 4) INT_ADD (const, 0x13370, 4) , (const, 0x8, 4)
deregister_tm_clones, (register, 0x68, 1) COPY (register, 0x62, 1)
deregister_tm_clones, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
deregister_tm_clones, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
deregister_tm_clones, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
deregister_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
deregister_tm_clones, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
deregister_tm_clones, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
deregister_tm_clones, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
deregister_tm_clones, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x3, 4)
deregister_tm_clones, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x3, 4)
deregister_tm_clones, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x3, 4)
deregister_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x133bc, 4)
deregister_tm_clones, (register, 0x68, 1) COPY (register, 0x62, 1)
deregister_tm_clones, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x2c, 4)
deregister_tm_clones, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x20, 4)
deregister_tm_clones, (register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (register, 0x20, 4)
deregister_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6, 4) , (const, 0x1f, 4)
deregister_tm_clones, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
deregister_tm_clones, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
deregister_tm_clones, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
deregister_tm_clones, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6, 4) , (register, 0x2c, 4)
deregister_tm_clones, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x6, 4)
deregister_tm_clones, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x6, 4)
deregister_tm_clones, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x62, 1) COPY (register, 0x66, 1)
deregister_tm_clones, (register, 0x61, 1) COPY (register, 0x65, 1)
deregister_tm_clones, (register, 0x60, 1) COPY (register, 0x64, 1)
deregister_tm_clones, (register, 0x63, 1) COPY (register, 0x67, 1)
deregister_tm_clones, (unique, 0x1780, 4) INT_ADD (const, 0x13384, 4) , (const, 0x8, 4)
deregister_tm_clones, (register, 0x68, 1) COPY (register, 0x62, 1)
deregister_tm_clones, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
deregister_tm_clones, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
deregister_tm_clones, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
deregister_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
deregister_tm_clones, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
deregister_tm_clones, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
deregister_tm_clones,  ---  CBRANCH (ram, 0x1338c, 4) , (unique, 0x2680, 1)
deregister_tm_clones, (unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
deregister_tm_clones, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x69, 1) COPY (register, 0xb0, 1)
deregister_tm_clones, (register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
deregister_tm_clones,  ---  RETURN (register, 0x5c, 4)
deregister_tm_clones, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x133c0, 4)
deregister_tm_clones, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
deregister_tm_clones, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
deregister_tm_clones, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
deregister_tm_clones, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
deregister_tm_clones, (register, 0x66, 1) INT_LESSEQUAL (const, 0x8, 4) , (register, 0x54, 4)
deregister_tm_clones, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x8, 4)
deregister_tm_clones, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x8, 4)
deregister_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0x8480, 4) INT_ADD (register, 0x28, 4) , (register, 0x2c, 4)
deregister_tm_clones, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
deregister_tm_clones, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
deregister_tm_clones,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
deregister_tm_clones, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
deregister_tm_clones, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
deregister_tm_clones, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
deregister_tm_clones, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
deregister_tm_clones, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
deregister_tm_clones, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x62, 1) COPY (register, 0x66, 1)
deregister_tm_clones, (register, 0x61, 1) COPY (register, 0x65, 1)
deregister_tm_clones, (register, 0x60, 1) COPY (register, 0x64, 1)
deregister_tm_clones, (register, 0x63, 1) COPY (register, 0x67, 1)
deregister_tm_clones,  ---  CBRANCH (ram, 0x133ac, 4) , (register, 0x61, 1)
deregister_tm_clones, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
deregister_tm_clones, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
deregister_tm_clones, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
deregister_tm_clones, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
deregister_tm_clones, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x8, 4)
deregister_tm_clones, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x8, 4)
deregister_tm_clones, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
deregister_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0x0, 4) INT_AND (register, 0x2c, 4) , (const, 0x1, 4)
deregister_tm_clones, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x69, 1) COPY (register, 0xb0, 1)
deregister_tm_clones, (register, 0x5c, 4) INT_AND (register, 0x2c, 4) , (const, 0xfffffffe, 4)
deregister_tm_clones,  ---  BRANCHIND (register, 0x5c, 4)
deregister_tm_clones, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
deregister_tm_clones, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
deregister_tm_clones, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
deregister_tm_clones, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
deregister_tm_clones, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
deregister_tm_clones, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x8, 4)
deregister_tm_clones, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x8, 4)
deregister_tm_clones, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
deregister_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
deregister_tm_clones, (unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
deregister_tm_clones, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
deregister_tm_clones, (register, 0x69, 1) COPY (register, 0xb0, 1)
deregister_tm_clones, (register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
deregister_tm_clones,  ---  RETURN (register, 0x5c, 4)
register_tm_clones, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x1341c, 4)
register_tm_clones, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
register_tm_clones, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
register_tm_clones, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
register_tm_clones, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
register_tm_clones, (register, 0x28, 4) COPY (const, 0x2, 4)
register_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x66, 1) COPY (register, 0x68, 1)
register_tm_clones, (register, 0x67, 1) COPY (register, 0x63, 1)
register_tm_clones, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x13420, 4)
register_tm_clones, (unique, 0x1780, 4) INT_ADD (const, 0x133d0, 4) , (const, 0x8, 4)
register_tm_clones, (register, 0x68, 1) COPY (register, 0x62, 1)
register_tm_clones, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
register_tm_clones, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
register_tm_clones, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
register_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x1780, 4) INT_ADD (const, 0x133d4, 4) , (const, 0x8, 4)
register_tm_clones, (register, 0x68, 1) COPY (register, 0x62, 1)
register_tm_clones, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
register_tm_clones, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
register_tm_clones, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
register_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x13424, 4)
register_tm_clones, (register, 0x68, 1) COPY (register, 0x62, 1)
register_tm_clones, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x24, 4)
register_tm_clones, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (register, 0x20, 4)
register_tm_clones, (register, 0x24, 4) INT_SUB (register, 0x24, 4) , (register, 0x20, 4)
register_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x3e00, 4) INT_SUB (const, 0x2, 4) , (const, 0x1, 4)
register_tm_clones, (unique, 0x3e80, 4) INT_RIGHT (register, 0x24, 4) , (unique, 0x3e00, 4)
register_tm_clones, (unique, 0x3f80, 4) INT_AND (unique, 0x3e80, 4) , (const, 0x1, 4)
register_tm_clones, (register, 0x68, 1) SUBPIECE (unique, 0x3f80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x4100, 4) INT_SRIGHT (register, 0x24, 4) , (const, 0x2, 4)
register_tm_clones, (register, 0x24, 4) COPY (unique, 0x4100, 4)
register_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x66, 1) COPY (register, 0x68, 1)
register_tm_clones, (register, 0x67, 1) COPY (register, 0x63, 1)
register_tm_clones, (unique, 0x1780, 4) INT_ADD (const, 0x133e4, 4) , (const, 0x8, 4)
register_tm_clones, (register, 0x68, 1) COPY (register, 0x62, 1)
register_tm_clones, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
register_tm_clones, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
register_tm_clones, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
register_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x24, 4) INT_DIV (register, 0x24, 4) , (register, 0x28, 4)
register_tm_clones, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
register_tm_clones, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
register_tm_clones, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
register_tm_clones, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
register_tm_clones, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
register_tm_clones, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x62, 1) COPY (register, 0x66, 1)
register_tm_clones, (register, 0x61, 1) COPY (register, 0x65, 1)
register_tm_clones, (register, 0x60, 1) COPY (register, 0x64, 1)
register_tm_clones, (register, 0x63, 1) COPY (register, 0x67, 1)
register_tm_clones, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
register_tm_clones,  ---  CBRANCH (ram, 0x133f4, 4) , (unique, 0x2680, 1)
register_tm_clones, (unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
register_tm_clones, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x69, 1) COPY (register, 0xb0, 1)
register_tm_clones, (register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
register_tm_clones,  ---  RETURN (register, 0x5c, 4)
register_tm_clones, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x13428, 4)
register_tm_clones, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
register_tm_clones, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
register_tm_clones, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
register_tm_clones, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
register_tm_clones, (register, 0x66, 1) INT_LESSEQUAL (const, 0x8, 4) , (register, 0x54, 4)
register_tm_clones, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x8, 4)
register_tm_clones, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x8, 4)
register_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x8480, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
register_tm_clones, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
register_tm_clones, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
register_tm_clones,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
register_tm_clones, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
register_tm_clones, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
register_tm_clones, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
register_tm_clones, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
register_tm_clones, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
register_tm_clones, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x62, 1) COPY (register, 0x66, 1)
register_tm_clones, (register, 0x61, 1) COPY (register, 0x65, 1)
register_tm_clones, (register, 0x60, 1) COPY (register, 0x64, 1)
register_tm_clones, (register, 0x63, 1) COPY (register, 0x67, 1)
register_tm_clones,  ---  CBRANCH (ram, 0x13414, 4) , (register, 0x61, 1)
register_tm_clones, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
register_tm_clones, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
register_tm_clones, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
register_tm_clones, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
register_tm_clones, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x8, 4)
register_tm_clones, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x8, 4)
register_tm_clones, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
register_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x0, 4) INT_AND (register, 0x2c, 4) , (const, 0x1, 4)
register_tm_clones, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x69, 1) COPY (register, 0xb0, 1)
register_tm_clones, (register, 0x5c, 4) INT_AND (register, 0x2c, 4) , (const, 0xfffffffe, 4)
register_tm_clones,  ---  BRANCHIND (register, 0x5c, 4)
register_tm_clones, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
register_tm_clones, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
register_tm_clones, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
register_tm_clones, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
register_tm_clones, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
register_tm_clones, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x8, 4)
register_tm_clones, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x8, 4)
register_tm_clones, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
register_tm_clones, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
register_tm_clones, (unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
register_tm_clones, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
register_tm_clones, (register, 0x69, 1) COPY (register, 0xb0, 1)
register_tm_clones, (register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
register_tm_clones,  ---  RETURN (register, 0x5c, 4)
__do_global_dtors_aux, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x13480, 4)
__do_global_dtors_aux, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
__do_global_dtors_aux,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
__do_global_dtors_aux, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__do_global_dtors_aux,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x2c, 4)
__do_global_dtors_aux, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__do_global_dtors_aux, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__do_global_dtors_aux, (unique, 0x1780, 4) INT_ADD (const, 0x13434, 4) , (const, 0x8, 4)
__do_global_dtors_aux, (register, 0x68, 1) COPY (register, 0x62, 1)
__do_global_dtors_aux, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
__do_global_dtors_aux, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
__do_global_dtors_aux, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
__do_global_dtors_aux, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x13484, 4)
__do_global_dtors_aux, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
__do_global_dtors_aux, (register, 0x28, 4) INT_ZEXT (unique, 0x3ca00, 1)
__do_global_dtors_aux, (unique, 0x1780, 4) INT_ADD (const, 0x13440, 4) , (const, 0x8, 4)
__do_global_dtors_aux, (register, 0x68, 1) COPY (register, 0x62, 1)
__do_global_dtors_aux, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
__do_global_dtors_aux, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
__do_global_dtors_aux, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
__do_global_dtors_aux, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
__do_global_dtors_aux, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__do_global_dtors_aux, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__do_global_dtors_aux, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__do_global_dtors_aux, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
__do_global_dtors_aux, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x62, 1) COPY (register, 0x66, 1)
__do_global_dtors_aux, (register, 0x61, 1) COPY (register, 0x65, 1)
__do_global_dtors_aux, (register, 0x60, 1) COPY (register, 0x64, 1)
__do_global_dtors_aux, (register, 0x63, 1) COPY (register, 0x67, 1)
__do_global_dtors_aux, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
__do_global_dtors_aux, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
__do_global_dtors_aux,  ---  CBRANCH (ram, 0x1344c, 4) , (unique, 0x2680, 1)
__do_global_dtors_aux, (register, 0x80, 4) COPY (register, 0x54, 4)
__do_global_dtors_aux, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__do_global_dtors_aux, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__do_global_dtors_aux, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__do_global_dtors_aux, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__do_global_dtors_aux, (register, 0x54, 4) COPY (register, 0x80, 4)
__do_global_dtors_aux, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
__do_global_dtors_aux, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x69, 1) COPY (register, 0xb0, 1)
__do_global_dtors_aux, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
__do_global_dtors_aux,  ---  RETURN (register, 0x5c, 4)
__do_global_dtors_aux, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x13488, 4)
__do_global_dtors_aux, (unique, 0x8480, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
__do_global_dtors_aux, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
__do_global_dtors_aux, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
__do_global_dtors_aux, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__do_global_dtors_aux, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__do_global_dtors_aux, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__do_global_dtors_aux, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
__do_global_dtors_aux, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x62, 1) COPY (register, 0x66, 1)
__do_global_dtors_aux, (register, 0x61, 1) COPY (register, 0x65, 1)
__do_global_dtors_aux, (register, 0x60, 1) COPY (register, 0x64, 1)
__do_global_dtors_aux, (register, 0x63, 1) COPY (register, 0x67, 1)
__do_global_dtors_aux,  ---  CBRANCH (ram, 0x13468, 4) , (register, 0x61, 1)
__do_global_dtors_aux, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x1348c, 4)
__do_global_dtors_aux, (unique, 0x1780, 4) INT_ADD (const, 0x13460, 4) , (const, 0x8, 4)
__do_global_dtors_aux, (unique, 0x8480, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
__do_global_dtors_aux, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
__do_global_dtors_aux, (register, 0x58, 4) COPY (const, 0x13468, 4)
__do_global_dtors_aux,  ---  CALL (ram, 0x1138c, 4)
__do_global_dtors_aux, (register, 0x58, 4) COPY (const, 0x1346c, 4)
__do_global_dtors_aux,  ---  CALL (ram, 0x13364, 4)
__do_global_dtors_aux, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x13490, 4)
__do_global_dtors_aux, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
__do_global_dtors_aux, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__do_global_dtors_aux, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
__do_global_dtors_aux, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__do_global_dtors_aux, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__do_global_dtors_aux, (register, 0x28, 4) COPY (const, 0x1, 4)
__do_global_dtors_aux, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x66, 1) COPY (register, 0x68, 1)
__do_global_dtors_aux, (register, 0x67, 1) COPY (register, 0x63, 1)
__do_global_dtors_aux, (unique, 0x1780, 4) INT_ADD (const, 0x13474, 4) , (const, 0x8, 4)
__do_global_dtors_aux, (register, 0x68, 1) COPY (register, 0x62, 1)
__do_global_dtors_aux, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
__do_global_dtors_aux, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
__do_global_dtors_aux, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
__do_global_dtors_aux, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (unique, 0x6a380, 1) SUBPIECE (register, 0x28, 4) , (const, 0x0, 4)
__do_global_dtors_aux,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (unique, 0x6a380, 1)
__do_global_dtors_aux, (register, 0x80, 4) COPY (register, 0x54, 4)
__do_global_dtors_aux, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__do_global_dtors_aux, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__do_global_dtors_aux, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__do_global_dtors_aux, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__do_global_dtors_aux, (register, 0x54, 4) COPY (register, 0x80, 4)
__do_global_dtors_aux, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
__do_global_dtors_aux, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__do_global_dtors_aux, (register, 0x69, 1) COPY (register, 0xb0, 1)
__do_global_dtors_aux, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
__do_global_dtors_aux,  ---  RETURN (register, 0x5c, 4)
frame_dummy, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
frame_dummy,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
frame_dummy, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
frame_dummy,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x28, 4)
frame_dummy, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
frame_dummy,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x24, 4)
frame_dummy, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
frame_dummy,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x20, 4)
frame_dummy, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
frame_dummy, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
frame_dummy, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x134d8, 4)
frame_dummy, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x134dc, 4)
frame_dummy, (unique, 0x1780, 4) INT_ADD (const, 0x134a0, 4) , (const, 0x8, 4)
frame_dummy, (register, 0x68, 1) COPY (register, 0x62, 1)
frame_dummy, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
frame_dummy, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
frame_dummy, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
frame_dummy, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
frame_dummy, (unique, 0x1780, 4) INT_ADD (const, 0x134a8, 4) , (const, 0x8, 4)
frame_dummy, (register, 0x68, 1) COPY (register, 0x62, 1)
frame_dummy, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
frame_dummy, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
frame_dummy, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
frame_dummy, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
frame_dummy, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
frame_dummy, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
frame_dummy, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
frame_dummy, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
frame_dummy, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
frame_dummy, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
frame_dummy, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x62, 1) COPY (register, 0x66, 1)
frame_dummy, (register, 0x61, 1) COPY (register, 0x65, 1)
frame_dummy, (register, 0x60, 1) COPY (register, 0x64, 1)
frame_dummy, (register, 0x63, 1) COPY (register, 0x67, 1)
frame_dummy,  ---  CBRANCH (ram, 0x134cc, 4) , (register, 0x61, 1)
frame_dummy, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x134e0, 4)
frame_dummy, (unique, 0x8480, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
frame_dummy, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
frame_dummy, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
frame_dummy,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
frame_dummy, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
frame_dummy, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
frame_dummy, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
frame_dummy, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
frame_dummy, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
frame_dummy, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
frame_dummy, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
frame_dummy, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x62, 1) COPY (register, 0x66, 1)
frame_dummy, (register, 0x61, 1) COPY (register, 0x65, 1)
frame_dummy, (register, 0x60, 1) COPY (register, 0x64, 1)
frame_dummy, (register, 0x63, 1) COPY (register, 0x67, 1)
frame_dummy,  ---  CBRANCH (ram, 0x134cc, 4) , (register, 0x61, 1)
frame_dummy, (unique, 0x0, 4) INT_AND (register, 0x2c, 4) , (const, 0x1, 4)
frame_dummy, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x69, 1) COPY (register, 0xb0, 1)
frame_dummy, (register, 0x5c, 4) INT_AND (register, 0x2c, 4) , (const, 0xfffffffe, 4)
frame_dummy, (register, 0x58, 4) COPY (const, 0x134cc, 4)
frame_dummy,  ---  CALLIND (register, 0x5c, 4)
frame_dummy, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
frame_dummy, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
frame_dummy, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
frame_dummy, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
frame_dummy, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
frame_dummy, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
frame_dummy, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0xc, 4)
frame_dummy, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0xc, 4)
frame_dummy, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
frame_dummy, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
frame_dummy, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
frame_dummy, (unique, 0x8800, 4) COPY (register, 0x54, 4)
frame_dummy, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
frame_dummy, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8800, 4)
frame_dummy,  ---  BRANCH (ram, 0x133c4, 4)
end_of_line, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x137c8, 4)
end_of_line, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
end_of_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
end_of_line, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
end_of_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
end_of_line, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
end_of_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
end_of_line, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
end_of_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
end_of_line, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
end_of_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
end_of_line, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (unique, 0x1780, 4) INT_ADD (const, 0x134ec, 4) , (const, 0x8, 4)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
end_of_line, (register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
end_of_line, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
end_of_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
end_of_line,  ---  CBRANCH (ram, 0x13500, 4) , (unique, 0x2680, 1)
end_of_line, (unique, 0x1780, 4) INT_ADD (const, 0x134fc, 4) , (const, 0x8, 4)
end_of_line, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
end_of_line, (unique, 0x3300, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x3280, 4)
end_of_line, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
end_of_line, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3580, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
end_of_line, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (unique, 0x3580, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (unique, 0x3580, 4)
end_of_line, (unique, 0x39680, 4) INT_ADD (unique, 0x1780, 4) , (unique, 0x3580, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x39680, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x39680, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x0, 4) INT_AND (unique, 0x39680, 4) , (const, 0x1, 4)
end_of_line, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
end_of_line, (register, 0x69, 1) COPY (register, 0xb0, 1)
end_of_line, (register, 0x5c, 4) INT_AND (unique, 0x39680, 4) , (const, 0xfffffffe, 4)
end_of_line,  ---  BRANCHIND (register, 0x5c, 4)
end_of_line,  ---  BRANCH (ram, 0x13710, 4)
end_of_line,  ---  BRANCH (ram, 0x13620, 4)
end_of_line,  ---  BRANCH (ram, 0x135d4, 4)
end_of_line,  ---  BRANCH (ram, 0x13514, 4)
end_of_line,  ---  BRANCH (ram, 0x13668, 4)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (register, 0x24, 4) , (register, 0x20, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (register, 0x24, 4)
end_of_line, (unique, 0x3ba80, 4) INT_SUB (register, 0x20, 4) , (register, 0x24, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line,  ---  CBRANCH (ram, 0x13658, 4) , (register, 0x62, 1)
end_of_line, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x137cc, 4)
end_of_line, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (const, 0x137d0, 4)
end_of_line, (unique, 0x1780, 4) INT_ADD (const, 0x13524, 4) , (const, 0x8, 4)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x1780, 4) INT_ADD (const, 0x13528, 4) , (const, 0x8, 4)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x38, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x38, 4)
end_of_line, (register, 0x38, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x38, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
end_of_line, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x0, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x0, 4)
end_of_line, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
end_of_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
end_of_line,  ---  CBRANCH (ram, 0x13538, 4) , (unique, 0x2680, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x34, 4) COPY (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
end_of_line, (register, 0x50, 4) INT_ZEXT (unique, 0x3ca00, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0xbf, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0xbf, 4) , (register, 0x50, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0xbf, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x50, 4) , (const, 0xbf, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
end_of_line, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
end_of_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
end_of_line,  ---  CBRANCH (ram, 0x13544, 4) , (unique, 0x2680, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x2c, 4) COPY (const, 0x0, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
end_of_line, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
end_of_line, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
end_of_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
end_of_line,  ---  CBRANCH (ram, 0x13548, 4) , (unique, 0x2680, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x2c, 4) INT_AND (register, 0x34, 4) , (const, 0x1, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line,  ---  CBRANCH (ram, 0x13788, 4) , (register, 0x61, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3f, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x2c, 4) INT_AND (register, 0x50, 4) , (const, 0x3f, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x8480, 4) INT_ADD (register, 0x38, 4) , (register, 0x2c, 4)
end_of_line, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
end_of_line, (register, 0x3c, 4) INT_ZEXT (unique, 0x3ca00, 1)
end_of_line, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
end_of_line, (unique, 0x3300, 4) INT_RIGHT (register, 0x3c, 4) , (unique, 0x3280, 4)
end_of_line, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
end_of_line, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3580, 4) INT_LEFT (register, 0x3c, 4) , (const, 0x2, 4)
end_of_line, (register, 0x66, 1) INT_CARRY (register, 0x38, 4) , (unique, 0x3580, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (register, 0x38, 4) , (unique, 0x3580, 4)
end_of_line, (register, 0x2c, 4) INT_ADD (register, 0x38, 4) , (unique, 0x3580, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x7100, 4) COPY (register, 0x3c, 4)
end_of_line, (register, 0x30, 4) INT_SEXT (unique, 0x7100, 2)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x40, 4)
end_of_line, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
end_of_line, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x3, 4)
end_of_line, (unique, 0x3300, 4) INT_RIGHT (register, 0x30, 4) , (unique, 0x3280, 4)
end_of_line, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
end_of_line, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3580, 4) INT_LEFT (register, 0x30, 4) , (const, 0x3, 4)
end_of_line, (register, 0x2c, 4) COPY (unique, 0x3580, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x50, 4) INT_AND (register, 0x50, 4) , (register, 0x58, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x1, 4)
end_of_line, (unique, 0x3300, 4) INT_RIGHT (register, 0x30, 4) , (unique, 0x3280, 4)
end_of_line, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
end_of_line, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3580, 4) INT_LEFT (register, 0x30, 4) , (const, 0x1, 4)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (unique, 0x3580, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (unique, 0x3580, 4)
end_of_line, (register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (unique, 0x3580, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x4a80, 4) INT_AND (register, 0x2c, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x4b00, 4) INT_SUB (const, 0x20, 4) , (unique, 0x4a80, 4)
end_of_line, (unique, 0x4b80, 4) INT_RIGHT (register, 0x50, 4) , (unique, 0x4b00, 4)
end_of_line, (unique, 0x4c80, 4) INT_AND (unique, 0x4b80, 4) , (const, 0x1, 4)
end_of_line, (unique, 0x4d00, 1) INT_EQUAL (unique, 0x4a80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x4d80, 1) BOOL_AND (unique, 0x4d00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x4e00, 1) INT_NOTEQUAL (unique, 0x4a80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x4e80, 1) SUBPIECE (unique, 0x4c80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x4f00, 1) BOOL_AND (unique, 0x4e00, 1) , (unique, 0x4e80, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x4d80, 1) , (unique, 0x4f00, 1)
end_of_line, (unique, 0x5080, 4) INT_LEFT (register, 0x50, 4) , (unique, 0x4a80, 4)
end_of_line, (register, 0x50, 4) COPY (unique, 0x5080, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line,  ---  CBRANCH (ram, 0x13788, 4) , (register, 0x61, 1)
end_of_line, (register, 0x30, 4) COPY (register, 0x20, 4)
end_of_line, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
end_of_line, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (register, 0x30, 4)
end_of_line, (register, 0x58, 4) INT_ZEXT (unique, 0x3ca00, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x6, 4)
end_of_line, (register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (const, 0x6, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3f, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x58, 4) INT_AND (register, 0x58, 4) , (const, 0x3f, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x4a80, 4) INT_AND (register, 0x2c, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x4b00, 4) INT_SUB (const, 0x20, 4) , (unique, 0x4a80, 4)
end_of_line, (unique, 0x4b80, 4) INT_RIGHT (register, 0x58, 4) , (unique, 0x4b00, 4)
end_of_line, (unique, 0x4c80, 4) INT_AND (unique, 0x4b80, 4) , (const, 0x1, 4)
end_of_line, (unique, 0x4d00, 1) INT_EQUAL (unique, 0x4a80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x4d80, 1) BOOL_AND (unique, 0x4d00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x4e00, 1) INT_NOTEQUAL (unique, 0x4a80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x4e80, 1) SUBPIECE (unique, 0x4c80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x4f00, 1) BOOL_AND (unique, 0x4e00, 1) , (unique, 0x4e80, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x4d80, 1) , (unique, 0x4f00, 1)
end_of_line, (unique, 0x5080, 4) INT_LEFT (register, 0x58, 4) , (unique, 0x4a80, 4)
end_of_line, (register, 0x50, 4) INT_OR (register, 0x50, 4) , (unique, 0x5080, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
end_of_line,  ---  CBRANCH (ram, 0x13580, 4) , (unique, 0x1a80, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (const, 0x1, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (const, 0x1, 4)
end_of_line, (register, 0x2c, 4) INT_ADD (register, 0x3c, 4) , (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x20, 4) INT_ADD (register, 0x20, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0xd, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0xd, 4) , (register, 0x50, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0xd, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x50, 4) , (const, 0xd, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line,  ---  CBRANCH (ram, 0x13764, 4) , (register, 0x61, 1)
end_of_line, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
end_of_line, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
end_of_line,  ---  CBRANCH (ram, 0x137a0, 4) , (unique, 0x2600, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x85, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x85, 4) , (register, 0x50, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x85, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x50, 4) , (const, 0x85, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line,  ---  CBRANCH (ram, 0x137b4, 4) , (register, 0x61, 1)
end_of_line, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
end_of_line,  ---  CBRANCH (ram, 0x137a8, 4) , (unique, 0x2280, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2000, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2000, 4) , (register, 0x50, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x2000, 4)
end_of_line, (register, 0x50, 4) INT_SUB (register, 0x50, 4) , (const, 0x2000, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x28, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x28, 4) , (register, 0x50, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x28, 4)
end_of_line, (register, 0x50, 4) INT_SUB (register, 0x50, 4) , (const, 0x28, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x50, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x1, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x50, 4) , (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
end_of_line, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
end_of_line,  ---  CBRANCH (ram, 0x137a8, 4) , (unique, 0x1f00, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x2c, 4) COPY (const, 0x3, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
end_of_line,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x80, 4) COPY (register, 0x54, 4)
end_of_line, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x54, 4) COPY (register, 0x80, 4)
end_of_line, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
end_of_line, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
end_of_line, (register, 0x69, 1) COPY (register, 0xb0, 1)
end_of_line, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
end_of_line,  ---  RETURN (register, 0x5c, 4)
end_of_line, (register, 0x2c, 4) COPY (register, 0x20, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0x1, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0x1, 4)
end_of_line, (register, 0x50, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
end_of_line,  ---  BRANCH (ram, 0x135e8, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
end_of_line, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (const, 0x1, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (const, 0x1, 4)
end_of_line, (register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (register, 0x24, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x24, 4)
end_of_line, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x24, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line,  ---  CBRANCH (ram, 0x135fc, 4) , (register, 0x62, 1)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
end_of_line, (register, 0x20, 4) INT_ZEXT (unique, 0x3ca00, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0xd, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0xd, 4) , (register, 0x20, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0xd, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0xd, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
end_of_line,  ---  CBRANCH (ram, 0x135e0, 4) , (unique, 0x1a80, 1)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (register, 0x50, 4) , (register, 0x24, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (register, 0x50, 4)
end_of_line, (unique, 0x3ba80, 4) INT_SUB (register, 0x24, 4) , (register, 0x50, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
end_of_line, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
end_of_line,  ---  CBRANCH (ram, 0x13658, 4) , (unique, 0x2080, 1)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
end_of_line, (register, 0x20, 4) INT_ZEXT (unique, 0x3ca00, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x20, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0xa, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0xa, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
end_of_line,  ---  CBRANCH (ram, 0x135e0, 4) , (unique, 0x1a80, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x24, 4) COPY (const, 0x2, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x24, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x24, 4)
end_of_line, (register, 0x20, 4) INT_ADD (register, 0x2c, 4) , (register, 0x24, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
end_of_line,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
end_of_line, (register, 0x80, 4) COPY (register, 0x54, 4)
end_of_line, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x54, 4) COPY (register, 0x80, 4)
end_of_line, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
end_of_line, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
end_of_line, (register, 0x69, 1) COPY (register, 0xb0, 1)
end_of_line, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
end_of_line,  ---  RETURN (register, 0x5c, 4)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (register, 0x24, 4) , (register, 0x20, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (register, 0x24, 4)
end_of_line, (unique, 0x3ba80, 4) INT_SUB (register, 0x20, 4) , (register, 0x24, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line,  ---  CBRANCH (ram, 0x13658, 4) , (register, 0x62, 1)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
end_of_line, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0xd, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0xd, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0xd, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0xd, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
end_of_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
end_of_line,  ---  CBRANCH (ram, 0x13634, 4) , (unique, 0x2680, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0x1, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0x1, 4)
end_of_line, (register, 0x2c, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
end_of_line,  ---  CBRANCH (ram, 0x13648, 4) , (unique, 0x1a80, 1)
end_of_line,  ---  BRANCH (ram, 0x1374c, 4)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
end_of_line, (register, 0x50, 4) INT_ZEXT (unique, 0x3ca00, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0xd, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0xd, 4) , (register, 0x50, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0xd, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x50, 4) , (const, 0xd, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line,  ---  CBRANCH (ram, 0x1374c, 4) , (register, 0x61, 1)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (register, 0x24, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x24, 4)
end_of_line, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x24, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (register, 0x20, 4) COPY (register, 0x2c, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
end_of_line, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
end_of_line,  ---  CBRANCH (ram, 0x1363c, 4) , (unique, 0x1a80, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x2c, 4) COPY (const, 0x0, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (register, 0x20, 4) COPY (register, 0x24, 4)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
end_of_line,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x80, 4) COPY (register, 0x54, 4)
end_of_line, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x54, 4) COPY (register, 0x80, 4)
end_of_line, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
end_of_line, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
end_of_line, (register, 0x69, 1) COPY (register, 0xb0, 1)
end_of_line, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
end_of_line,  ---  RETURN (register, 0x5c, 4)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (register, 0x24, 4) , (register, 0x20, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (register, 0x24, 4)
end_of_line, (unique, 0x3ba80, 4) INT_SUB (register, 0x20, 4) , (register, 0x24, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line,  ---  CBRANCH (ram, 0x13658, 4) , (register, 0x62, 1)
end_of_line, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x137d4, 4)
end_of_line, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (const, 0x137d8, 4)
end_of_line, (unique, 0x1780, 4) INT_ADD (const, 0x13678, 4) , (const, 0x8, 4)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x1780, 4) INT_ADD (const, 0x1367c, 4) , (const, 0x8, 4)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
end_of_line, (register, 0x3c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x3c, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
end_of_line, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x0, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x0, 4)
end_of_line, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
end_of_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
end_of_line,  ---  CBRANCH (ram, 0x1368c, 4) , (unique, 0x2680, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x34, 4) COPY (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
end_of_line, (register, 0x58, 4) INT_ZEXT (unique, 0x3ca00, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0xbf, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0xbf, 4) , (register, 0x58, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x58, 4) , (const, 0xbf, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x58, 4) , (const, 0xbf, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
end_of_line, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
end_of_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
end_of_line,  ---  CBRANCH (ram, 0x13698, 4) , (unique, 0x2680, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x2c, 4) COPY (const, 0x0, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
end_of_line, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
end_of_line, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
end_of_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
end_of_line,  ---  CBRANCH (ram, 0x1369c, 4) , (unique, 0x2680, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x2c, 4) INT_AND (register, 0x34, 4) , (const, 0x1, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line,  ---  CBRANCH (ram, 0x1375c, 4) , (register, 0x61, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3f, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x2c, 4) INT_AND (register, 0x58, 4) , (const, 0x3f, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x8480, 4) INT_ADD (register, 0x3c, 4) , (register, 0x2c, 4)
end_of_line, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
end_of_line, (register, 0x38, 4) INT_ZEXT (unique, 0x3ca00, 1)
end_of_line, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
end_of_line, (unique, 0x3300, 4) INT_RIGHT (register, 0x38, 4) , (unique, 0x3280, 4)
end_of_line, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
end_of_line, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3580, 4) INT_LEFT (register, 0x38, 4) , (const, 0x2, 4)
end_of_line, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (unique, 0x3580, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (unique, 0x3580, 4)
end_of_line, (register, 0x2c, 4) INT_ADD (register, 0x3c, 4) , (unique, 0x3580, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x7100, 4) COPY (register, 0x38, 4)
end_of_line, (register, 0x30, 4) INT_SEXT (unique, 0x7100, 2)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x40, 4)
end_of_line, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
end_of_line, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x3, 4)
end_of_line, (unique, 0x3300, 4) INT_RIGHT (register, 0x30, 4) , (unique, 0x3280, 4)
end_of_line, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
end_of_line, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3580, 4) INT_LEFT (register, 0x30, 4) , (const, 0x3, 4)
end_of_line, (register, 0x2c, 4) COPY (unique, 0x3580, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x58, 4) INT_AND (register, 0x58, 4) , (register, 0x50, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x1, 4)
end_of_line, (unique, 0x3300, 4) INT_RIGHT (register, 0x30, 4) , (unique, 0x3280, 4)
end_of_line, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
end_of_line, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3580, 4) INT_LEFT (register, 0x30, 4) , (const, 0x1, 4)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (unique, 0x3580, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (unique, 0x3580, 4)
end_of_line, (register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (unique, 0x3580, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x4a80, 4) INT_AND (register, 0x2c, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x4b00, 4) INT_SUB (const, 0x20, 4) , (unique, 0x4a80, 4)
end_of_line, (unique, 0x4b80, 4) INT_RIGHT (register, 0x58, 4) , (unique, 0x4b00, 4)
end_of_line, (unique, 0x4c80, 4) INT_AND (unique, 0x4b80, 4) , (const, 0x1, 4)
end_of_line, (unique, 0x4d00, 1) INT_EQUAL (unique, 0x4a80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x4d80, 1) BOOL_AND (unique, 0x4d00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x4e00, 1) INT_NOTEQUAL (unique, 0x4a80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x4e80, 1) SUBPIECE (unique, 0x4c80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x4f00, 1) BOOL_AND (unique, 0x4e00, 1) , (unique, 0x4e80, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x4d80, 1) , (unique, 0x4f00, 1)
end_of_line, (unique, 0x5080, 4) INT_LEFT (register, 0x58, 4) , (unique, 0x4a80, 4)
end_of_line, (register, 0x58, 4) COPY (unique, 0x5080, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line,  ---  CBRANCH (ram, 0x1375c, 4) , (register, 0x61, 1)
end_of_line, (register, 0x30, 4) COPY (register, 0x20, 4)
end_of_line, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
end_of_line, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (register, 0x30, 4)
end_of_line, (register, 0x50, 4) INT_ZEXT (unique, 0x3ca00, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x6, 4)
end_of_line, (register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (const, 0x6, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3f, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x50, 4) INT_AND (register, 0x50, 4) , (const, 0x3f, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x4a80, 4) INT_AND (register, 0x2c, 4) , (const, 0xff, 4)
end_of_line, (unique, 0x4b00, 4) INT_SUB (const, 0x20, 4) , (unique, 0x4a80, 4)
end_of_line, (unique, 0x4b80, 4) INT_RIGHT (register, 0x50, 4) , (unique, 0x4b00, 4)
end_of_line, (unique, 0x4c80, 4) INT_AND (unique, 0x4b80, 4) , (const, 0x1, 4)
end_of_line, (unique, 0x4d00, 1) INT_EQUAL (unique, 0x4a80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x4d80, 1) BOOL_AND (unique, 0x4d00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x4e00, 1) INT_NOTEQUAL (unique, 0x4a80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x4e80, 1) SUBPIECE (unique, 0x4c80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x4f00, 1) BOOL_AND (unique, 0x4e00, 1) , (unique, 0x4e80, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x4d80, 1) , (unique, 0x4f00, 1)
end_of_line, (unique, 0x5080, 4) INT_LEFT (register, 0x50, 4) , (unique, 0x4a80, 4)
end_of_line, (register, 0x58, 4) INT_OR (register, 0x58, 4) , (unique, 0x5080, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
end_of_line,  ---  CBRANCH (ram, 0x136d4, 4) , (unique, 0x1a80, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (register, 0x38, 4) , (const, 0x1, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (register, 0x38, 4) , (const, 0x1, 4)
end_of_line, (register, 0x2c, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x20, 4) INT_ADD (register, 0x20, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x58, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x58, 4) , (const, 0xa, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x58, 4) , (const, 0xa, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line,  ---  CBRANCH (ram, 0x13750, 4) , (register, 0x61, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0xd, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0xd, 4) , (register, 0x58, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x58, 4) , (const, 0xd, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x58, 4) , (const, 0xd, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line,  ---  CBRANCH (ram, 0x13764, 4) , (register, 0x61, 1)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x24, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (register, 0x20, 4)
end_of_line, (unique, 0x3ba80, 4) INT_SUB (register, 0x24, 4) , (register, 0x20, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
end_of_line, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
end_of_line,  ---  CBRANCH (ram, 0x1368c, 4) , (unique, 0x1f00, 1)
end_of_line,  ---  BRANCH (ram, 0x13658, 4)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (register, 0x24, 4) , (register, 0x20, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (register, 0x24, 4)
end_of_line, (unique, 0x3ba80, 4) INT_SUB (register, 0x20, 4) , (register, 0x24, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line,  ---  CBRANCH (ram, 0x13658, 4) , (register, 0x62, 1)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
end_of_line, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0xa, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0xa, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line,  ---  CBRANCH (ram, 0x13790, 4) , (register, 0x61, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0x1, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0x1, 4)
end_of_line, (register, 0x2c, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line,  ---  BRANCH (ram, 0x13738, 4)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
end_of_line, (register, 0x50, 4) INT_ZEXT (unique, 0x3ca00, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x50, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0xa, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x50, 4) , (const, 0xa, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line,  ---  CBRANCH (ram, 0x13790, 4) , (register, 0x61, 1)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (register, 0x24, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x24, 4)
end_of_line, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x24, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (register, 0x20, 4) COPY (register, 0x2c, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
end_of_line, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
end_of_line,  ---  CBRANCH (ram, 0x1372c, 4) , (unique, 0x1a80, 1)
end_of_line,  ---  BRANCH (ram, 0x13658, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0x1, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0x1, 4)
end_of_line, (register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x2c, 4) COPY (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
end_of_line,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x80, 4) COPY (register, 0x54, 4)
end_of_line, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x54, 4) COPY (register, 0x80, 4)
end_of_line, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
end_of_line, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
end_of_line, (register, 0x69, 1) COPY (register, 0xb0, 1)
end_of_line, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
end_of_line,  ---  RETURN (register, 0x5c, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x2c, 4) COPY (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line,  ---  BRANCH (ram, 0x136f0, 4)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x24, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (register, 0x20, 4)
end_of_line, (unique, 0x3ba80, 4) INT_SUB (register, 0x24, 4) , (register, 0x20, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
end_of_line, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
end_of_line,  ---  CBRANCH (ram, 0x13750, 4) , (unique, 0x2080, 1)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
end_of_line, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0xa, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0xa, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
end_of_line,  ---  CBRANCH (ram, 0x13750, 4) , (unique, 0x1a80, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x2c, 4) COPY (const, 0x2, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0x1, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0x1, 4)
end_of_line, (register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
end_of_line,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x80, 4) COPY (register, 0x54, 4)
end_of_line, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x54, 4) COPY (register, 0x80, 4)
end_of_line, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
end_of_line, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
end_of_line, (register, 0x69, 1) COPY (register, 0xb0, 1)
end_of_line, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
end_of_line,  ---  RETURN (register, 0x5c, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x2c, 4) COPY (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line,  ---  BRANCH (ram, 0x1359c, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x2c, 4) COPY (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x20, 4) INT_ADD (register, 0x20, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
end_of_line,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x80, 4) COPY (register, 0x54, 4)
end_of_line, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x54, 4) COPY (register, 0x80, 4)
end_of_line, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
end_of_line, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
end_of_line, (register, 0x69, 1) COPY (register, 0xb0, 1)
end_of_line, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
end_of_line,  ---  RETURN (register, 0x5c, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x50, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0xa, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x50, 4) , (const, 0xa, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
end_of_line,  ---  CBRANCH (ram, 0x13750, 4) , (unique, 0x2180, 1)
end_of_line, (register, 0x68, 1) COPY (register, 0x62, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x24, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (register, 0x20, 4)
end_of_line, (unique, 0x3ba80, 4) INT_SUB (register, 0x24, 4) , (register, 0x20, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
end_of_line, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
end_of_line,  ---  CBRANCH (ram, 0x13538, 4) , (unique, 0x1f00, 1)
end_of_line,  ---  BRANCH (ram, 0x13658, 4)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
end_of_line, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
end_of_line, (register, 0x62, 1) COPY (register, 0x66, 1)
end_of_line, (register, 0x61, 1) COPY (register, 0x65, 1)
end_of_line, (register, 0x60, 1) COPY (register, 0x64, 1)
end_of_line, (register, 0x63, 1) COPY (register, 0x67, 1)
end_of_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
end_of_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
end_of_line,  ---  CBRANCH (ram, 0x137bc, 4) , (unique, 0x2680, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x2c, 4) COPY (const, 0x2, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
end_of_line,  ---  CBRANCH (ram, 0x137c0, 4) , (unique, 0x2680, 1)
end_of_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
end_of_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
end_of_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
end_of_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
end_of_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
end_of_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
end_of_line, (register, 0x2c, 4) COPY (const, 0x1, 4)
end_of_line, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
end_of_line, (register, 0x66, 1) COPY (register, 0x68, 1)
end_of_line, (register, 0x67, 1) COPY (register, 0x63, 1)
end_of_line, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
end_of_line,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
end_of_line, (register, 0x80, 4) COPY (register, 0x54, 4)
end_of_line, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
end_of_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
end_of_line, (register, 0x54, 4) COPY (register, 0x80, 4)
end_of_line, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
end_of_line, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
end_of_line, (register, 0x69, 1) COPY (register, 0xb0, 1)
end_of_line, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
end_of_line,  ---  RETURN (register, 0x5c, 4)
test_incexc, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
test_incexc,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
test_incexc, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
test_incexc,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
test_incexc, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
test_incexc,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
test_incexc, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
test_incexc,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
test_incexc, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
test_incexc,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
test_incexc, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
test_incexc,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
test_incexc, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
test_incexc, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
test_incexc, (register, 0x34, 4) COPY (register, 0x28, 4)
test_incexc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x10, 4) , (const, 0x1f, 4)
test_incexc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
test_incexc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
test_incexc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
test_incexc, (register, 0x66, 1) INT_LESSEQUAL (const, 0x10, 4) , (register, 0x54, 4)
test_incexc, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x10, 4)
test_incexc, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x10, 4)
test_incexc, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
test_incexc, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
test_incexc, (register, 0x38, 4) COPY (register, 0x24, 4)
test_incexc, (register, 0x3c, 4) COPY (register, 0x20, 4)
test_incexc, (register, 0x58, 4) COPY (const, 0x137f4, 4)
test_incexc,  ---  CALL (ram, 0x114ac, 4)
test_incexc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
test_incexc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
test_incexc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
test_incexc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
test_incexc, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
test_incexc, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
test_incexc, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
test_incexc, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
test_incexc, (register, 0x62, 1) COPY (register, 0x66, 1)
test_incexc, (register, 0x61, 1) COPY (register, 0x65, 1)
test_incexc, (register, 0x60, 1) COPY (register, 0x64, 1)
test_incexc, (register, 0x63, 1) COPY (register, 0x67, 1)
test_incexc, (register, 0x40, 4) COPY (register, 0x20, 4)
test_incexc, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
test_incexc, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
test_incexc,  ---  CBRANCH (ram, 0x13800, 4) , (unique, 0x2680, 1)
test_incexc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
test_incexc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
test_incexc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
test_incexc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
test_incexc, (register, 0x30, 4) COPY (const, 0x0, 4)
test_incexc, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
test_incexc, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
test_incexc, (register, 0x66, 1) COPY (register, 0x68, 1)
test_incexc, (register, 0x67, 1) COPY (register, 0x63, 1)
test_incexc, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
test_incexc,  ---  CBRANCH (ram, 0x13814, 4) , (unique, 0x1a80, 1)
test_incexc,  ---  BRANCH (ram, 0x1384c, 4)
test_incexc, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
test_incexc, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
test_incexc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
test_incexc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
test_incexc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
test_incexc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
test_incexc, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
test_incexc, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
test_incexc, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
test_incexc, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
test_incexc, (register, 0x62, 1) COPY (register, 0x66, 1)
test_incexc, (register, 0x61, 1) COPY (register, 0x65, 1)
test_incexc, (register, 0x60, 1) COPY (register, 0x64, 1)
test_incexc, (register, 0x63, 1) COPY (register, 0x67, 1)
test_incexc,  ---  CBRANCH (ram, 0x1384c, 4) , (register, 0x61, 1)
test_incexc, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x8, 4)
test_incexc, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
test_incexc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
test_incexc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
test_incexc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
test_incexc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
test_incexc, (register, 0x24, 4) COPY (const, 0x0, 4)
test_incexc, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
test_incexc, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
test_incexc, (register, 0x66, 1) COPY (register, 0x68, 1)
test_incexc, (register, 0x67, 1) COPY (register, 0x63, 1)
test_incexc, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
test_incexc,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
test_incexc, (register, 0x28, 4) COPY (register, 0x3c, 4)
test_incexc, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
test_incexc,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
test_incexc, (register, 0x2c, 4) COPY (register, 0x40, 4)
test_incexc, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
test_incexc,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
test_incexc, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
test_incexc,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
test_incexc, (register, 0x58, 4) COPY (const, 0x13838, 4)
test_incexc,  ---  CALL (ram, 0x113f8, 4)
test_incexc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
test_incexc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
test_incexc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
test_incexc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
test_incexc, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
test_incexc, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
test_incexc, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
test_incexc, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
test_incexc, (register, 0x62, 1) COPY (register, 0x66, 1)
test_incexc, (register, 0x61, 1) COPY (register, 0x65, 1)
test_incexc, (register, 0x60, 1) COPY (register, 0x64, 1)
test_incexc, (register, 0x63, 1) COPY (register, 0x67, 1)
test_incexc, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
test_incexc,  ---  CBRANCH (ram, 0x13808, 4) , (unique, 0x2280, 1)
test_incexc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
test_incexc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
test_incexc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
test_incexc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
test_incexc, (register, 0x20, 4) COPY (const, 0x0, 4)
test_incexc, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
test_incexc, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
test_incexc, (register, 0x66, 1) COPY (register, 0x68, 1)
test_incexc, (register, 0x67, 1) COPY (register, 0x63, 1)
test_incexc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x10, 4) , (const, 0x1f, 4)
test_incexc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
test_incexc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
test_incexc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
test_incexc, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x10, 4)
test_incexc, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x10, 4)
test_incexc, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
test_incexc, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
test_incexc, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
test_incexc, (register, 0x80, 4) COPY (register, 0x54, 4)
test_incexc, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
test_incexc, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
test_incexc, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
test_incexc, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
test_incexc, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
test_incexc, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
test_incexc, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
test_incexc, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
test_incexc, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
test_incexc, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
test_incexc, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
test_incexc, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
test_incexc, (register, 0x54, 4) COPY (register, 0x80, 4)
test_incexc, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
test_incexc, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
test_incexc, (register, 0x69, 1) COPY (register, 0xb0, 1)
test_incexc, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
test_incexc,  ---  RETURN (register, 0x5c, 4)
test_incexc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
test_incexc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
test_incexc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
test_incexc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
test_incexc, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
test_incexc, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
test_incexc, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
test_incexc, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
test_incexc, (register, 0x62, 1) COPY (register, 0x66, 1)
test_incexc, (register, 0x61, 1) COPY (register, 0x65, 1)
test_incexc, (register, 0x60, 1) COPY (register, 0x64, 1)
test_incexc, (register, 0x63, 1) COPY (register, 0x67, 1)
test_incexc, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
test_incexc, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
test_incexc,  ---  CBRANCH (ram, 0x13854, 4) , (unique, 0x2680, 1)
test_incexc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
test_incexc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
test_incexc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
test_incexc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
test_incexc, (register, 0x30, 4) COPY (const, 0x0, 4)
test_incexc, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
test_incexc, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
test_incexc, (register, 0x66, 1) COPY (register, 0x68, 1)
test_incexc, (register, 0x67, 1) COPY (register, 0x63, 1)
test_incexc,  ---  CBRANCH (ram, 0x13894, 4) , (register, 0x61, 1)
test_incexc, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x8, 4)
test_incexc, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
test_incexc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
test_incexc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
test_incexc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
test_incexc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
test_incexc, (register, 0x24, 4) COPY (const, 0x0, 4)
test_incexc, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
test_incexc, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
test_incexc, (register, 0x66, 1) COPY (register, 0x68, 1)
test_incexc, (register, 0x67, 1) COPY (register, 0x63, 1)
test_incexc, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
test_incexc,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
test_incexc, (register, 0x28, 4) COPY (register, 0x3c, 4)
test_incexc, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
test_incexc,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
test_incexc, (register, 0x2c, 4) COPY (register, 0x40, 4)
test_incexc, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
test_incexc,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
test_incexc, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
test_incexc,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
test_incexc, (register, 0x58, 4) COPY (const, 0x1387c, 4)
test_incexc,  ---  CALL (ram, 0x113f8, 4)
test_incexc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
test_incexc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
test_incexc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
test_incexc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
test_incexc, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
test_incexc, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
test_incexc, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
test_incexc, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
test_incexc, (register, 0x62, 1) COPY (register, 0x66, 1)
test_incexc, (register, 0x61, 1) COPY (register, 0x65, 1)
test_incexc, (register, 0x60, 1) COPY (register, 0x64, 1)
test_incexc, (register, 0x63, 1) COPY (register, 0x67, 1)
test_incexc, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
test_incexc,  ---  CBRANCH (ram, 0x13894, 4) , (unique, 0x2180, 1)
test_incexc, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x0, 4)
test_incexc, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
test_incexc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
test_incexc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
test_incexc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
test_incexc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
test_incexc, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
test_incexc, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
test_incexc, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
test_incexc, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
test_incexc, (register, 0x62, 1) COPY (register, 0x66, 1)
test_incexc, (register, 0x61, 1) COPY (register, 0x65, 1)
test_incexc, (register, 0x60, 1) COPY (register, 0x64, 1)
test_incexc, (register, 0x63, 1) COPY (register, 0x67, 1)
test_incexc, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
test_incexc,  ---  CBRANCH (ram, 0x13858, 4) , (unique, 0x1a80, 1)
test_incexc,  ---  BRANCH (ram, 0x13840, 4)
test_incexc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
test_incexc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
test_incexc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
test_incexc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
test_incexc, (register, 0x20, 4) COPY (const, 0x1, 4)
test_incexc, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
test_incexc, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
test_incexc, (register, 0x66, 1) COPY (register, 0x68, 1)
test_incexc, (register, 0x67, 1) COPY (register, 0x63, 1)
test_incexc, (unique, 0x2e80, 4) INT_RIGHT (const, 0x10, 4) , (const, 0x1f, 4)
test_incexc, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
test_incexc, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
test_incexc, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
test_incexc, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
test_incexc, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
test_incexc, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x10, 4)
test_incexc, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x10, 4)
test_incexc, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
test_incexc, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
test_incexc, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
test_incexc, (register, 0x80, 4) COPY (register, 0x54, 4)
test_incexc, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
test_incexc, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
test_incexc, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
test_incexc, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
test_incexc, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
test_incexc, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
test_incexc, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
test_incexc, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
test_incexc, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
test_incexc, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
test_incexc, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
test_incexc, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
test_incexc, (register, 0x54, 4) COPY (register, 0x80, 4)
test_incexc, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
test_incexc, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
test_incexc, (register, 0x69, 1) COPY (register, 0xb0, 1)
test_incexc, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
test_incexc,  ---  RETURN (register, 0x5c, 4)
read_one_line, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
read_one_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
read_one_line, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_one_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
read_one_line, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_one_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
read_one_line, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_one_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
read_one_line, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_one_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
read_one_line, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_one_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x2c, 4)
read_one_line, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
read_one_line, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_one_line, (register, 0x3c, 4) COPY (register, 0x24, 4)
read_one_line, (register, 0x38, 4) COPY (register, 0x28, 4)
read_one_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_one_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_one_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_one_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_one_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_one_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_one_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_one_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x20, 4)
read_one_line, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x1, 4)
read_one_line, (register, 0x34, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
read_one_line, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
read_one_line, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
read_one_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
read_one_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_one_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_one_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_one_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_one_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_one_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_one_line, (register, 0x30, 4) COPY (const, 0x0, 4)
read_one_line, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
read_one_line, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
read_one_line, (register, 0x66, 1) COPY (register, 0x68, 1)
read_one_line, (register, 0x67, 1) COPY (register, 0x63, 1)
read_one_line,  ---  BRANCH (ram, 0x138cc, 4)
read_one_line, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)
read_one_line, (unique, 0x6a380, 1) SUBPIECE (register, 0x20, 4) , (const, 0x0, 4)
read_one_line,  ---  STORE (const, 0x1a1, 8) , (register, 0x34, 4) , (unique, 0x6a380, 1)
read_one_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_one_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_one_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_one_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_one_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_one_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_one_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_one_line, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x1, 4)
read_one_line, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x1, 4)
read_one_line, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
read_one_line, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
read_one_line, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
read_one_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
read_one_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_one_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_one_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_one_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_one_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_one_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_one_line, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x20, 4)
read_one_line, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0xa, 4)
read_one_line, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0xa, 4)
read_one_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
read_one_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
read_one_line, (register, 0x62, 1) COPY (register, 0x66, 1)
read_one_line, (register, 0x61, 1) COPY (register, 0x65, 1)
read_one_line, (register, 0x60, 1) COPY (register, 0x64, 1)
read_one_line, (register, 0x63, 1) COPY (register, 0x67, 1)
read_one_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_one_line, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
read_one_line,  ---  CBRANCH (ram, 0x138c8, 4) , (unique, 0x2680, 1)
read_one_line, (register, 0x68, 1) COPY (register, 0x62, 1)
read_one_line, (register, 0x66, 1) INT_LESSEQUAL (register, 0x3c, 4) , (register, 0x30, 4)
read_one_line, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (register, 0x3c, 4)
read_one_line, (unique, 0x3ba80, 4) INT_SUB (register, 0x30, 4) , (register, 0x3c, 4)
read_one_line, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
read_one_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
read_one_line, (register, 0x62, 1) COPY (register, 0x66, 1)
read_one_line, (register, 0x61, 1) COPY (register, 0x65, 1)
read_one_line, (register, 0x60, 1) COPY (register, 0x64, 1)
read_one_line, (register, 0x63, 1) COPY (register, 0x67, 1)
read_one_line, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
read_one_line,  ---  CBRANCH (ram, 0x138dc, 4) , (unique, 0x2180, 1)
read_one_line, (register, 0x20, 4) COPY (register, 0x38, 4)
read_one_line, (register, 0x58, 4) COPY (const, 0x138d4, 4)
read_one_line,  ---  CALL (ram, 0x114e8, 4)
read_one_line, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
read_one_line, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_one_line, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
read_one_line, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
read_one_line, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
read_one_line, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
read_one_line, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
read_one_line, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0x1, 4)
read_one_line, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0x1, 4)
read_one_line, (unique, 0x3b680, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
read_one_line, (register, 0x64, 1) INT_SLESS (unique, 0x3b680, 4) , (const, 0x0, 4)
read_one_line, (register, 0x65, 1) INT_EQUAL (unique, 0x3b680, 4) , (const, 0x0, 4)
read_one_line, (register, 0x62, 1) COPY (register, 0x66, 1)
read_one_line, (register, 0x61, 1) COPY (register, 0x65, 1)
read_one_line, (register, 0x60, 1) COPY (register, 0x64, 1)
read_one_line, (register, 0x63, 1) COPY (register, 0x67, 1)
read_one_line, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
read_one_line,  ---  CBRANCH (ram, 0x138b8, 4) , (unique, 0x1a80, 1)
read_one_line, (register, 0x20, 4) COPY (register, 0x30, 4)
read_one_line, (register, 0x80, 4) COPY (register, 0x54, 4)
read_one_line, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_one_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_one_line, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_one_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_one_line, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_one_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_one_line, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_one_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_one_line, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_one_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_one_line, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
read_one_line, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
read_one_line, (register, 0x54, 4) COPY (register, 0x80, 4)
read_one_line, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
read_one_line, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
read_one_line, (register, 0x69, 1) COPY (register, 0xb0, 1)
read_one_line, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
read_one_line,  ---  RETURN (register, 0x5c, 4)
pcregrep_exit, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x13960, 4)
pcregrep_exit, (register, 0x30, 4) COPY (register, 0x20, 4)
pcregrep_exit, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x13964, 4)
pcregrep_exit, (unique, 0x1780, 4) INT_ADD (const, 0x138f0, 4) , (const, 0x8, 4)
pcregrep_exit, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep_exit, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep_exit, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep_exit, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep_exit, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)
pcregrep_exit,  ---  STORE (const, 0x1a1, 8) , (register, 0x54, 4) , (register, 0x58, 4)
pcregrep_exit, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
pcregrep_exit, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep_exit, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep_exit, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep_exit, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep_exit, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep_exit, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep_exit, (register, 0x66, 1) INT_LESSEQUAL (const, 0xc, 4) , (register, 0x54, 4)
pcregrep_exit, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0xc, 4)
pcregrep_exit, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0xc, 4)
pcregrep_exit, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
pcregrep_exit, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x8, 4)
pcregrep_exit, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep_exit, (unique, 0x1780, 4) INT_ADD (const, 0x13900, 4) , (const, 0x8, 4)
pcregrep_exit, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep_exit, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
pcregrep_exit, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
pcregrep_exit, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
pcregrep_exit, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep_exit, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep_exit, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep_exit, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep_exit, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep_exit, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep_exit, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep_exit, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep_exit, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep_exit, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep_exit, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep_exit, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep_exit, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep_exit, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep_exit, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep_exit,  ---  CBRANCH (ram, 0x13914, 4) , (unique, 0x1a80, 1)
pcregrep_exit, (register, 0x20, 4) COPY (register, 0x30, 4)
pcregrep_exit, (register, 0x58, 4) COPY (const, 0x13914, 4)
pcregrep_exit,  ---  CALL (ram, 0x114a0, 4)
pcregrep_exit, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x13968, 4)
pcregrep_exit, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1a, 4) , (const, 0x1f, 4)
pcregrep_exit, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep_exit, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep_exit, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep_exit, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep_exit, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep_exit, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep_exit, (register, 0x50, 4) INT_NEGATE (const, 0x1a, 4)
pcregrep_exit, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep_exit, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep_exit, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x1396c, 4)
pcregrep_exit, (unique, 0x2e80, 4) INT_RIGHT (const, 0x14, 4) , (const, 0x1f, 4)
pcregrep_exit, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep_exit, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep_exit, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep_exit, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep_exit, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep_exit, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep_exit, (register, 0x20, 4) INT_NEGATE (const, 0x14, 4)
pcregrep_exit, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep_exit, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep_exit, (unique, 0x8480, 4) INT_ADD (register, 0x24, 4) , (register, 0x2c, 4)
pcregrep_exit, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep_exit, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep_exit, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep_exit, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep_exit, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep_exit, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep_exit, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep_exit, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep_exit, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep_exit, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep_exit, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep_exit, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
pcregrep_exit,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
pcregrep_exit, (unique, 0x2e80, 4) INT_RIGHT (const, 0x7, 4) , (const, 0x1f, 4)
pcregrep_exit, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep_exit, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep_exit, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep_exit, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep_exit, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep_exit, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep_exit, (register, 0x2c, 4) INT_NEGATE (const, 0x7, 4)
pcregrep_exit, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep_exit, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep_exit, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep_exit, (unique, 0x1780, 4) INT_ADD (const, 0x13938, 4) , (const, 0x8, 4)
pcregrep_exit, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep_exit, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep_exit, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep_exit, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep_exit, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep_exit, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
pcregrep_exit,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
pcregrep_exit, (register, 0x58, 4) COPY (const, 0x13944, 4)
pcregrep_exit,  ---  CALL (ram, 0x1150c, 4)
pcregrep_exit, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x13970, 4)
pcregrep_exit, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep_exit, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep_exit, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep_exit, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep_exit, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep_exit, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep_exit, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep_exit, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep_exit, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep_exit, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep_exit, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep_exit, (unique, 0x2e80, 4) INT_RIGHT (const, 0x37, 4) , (const, 0x1f, 4)
pcregrep_exit, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep_exit, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep_exit, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep_exit, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep_exit, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep_exit, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep_exit, (register, 0x28, 4) COPY (const, 0x37, 4)
pcregrep_exit, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep_exit, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep_exit, (unique, 0x1780, 4) INT_ADD (const, 0x13954, 4) , (const, 0x8, 4)
pcregrep_exit, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep_exit, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
pcregrep_exit, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
pcregrep_exit, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
pcregrep_exit, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
pcregrep_exit, (register, 0x58, 4) COPY (const, 0x1395c, 4)
pcregrep_exit,  ---  CALL (ram, 0x11410, 4)
pcregrep_exit,  ---  BRANCH (ram, 0x1390c, 4)
match_patterns, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (const, 0x13b48, 4)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc8, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x66, 1) INT_LESSEQUAL (const, 0xc8, 4) , (register, 0x24, 4)
match_patterns, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0xc8, 4)
match_patterns, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0xc8, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
match_patterns, (register, 0x62, 1) COPY (register, 0x66, 1)
match_patterns, (register, 0x61, 1) COPY (register, 0x65, 1)
match_patterns, (register, 0x60, 1) COPY (register, 0x64, 1)
match_patterns, (register, 0x63, 1) COPY (register, 0x67, 1)
match_patterns, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
match_patterns, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
match_patterns, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
match_patterns, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
match_patterns, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
match_patterns, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
match_patterns, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
match_patterns, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
match_patterns, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
match_patterns, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
match_patterns, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1c, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1c, 4) , (register, 0x54, 4)
match_patterns, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x1c, 4)
match_patterns, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x1c, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x1780, 4) INT_ADD (const, 0x13984, 4) , (const, 0x8, 4)
match_patterns, (register, 0x68, 1) COPY (register, 0x62, 1)
match_patterns, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x50, 4)
match_patterns, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x50, 4)
match_patterns, (register, 0x50, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x50, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
match_patterns, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (const, 0x13b4c, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
match_patterns, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (unique, 0x1780, 4) INT_ADD (const, 0x13990, 4) , (const, 0x8, 4)
match_patterns, (register, 0x68, 1) COPY (register, 0x62, 1)
match_patterns, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x44, 4)
match_patterns, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x44, 4)
match_patterns, (register, 0x44, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x44, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
match_patterns, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
match_patterns,  ---  CBRANCH (ram, 0x13b0c, 4) , (unique, 0x2080, 1)
match_patterns, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (const, 0x13b50, 4)
match_patterns, (unique, 0x1780, 4) INT_ADD (const, 0x1399c, 4) , (const, 0x8, 4)
match_patterns, (register, 0x68, 1) COPY (register, 0x62, 1)
match_patterns, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x50, 4)
match_patterns, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x50, 4)
match_patterns, (register, 0x50, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x50, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc8, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x50, 4) COPY (const, 0xc8, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
match_patterns, (register, 0x66, 1) COPY (register, 0x68, 1)
match_patterns, (register, 0x67, 1) COPY (register, 0x63, 1)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x4c, 4)
match_patterns, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3b980, 4) INT_SUB (register, 0x4c, 4) , (const, 0x0, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
match_patterns, (register, 0x62, 1) COPY (register, 0x66, 1)
match_patterns, (register, 0x61, 1) COPY (register, 0x65, 1)
match_patterns, (register, 0x60, 1) COPY (register, 0x64, 1)
match_patterns, (register, 0x63, 1) COPY (register, 0x67, 1)
match_patterns,  ---  CBRANCH (ram, 0x13a18, 4) , (register, 0x61, 1)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x40, 4) COPY (const, 0x1, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
match_patterns, (register, 0x66, 1) COPY (register, 0x68, 1)
match_patterns, (register, 0x67, 1) COPY (register, 0x63, 1)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x63, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x48, 4) COPY (const, 0x63, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
match_patterns, (register, 0x66, 1) COPY (register, 0x68, 1)
match_patterns, (register, 0x67, 1) COPY (register, 0x63, 1)
match_patterns, (register, 0x3c, 4) COPY (register, 0x28, 4)
match_patterns, (register, 0x38, 4) COPY (register, 0x24, 4)
match_patterns, (register, 0x30, 4) COPY (register, 0x20, 4)
match_patterns, (register, 0x34, 4) COPY (register, 0x2c, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
match_patterns, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (register, 0x2c, 4) COPY (register, 0x38, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x4c, 4) , (const, 0x8, 4)
match_patterns, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (register, 0x28, 4) COPY (register, 0x30, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x4c, 4) , (const, 0xc, 4)
match_patterns, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (register, 0x80, 4) COPY (register, 0x54, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
match_patterns, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
match_patterns, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x48, 4)
match_patterns, (register, 0x58, 4) COPY (const, 0x139f0, 4)
match_patterns,  ---  CALL (ram, 0x113f8, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x44, 4)
match_patterns, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
match_patterns, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
match_patterns, (register, 0x62, 1) COPY (register, 0x66, 1)
match_patterns, (register, 0x61, 1) COPY (register, 0x65, 1)
match_patterns, (register, 0x60, 1) COPY (register, 0x64, 1)
match_patterns, (register, 0x63, 1) COPY (register, 0x67, 1)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
match_patterns, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
match_patterns,  ---  CBRANCH (ram, 0x13b20, 4) , (unique, 0x2180, 1)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0x1, 4)
match_patterns, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0x1, 4)
match_patterns, (unique, 0x3b680, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (unique, 0x3b680, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (unique, 0x3b680, 4) , (const, 0x0, 4)
match_patterns, (register, 0x62, 1) COPY (register, 0x66, 1)
match_patterns, (register, 0x61, 1) COPY (register, 0x65, 1)
match_patterns, (register, 0x60, 1) COPY (register, 0x64, 1)
match_patterns, (register, 0x63, 1) COPY (register, 0x67, 1)
match_patterns, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
match_patterns,  ---  CBRANCH (ram, 0x13a20, 4) , (unique, 0x1a80, 1)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
match_patterns, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x66, 1) INT_CARRY (register, 0x40, 4) , (const, 0x1, 4)
match_patterns, (register, 0x67, 1) INT_SCARRY (register, 0x40, 4) , (const, 0x1, 4)
match_patterns, (register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x1, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x40, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x4c, 4)
match_patterns, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3b980, 4) INT_SUB (register, 0x4c, 4) , (const, 0x0, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
match_patterns, (register, 0x62, 1) COPY (register, 0x66, 1)
match_patterns, (register, 0x61, 1) COPY (register, 0x65, 1)
match_patterns, (register, 0x60, 1) COPY (register, 0x64, 1)
match_patterns, (register, 0x63, 1) COPY (register, 0x67, 1)
match_patterns, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
match_patterns,  ---  CBRANCH (ram, 0x139cc, 4) , (unique, 0x1a80, 1)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x20, 4) COPY (const, 0x0, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
match_patterns, (register, 0x66, 1) COPY (register, 0x68, 1)
match_patterns, (register, 0x67, 1) COPY (register, 0x63, 1)
match_patterns,  ---  BRANCH (ram, 0x13b04, 4)
match_patterns, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (const, 0x13b54, 4)
match_patterns, (register, 0x34, 4) COPY (register, 0x30, 4)
match_patterns, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x13b58, 4)
match_patterns, (register, 0x2c, 4) COPY (register, 0x20, 4)
match_patterns, (unique, 0x8480, 4) INT_ADD (register, 0x44, 4) , (register, 0x50, 4)
match_patterns, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x24, 4) COPY (const, 0x1, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
match_patterns, (register, 0x66, 1) COPY (register, 0x68, 1)
match_patterns, (register, 0x67, 1) COPY (register, 0x63, 1)
match_patterns, (unique, 0x1780, 4) INT_ADD (const, 0x13a38, 4) , (const, 0x8, 4)
match_patterns, (register, 0x68, 1) COPY (register, 0x62, 1)
match_patterns, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
match_patterns, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
match_patterns, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
match_patterns, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (register, 0x58, 4) COPY (const, 0x13a44, 4)
match_patterns,  ---  CALL (ram, 0x1150c, 4)
match_patterns, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x13b5c, 4)
match_patterns, (unique, 0x1780, 4) INT_ADD (const, 0x13a48, 4) , (const, 0x8, 4)
match_patterns, (register, 0x68, 1) COPY (register, 0x62, 1)
match_patterns, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
match_patterns, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
match_patterns, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0xc, 4)
match_patterns, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
match_patterns, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
match_patterns, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
match_patterns, (register, 0x62, 1) COPY (register, 0x66, 1)
match_patterns, (register, 0x61, 1) COPY (register, 0x65, 1)
match_patterns, (register, 0x60, 1) COPY (register, 0x64, 1)
match_patterns, (register, 0x63, 1) COPY (register, 0x67, 1)
match_patterns,  ---  CBRANCH (ram, 0x13a74, 4) , (register, 0x61, 1)
match_patterns, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x13b60, 4)
match_patterns, (register, 0x2c, 4) COPY (register, 0x40, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
match_patterns, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x24, 4) COPY (const, 0x1, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
match_patterns, (register, 0x66, 1) COPY (register, 0x68, 1)
match_patterns, (register, 0x67, 1) COPY (register, 0x63, 1)
match_patterns, (unique, 0x1780, 4) INT_ADD (const, 0x13a6c, 4) , (const, 0x8, 4)
match_patterns, (register, 0x68, 1) COPY (register, 0x62, 1)
match_patterns, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
match_patterns, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
match_patterns, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
match_patterns, (register, 0x58, 4) COPY (const, 0x13a74, 4)
match_patterns,  ---  CALL (ram, 0x1150c, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
match_patterns, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
match_patterns, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (register, 0x58, 4) COPY (const, 0x13a80, 4)
match_patterns,  ---  CALL (ram, 0x11584, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
match_patterns, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x24, 4) COPY (const, 0x1, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
match_patterns, (register, 0x66, 1) COPY (register, 0x68, 1)
match_patterns, (register, 0x67, 1) COPY (register, 0x63, 1)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
match_patterns, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (register, 0x20, 4) COPY (register, 0x34, 4)
match_patterns, (register, 0x58, 4) COPY (const, 0x13a94, 4)
match_patterns,  ---  CALL (ram, 0x11410, 4)
match_patterns, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x13b64, 4)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x28, 4) COPY (const, 0x2, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
match_patterns, (register, 0x66, 1) COPY (register, 0x68, 1)
match_patterns, (register, 0x67, 1) COPY (register, 0x63, 1)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
match_patterns, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x24, 4) COPY (const, 0x1, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
match_patterns, (register, 0x66, 1) COPY (register, 0x68, 1)
match_patterns, (register, 0x67, 1) COPY (register, 0x63, 1)
match_patterns, (unique, 0x1780, 4) INT_ADD (const, 0x13aa4, 4) , (const, 0x8, 4)
match_patterns, (register, 0x68, 1) COPY (register, 0x62, 1)
match_patterns, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
match_patterns, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
match_patterns, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
match_patterns, (register, 0x58, 4) COPY (const, 0x13aac, 4)
match_patterns,  ---  CALL (ram, 0x11410, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x44, 4)
match_patterns, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
match_patterns, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x15, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x15, 4)
match_patterns, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x15, 4)
match_patterns, (unique, 0x3b680, 4) INT_ADD (register, 0x2c, 4) , (const, 0x15, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (unique, 0x3b680, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (unique, 0x3b680, 4) , (const, 0x0, 4)
match_patterns, (register, 0x62, 1) COPY (register, 0x66, 1)
match_patterns, (register, 0x61, 1) COPY (register, 0x65, 1)
match_patterns, (register, 0x60, 1) COPY (register, 0x64, 1)
match_patterns, (register, 0x63, 1) COPY (register, 0x67, 1)
match_patterns, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
match_patterns, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
match_patterns,  ---  CBRANCH (ram, 0x13abc, 4) , (unique, 0x2680, 1)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x8, 4)
match_patterns, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x8, 4)
match_patterns, (unique, 0x3b680, 4) INT_ADD (register, 0x2c, 4) , (const, 0x8, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (unique, 0x3b680, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (unique, 0x3b680, 4) , (const, 0x0, 4)
match_patterns, (register, 0x62, 1) COPY (register, 0x66, 1)
match_patterns, (register, 0x61, 1) COPY (register, 0x65, 1)
match_patterns, (register, 0x60, 1) COPY (register, 0x64, 1)
match_patterns, (register, 0x63, 1) COPY (register, 0x67, 1)
match_patterns, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
match_patterns,  ---  CBRANCH (ram, 0x13ac0, 4) , (unique, 0x2680, 1)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x28, 4) COPY (const, 0x1, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
match_patterns, (register, 0x66, 1) COPY (register, 0x68, 1)
match_patterns, (register, 0x67, 1) COPY (register, 0x63, 1)
match_patterns, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
match_patterns, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
match_patterns,  ---  CBRANCH (ram, 0x13ac4, 4) , (unique, 0x2680, 1)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x28, 4) COPY (const, 0x0, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
match_patterns, (register, 0x66, 1) COPY (register, 0x68, 1)
match_patterns, (register, 0x67, 1) COPY (register, 0x63, 1)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1b, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1b, 4)
match_patterns, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1b, 4)
match_patterns, (unique, 0x3b680, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1b, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (unique, 0x3b680, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (unique, 0x3b680, 4) , (const, 0x0, 4)
match_patterns, (register, 0x62, 1) COPY (register, 0x66, 1)
match_patterns, (register, 0x61, 1) COPY (register, 0x65, 1)
match_patterns, (register, 0x60, 1) COPY (register, 0x64, 1)
match_patterns, (register, 0x63, 1) COPY (register, 0x67, 1)
match_patterns, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
match_patterns, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
match_patterns,  ---  CBRANCH (ram, 0x13acc, 4) , (unique, 0x2680, 1)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x2c, 4) COPY (const, 0x0, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
match_patterns, (register, 0x66, 1) COPY (register, 0x68, 1)
match_patterns, (register, 0x67, 1) COPY (register, 0x63, 1)
match_patterns, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
match_patterns,  ---  CBRANCH (ram, 0x13ad0, 4) , (unique, 0x2680, 1)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x2c, 4) COPY (const, 0x1, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
match_patterns, (register, 0x66, 1) COPY (register, 0x68, 1)
match_patterns, (register, 0x67, 1) COPY (register, 0x63, 1)
match_patterns, (register, 0x68, 1) COPY (register, 0x62, 1)
match_patterns, (register, 0x2c, 4) INT_OR (register, 0x2c, 4) , (register, 0x28, 4)
match_patterns, (register, 0x66, 1) COPY (register, 0x68, 1)
match_patterns, (register, 0x67, 1) COPY (register, 0x63, 1)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
match_patterns, (register, 0x62, 1) COPY (register, 0x66, 1)
match_patterns, (register, 0x61, 1) COPY (register, 0x65, 1)
match_patterns, (register, 0x60, 1) COPY (register, 0x64, 1)
match_patterns, (register, 0x63, 1) COPY (register, 0x67, 1)
match_patterns, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
match_patterns, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
match_patterns,  ---  CBRANCH (ram, 0x13ad8, 4) , (unique, 0x2680, 1)
match_patterns, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x13b68, 4)
match_patterns, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
match_patterns, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
match_patterns,  ---  CBRANCH (ram, 0x13adc, 4) , (unique, 0x2680, 1)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x28, 4) COPY (const, 0x1, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
match_patterns, (register, 0x66, 1) COPY (register, 0x68, 1)
match_patterns, (register, 0x67, 1) COPY (register, 0x63, 1)
match_patterns, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
match_patterns, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
match_patterns,  ---  CBRANCH (ram, 0x13ae0, 4) , (unique, 0x2680, 1)
match_patterns, (unique, 0x1780, 4) INT_ADD (const, 0x13adc, 4) , (const, 0x8, 4)
match_patterns, (register, 0x68, 1) COPY (register, 0x62, 1)
match_patterns, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
match_patterns, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
match_patterns, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
match_patterns, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
match_patterns,  ---  CBRANCH (ram, 0x13ae4, 4) , (unique, 0x2680, 1)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x8, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
match_patterns, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x13b6c, 4)
match_patterns, (unique, 0x1780, 4) INT_ADD (const, 0x13ae8, 4) , (const, 0x8, 4)
match_patterns, (register, 0x68, 1) COPY (register, 0x62, 1)
match_patterns, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
match_patterns, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
match_patterns, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x10, 4)
match_patterns, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x14, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x66, 1) INT_LESSEQUAL (const, 0x14, 4) , (register, 0x2c, 4)
match_patterns, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x14, 4)
match_patterns, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x14, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
match_patterns, (register, 0x62, 1) COPY (register, 0x66, 1)
match_patterns, (register, 0x61, 1) COPY (register, 0x65, 1)
match_patterns, (register, 0x60, 1) COPY (register, 0x64, 1)
match_patterns, (register, 0x63, 1) COPY (register, 0x67, 1)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
match_patterns, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
match_patterns, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x10, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
match_patterns, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
match_patterns, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
match_patterns, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
match_patterns,  ---  CBRANCH (ram, 0x13b00, 4) , (unique, 0x2680, 1)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x14, 4)
match_patterns, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
match_patterns, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
match_patterns, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
match_patterns,  ---  CBRANCH (ram, 0x13b28, 4) , (unique, 0x2480, 1)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1c, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1c, 4)
match_patterns, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1c, 4)
match_patterns, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
match_patterns, (register, 0x80, 4) COPY (register, 0x54, 4)
match_patterns, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
match_patterns, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
match_patterns, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
match_patterns, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
match_patterns, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
match_patterns, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
match_patterns, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
match_patterns, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
match_patterns, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
match_patterns, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
match_patterns, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
match_patterns, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
match_patterns, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
match_patterns, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
match_patterns, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
match_patterns, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
match_patterns, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
match_patterns, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
match_patterns, (register, 0x54, 4) COPY (register, 0x80, 4)
match_patterns, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
match_patterns, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
match_patterns, (register, 0x69, 1) COPY (register, 0xb0, 1)
match_patterns, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
match_patterns,  ---  RETURN (register, 0x5c, 4)
match_patterns, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (const, 0x13b70, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
match_patterns, (unique, 0x1780, 4) INT_ADD (const, 0x13b14, 4) , (const, 0x8, 4)
match_patterns, (register, 0x68, 1) COPY (register, 0x62, 1)
match_patterns, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x50, 4)
match_patterns, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x50, 4)
match_patterns, (register, 0x50, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x50, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
match_patterns,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
match_patterns,  ---  BRANCH (ram, 0x139ac, 4)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x20, 4) COPY (const, 0x1, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
match_patterns, (register, 0x66, 1) COPY (register, 0x68, 1)
match_patterns, (register, 0x67, 1) COPY (register, 0x63, 1)
match_patterns,  ---  BRANCH (ram, 0x13b04, 4)
match_patterns, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x13b74, 4)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x24, 4) COPY (const, 0x1, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
match_patterns, (register, 0x66, 1) COPY (register, 0x68, 1)
match_patterns, (register, 0x67, 1) COPY (register, 0x63, 1)
match_patterns, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
match_patterns, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x27, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x28, 4) COPY (const, 0x27, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
match_patterns, (register, 0x66, 1) COPY (register, 0x68, 1)
match_patterns, (register, 0x67, 1) COPY (register, 0x63, 1)
match_patterns, (unique, 0x1780, 4) INT_ADD (const, 0x13b38, 4) , (const, 0x8, 4)
match_patterns, (register, 0x68, 1) COPY (register, 0x62, 1)
match_patterns, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
match_patterns, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
match_patterns, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
match_patterns, (register, 0x58, 4) COPY (const, 0x13b40, 4)
match_patterns,  ---  CALL (ram, 0x11410, 4)
match_patterns, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
match_patterns, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
match_patterns, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
match_patterns, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
match_patterns, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
match_patterns, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
match_patterns, (register, 0x20, 4) COPY (const, 0x2, 4)
match_patterns, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
match_patterns, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
match_patterns, (register, 0x66, 1) COPY (register, 0x68, 1)
match_patterns, (register, 0x67, 1) COPY (register, 0x63, 1)
match_patterns, (register, 0x58, 4) COPY (const, 0x13b48, 4)
match_patterns,  ---  CALL (ram, 0x138e4, 4)
do_after_lines, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (const, 0x13cc0, 4)
do_after_lines, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
do_after_lines,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
do_after_lines, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
do_after_lines,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
do_after_lines, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
do_after_lines,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
do_after_lines, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
do_after_lines,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
do_after_lines, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
do_after_lines,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
do_after_lines, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
do_after_lines,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
do_after_lines, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
do_after_lines,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
do_after_lines, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
do_after_lines,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
do_after_lines, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
do_after_lines,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
do_after_lines, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
do_after_lines, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
do_after_lines, (register, 0x30, 4) COPY (register, 0x24, 4)
do_after_lines, (unique, 0x1780, 4) INT_ADD (const, 0x13b84, 4) , (const, 0x8, 4)
do_after_lines, (register, 0x68, 1) COPY (register, 0x62, 1)
do_after_lines, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x50, 4)
do_after_lines, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x50, 4)
do_after_lines, (register, 0x50, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x50, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x2e80, 4) INT_RIGHT (const, 0x24, 4) , (const, 0x1f, 4)
do_after_lines, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
do_after_lines, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
do_after_lines, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
do_after_lines, (register, 0x66, 1) INT_LESSEQUAL (const, 0x24, 4) , (register, 0x54, 4)
do_after_lines, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x24, 4)
do_after_lines, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x24, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x13cc4, 4)
do_after_lines, (register, 0x38, 4) COPY (register, 0x28, 4)
do_after_lines, (register, 0x68, 1) COPY (register, 0x62, 1)
do_after_lines, (register, 0x66, 1) INT_LESSEQUAL (register, 0x30, 4) , (register, 0x28, 4)
do_after_lines, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x30, 4)
do_after_lines, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x30, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x62, 1) COPY (register, 0x66, 1)
do_after_lines, (register, 0x61, 1) COPY (register, 0x65, 1)
do_after_lines, (register, 0x60, 1) COPY (register, 0x64, 1)
do_after_lines, (register, 0x63, 1) COPY (register, 0x67, 1)
do_after_lines, (register, 0x40, 4) COPY (register, 0x2c, 4)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
do_after_lines,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
do_after_lines, (unique, 0x8480, 4) INT_ADD (register, 0x50, 4) , (register, 0x24, 4)
do_after_lines, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
do_after_lines,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
do_after_lines,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
do_after_lines, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
do_after_lines, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
do_after_lines,  ---  CBRANCH (ram, 0x13c90, 4) , (unique, 0x2080, 1)
do_after_lines, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (const, 0x13cc8, 4)
do_after_lines, (unique, 0x1780, 4) INT_ADD (const, 0x13bb8, 4) , (const, 0x8, 4)
do_after_lines, (register, 0x68, 1) COPY (register, 0x62, 1)
do_after_lines, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x44, 4)
do_after_lines, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x44, 4)
do_after_lines, (register, 0x44, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x44, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x44, 4) , (const, 0x1c, 4)
do_after_lines, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
do_after_lines, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
do_after_lines, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
do_after_lines, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
do_after_lines, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
do_after_lines, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
do_after_lines, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x62, 1) COPY (register, 0x66, 1)
do_after_lines, (register, 0x61, 1) COPY (register, 0x65, 1)
do_after_lines, (register, 0x60, 1) COPY (register, 0x64, 1)
do_after_lines, (register, 0x63, 1) COPY (register, 0x67, 1)
do_after_lines, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
do_after_lines, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
do_after_lines,  ---  CBRANCH (ram, 0x13c90, 4) , (unique, 0x2600, 1)
do_after_lines, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x13ccc, 4)
do_after_lines, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
do_after_lines, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
do_after_lines, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
do_after_lines, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
do_after_lines, (register, 0x34, 4) COPY (const, 0x1, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x66, 1) COPY (register, 0x68, 1)
do_after_lines, (register, 0x67, 1) COPY (register, 0x63, 1)
do_after_lines, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x13cd0, 4)
do_after_lines, (unique, 0x1780, 4) INT_ADD (const, 0x13bd4, 4) , (const, 0x8, 4)
do_after_lines, (register, 0x68, 1) COPY (register, 0x62, 1)
do_after_lines, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
do_after_lines, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
do_after_lines, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
do_after_lines,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
do_after_lines, (unique, 0x8480, 4) INT_ADD (register, 0x50, 4) , (register, 0x2c, 4)
do_after_lines, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
do_after_lines, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
do_after_lines, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
do_after_lines, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
do_after_lines, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
do_after_lines, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x18, 4)
do_after_lines, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x18, 4)
do_after_lines, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
do_after_lines,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
do_after_lines, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x13cd4, 4)
do_after_lines, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (const, 0x13cd8, 4)
do_after_lines, (unique, 0x1780, 4) INT_ADD (const, 0x13bf0, 4) , (const, 0x8, 4)
do_after_lines, (register, 0x68, 1) COPY (register, 0x62, 1)
do_after_lines, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
do_after_lines, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
do_after_lines, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
do_after_lines,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
do_after_lines, (unique, 0x1780, 4) INT_ADD (const, 0x13bf8, 4) , (const, 0x8, 4)
do_after_lines, (register, 0x68, 1) COPY (register, 0x62, 1)
do_after_lines, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x48, 4)
do_after_lines, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x48, 4)
do_after_lines, (register, 0x48, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x48, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
do_after_lines,  ---  BRANCH (ram, 0x13c48, 4)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
do_after_lines, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
do_after_lines, (register, 0x24, 4) COPY (register, 0x38, 4)
do_after_lines, (register, 0x20, 4) COPY (register, 0x30, 4)
do_after_lines, (register, 0x58, 4) COPY (const, 0x13c10, 4)
do_after_lines,  ---  CALL (ram, 0x134e4, 4)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
do_after_lines, (register, 0x4c, 4) COPY (register, 0x20, 4)
do_after_lines, (register, 0x68, 1) COPY (register, 0x62, 1)
do_after_lines, (register, 0x66, 1) INT_LESSEQUAL (register, 0x30, 4) , (register, 0x4c, 4)
do_after_lines, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (register, 0x30, 4)
do_after_lines, (register, 0x28, 4) INT_SUB (register, 0x4c, 4) , (register, 0x30, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x20, 4) COPY (register, 0x30, 4)
do_after_lines, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
do_after_lines, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
do_after_lines, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
do_after_lines, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
do_after_lines, (register, 0x24, 4) COPY (const, 0x1, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x66, 1) COPY (register, 0x68, 1)
do_after_lines, (register, 0x67, 1) COPY (register, 0x63, 1)
do_after_lines, (register, 0x58, 4) COPY (const, 0x13c28, 4)
do_after_lines,  ---  CALL (ram, 0x11410, 4)
do_after_lines, (register, 0x68, 1) COPY (register, 0x62, 1)
do_after_lines, (register, 0x66, 1) INT_LESSEQUAL (register, 0x4c, 4) , (register, 0x38, 4)
do_after_lines, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x4c, 4)
do_after_lines, (unique, 0x3ba80, 4) INT_SUB (register, 0x38, 4) , (register, 0x4c, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x62, 1) COPY (register, 0x66, 1)
do_after_lines, (register, 0x61, 1) COPY (register, 0x65, 1)
do_after_lines, (register, 0x60, 1) COPY (register, 0x64, 1)
do_after_lines, (register, 0x63, 1) COPY (register, 0x67, 1)
do_after_lines, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
do_after_lines, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
do_after_lines,  ---  CBRANCH (ram, 0x13c90, 4) , (unique, 0x2080, 1)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x1c, 4)
do_after_lines, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
do_after_lines, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
do_after_lines, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
do_after_lines, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
do_after_lines, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
do_after_lines, (register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (const, 0x1, 4)
do_after_lines, (register, 0x67, 1) INT_SCARRY (register, 0x34, 4) , (const, 0x1, 4)
do_after_lines, (register, 0x28, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x68, 1) COPY (register, 0x62, 1)
do_after_lines, (register, 0x66, 1) INT_LESSEQUAL (register, 0x34, 4) , (register, 0x2c, 4)
do_after_lines, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x34, 4)
do_after_lines, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x34, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x62, 1) COPY (register, 0x66, 1)
do_after_lines, (register, 0x61, 1) COPY (register, 0x65, 1)
do_after_lines, (register, 0x60, 1) COPY (register, 0x64, 1)
do_after_lines, (register, 0x63, 1) COPY (register, 0x67, 1)
do_after_lines, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
do_after_lines, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
do_after_lines,  ---  CBRANCH (ram, 0x13c90, 4) , (unique, 0x2600, 1)
do_after_lines, (register, 0x34, 4) COPY (register, 0x28, 4)
do_after_lines, (register, 0x30, 4) COPY (register, 0x4c, 4)
do_after_lines, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
do_after_lines, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
do_after_lines, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
do_after_lines, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
do_after_lines, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
do_after_lines, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x62, 1) COPY (register, 0x66, 1)
do_after_lines, (register, 0x61, 1) COPY (register, 0x65, 1)
do_after_lines, (register, 0x60, 1) COPY (register, 0x64, 1)
do_after_lines, (register, 0x63, 1) COPY (register, 0x67, 1)
do_after_lines,  ---  CBRANCH (ram, 0x13c64, 4) , (register, 0x61, 1)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
do_after_lines, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
do_after_lines, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
do_after_lines, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
do_after_lines, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
do_after_lines, (register, 0x24, 4) COPY (const, 0x1, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x66, 1) COPY (register, 0x68, 1)
do_after_lines, (register, 0x67, 1) COPY (register, 0x63, 1)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
do_after_lines, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
do_after_lines, (register, 0x2c, 4) COPY (register, 0x40, 4)
do_after_lines, (register, 0x58, 4) COPY (const, 0x13c64, 4)
do_after_lines,  ---  CALL (ram, 0x1150c, 4)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x44, 4) , (const, 0x20, 4)
do_after_lines, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
do_after_lines, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
do_after_lines, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
do_after_lines, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
do_after_lines, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
do_after_lines, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
do_after_lines, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x62, 1) COPY (register, 0x66, 1)
do_after_lines, (register, 0x61, 1) COPY (register, 0x65, 1)
do_after_lines, (register, 0x60, 1) COPY (register, 0x64, 1)
do_after_lines, (register, 0x63, 1) COPY (register, 0x67, 1)
do_after_lines,  ---  CBRANCH (ram, 0x13c00, 4) , (register, 0x61, 1)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
do_after_lines, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
do_after_lines, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
do_after_lines, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
do_after_lines, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
do_after_lines, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
do_after_lines, (register, 0x24, 4) COPY (const, 0x1, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x66, 1) COPY (register, 0x68, 1)
do_after_lines, (register, 0x67, 1) COPY (register, 0x63, 1)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
do_after_lines, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
do_after_lines, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
do_after_lines, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
do_after_lines, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
do_after_lines, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
do_after_lines, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
do_after_lines, (register, 0x28, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
do_after_lines,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
do_after_lines, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
do_after_lines, (register, 0x58, 4) COPY (const, 0x13c8c, 4)
do_after_lines,  ---  CALL (ram, 0x1150c, 4)
do_after_lines,  ---  BRANCH (ram, 0x13c00, 4)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
do_after_lines, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
do_after_lines, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
do_after_lines, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
do_after_lines, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
do_after_lines, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
do_after_lines, (register, 0x28, 4) COPY (const, 0x1, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x66, 1) COPY (register, 0x68, 1)
do_after_lines, (register, 0x67, 1) COPY (register, 0x63, 1)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
do_after_lines, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
do_after_lines, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x13cdc, 4)
do_after_lines, (register, 0x68, 1) COPY (register, 0x62, 1)
do_after_lines, (register, 0x66, 1) INT_LESSEQUAL (register, 0x24, 4) , (register, 0x20, 4)
do_after_lines, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (register, 0x24, 4)
do_after_lines, (unique, 0x3ba80, 4) INT_SUB (register, 0x20, 4) , (register, 0x24, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x62, 1) COPY (register, 0x66, 1)
do_after_lines, (register, 0x61, 1) COPY (register, 0x65, 1)
do_after_lines, (register, 0x60, 1) COPY (register, 0x64, 1)
do_after_lines, (register, 0x63, 1) COPY (register, 0x67, 1)
do_after_lines, (unique, 0x1780, 4) INT_ADD (const, 0x13ca8, 4) , (const, 0x8, 4)
do_after_lines, (register, 0x68, 1) COPY (register, 0x62, 1)
do_after_lines, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
do_after_lines, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
do_after_lines, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x18, 4)
do_after_lines,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
do_after_lines, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
do_after_lines,  ---  CBRANCH (ram, 0x13cbc, 4) , (unique, 0x1a80, 1)
do_after_lines, (unique, 0x2e80, 4) INT_RIGHT (const, 0x24, 4) , (const, 0x1f, 4)
do_after_lines, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
do_after_lines, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
do_after_lines, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
do_after_lines, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
do_after_lines, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
do_after_lines, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x24, 4)
do_after_lines, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x24, 4)
do_after_lines, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
do_after_lines, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x80, 4) COPY (register, 0x54, 4)
do_after_lines, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
do_after_lines, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
do_after_lines, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
do_after_lines, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
do_after_lines, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
do_after_lines, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
do_after_lines, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
do_after_lines, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
do_after_lines, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
do_after_lines, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
do_after_lines, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
do_after_lines, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
do_after_lines, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
do_after_lines, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
do_after_lines, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
do_after_lines, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
do_after_lines, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
do_after_lines, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
do_after_lines, (register, 0x54, 4) COPY (register, 0x80, 4)
do_after_lines, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
do_after_lines, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
do_after_lines, (register, 0x69, 1) COPY (register, 0xb0, 1)
do_after_lines, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
do_after_lines,  ---  RETURN (register, 0x5c, 4)
do_after_lines, (register, 0x58, 4) COPY (const, 0x13cc0, 4)
do_after_lines,  ---  CALL (ram, 0x113ec, 4)
add_number, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
add_number,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
add_number, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
add_number,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
add_number, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
add_number,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
add_number, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
add_number,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
add_number, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
add_number, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
add_number, (register, 0x38, 4) COPY (register, 0x20, 4)
add_number, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (const, 0x13d4c, 4)
add_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8, 4) , (const, 0x1f, 4)
add_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
add_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
add_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
add_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
add_number, (register, 0x20, 4) COPY (const, 0x8, 4)
add_number, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
add_number, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
add_number, (register, 0x66, 1) COPY (register, 0x68, 1)
add_number, (register, 0x67, 1) COPY (register, 0x63, 1)
add_number, (register, 0x30, 4) COPY (register, 0x24, 4)
add_number, (register, 0x58, 4) COPY (const, 0x13cf8, 4)
add_number,  ---  CALL (ram, 0x1144c, 4)
add_number, (unique, 0x1780, 4) INT_ADD (const, 0x13cf8, 4) , (const, 0x8, 4)
add_number, (register, 0x68, 1) COPY (register, 0x62, 1)
add_number, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x34, 4)
add_number, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x34, 4)
add_number, (register, 0x34, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x34, 4)
add_number, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
add_number, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
add_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
add_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
add_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
add_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
add_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
add_number, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
add_number, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
add_number, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
add_number, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
add_number, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
add_number, (register, 0x62, 1) COPY (register, 0x66, 1)
add_number, (register, 0x61, 1) COPY (register, 0x65, 1)
add_number, (register, 0x60, 1) COPY (register, 0x64, 1)
add_number, (register, 0x63, 1) COPY (register, 0x67, 1)
add_number,  ---  CBRANCH (ram, 0x13d24, 4) , (register, 0x61, 1)
add_number, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
add_number,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
add_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
add_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
add_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
add_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
add_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
add_number, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
add_number, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
add_number, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
add_number, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
add_number, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
add_number, (register, 0x62, 1) COPY (register, 0x66, 1)
add_number, (register, 0x61, 1) COPY (register, 0x65, 1)
add_number, (register, 0x60, 1) COPY (register, 0x64, 1)
add_number, (register, 0x63, 1) COPY (register, 0x67, 1)
add_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
add_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
add_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
add_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
add_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
add_number, (register, 0x2c, 4) COPY (const, 0x0, 4)
add_number, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
add_number, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
add_number, (register, 0x66, 1) COPY (register, 0x68, 1)
add_number, (register, 0x67, 1) COPY (register, 0x63, 1)
add_number, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
add_number,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
add_number, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
add_number, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
add_number,  ---  CBRANCH (ram, 0x13d18, 4) , (unique, 0x2680, 1)
add_number, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
add_number, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
add_number, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
add_number, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
add_number,  ---  CBRANCH (ram, 0x13d1c, 4) , (unique, 0x2680, 1)
add_number, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
add_number,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
add_number, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
add_number, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
add_number,  ---  CBRANCH (ram, 0x13d20, 4) , (unique, 0x2680, 1)
add_number, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
add_number,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
add_number, (register, 0x80, 4) COPY (register, 0x54, 4)
add_number, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
add_number, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
add_number, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
add_number, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
add_number, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
add_number, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
add_number, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
add_number, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
add_number, (register, 0x54, 4) COPY (register, 0x80, 4)
add_number, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
add_number, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
add_number, (register, 0x69, 1) COPY (register, 0xb0, 1)
add_number, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
add_number,  ---  RETURN (register, 0x5c, 4)
add_number, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x13d50, 4)
add_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
add_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
add_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
add_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
add_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
add_number, (register, 0x24, 4) COPY (const, 0x1, 4)
add_number, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
add_number, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
add_number, (register, 0x66, 1) COPY (register, 0x68, 1)
add_number, (register, 0x67, 1) COPY (register, 0x63, 1)
add_number, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x13d54, 4)
add_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
add_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
add_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
add_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
add_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
add_number, (register, 0x28, 4) COPY (const, 0x18, 4)
add_number, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
add_number, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
add_number, (register, 0x66, 1) COPY (register, 0x68, 1)
add_number, (register, 0x67, 1) COPY (register, 0x63, 1)
add_number, (unique, 0x8480, 4) INT_ADD (register, 0x34, 4) , (register, 0x2c, 4)
add_number, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
add_number, (unique, 0x1780, 4) INT_ADD (const, 0x13d38, 4) , (const, 0x8, 4)
add_number, (register, 0x68, 1) COPY (register, 0x62, 1)
add_number, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
add_number, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
add_number, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
add_number, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
add_number, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
add_number, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
add_number, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
add_number, (register, 0x58, 4) COPY (const, 0x13d44, 4)
add_number,  ---  CALL (ram, 0x11410, 4)
add_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
add_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
add_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
add_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
add_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
add_number, (register, 0x20, 4) COPY (const, 0x2, 4)
add_number, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
add_number, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
add_number, (register, 0x66, 1) COPY (register, 0x68, 1)
add_number, (register, 0x67, 1) COPY (register, 0x63, 1)
add_number, (register, 0x58, 4) COPY (const, 0x13d4c, 4)
add_number,  ---  CALL (ram, 0x138e4, 4)
add_pattern, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
add_pattern,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
add_pattern, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
add_pattern,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
add_pattern, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
add_pattern,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
add_pattern, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
add_pattern,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
add_pattern, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
add_pattern,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
add_pattern, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
add_pattern,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x2c, 4)
add_pattern, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
add_pattern, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
add_pattern, (register, 0x38, 4) COPY (register, 0x20, 4)
add_pattern, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (const, 0x13e0c, 4)
add_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x10, 4) , (const, 0x1f, 4)
add_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
add_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
add_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
add_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
add_pattern, (register, 0x20, 4) COPY (const, 0x10, 4)
add_pattern, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
add_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
add_pattern, (register, 0x66, 1) COPY (register, 0x68, 1)
add_pattern, (register, 0x67, 1) COPY (register, 0x63, 1)
add_pattern, (register, 0x34, 4) COPY (register, 0x24, 4)
add_pattern, (register, 0x58, 4) COPY (const, 0x13d70, 4)
add_pattern,  ---  CALL (ram, 0x1144c, 4)
add_pattern, (unique, 0x1780, 4) INT_ADD (const, 0x13d70, 4) , (const, 0x8, 4)
add_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
add_pattern, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
add_pattern, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
add_pattern, (register, 0x3c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x3c, 4)
add_pattern, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
add_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
add_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
add_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
add_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
add_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
add_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
add_pattern, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
add_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
add_pattern, (register, 0x30, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
add_pattern, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
add_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
add_pattern, (register, 0x62, 1) COPY (register, 0x66, 1)
add_pattern, (register, 0x61, 1) COPY (register, 0x65, 1)
add_pattern, (register, 0x60, 1) COPY (register, 0x64, 1)
add_pattern, (register, 0x63, 1) COPY (register, 0x67, 1)
add_pattern,  ---  CBRANCH (ram, 0x13de4, 4) , (register, 0x61, 1)
add_pattern, (register, 0x20, 4) COPY (register, 0x38, 4)
add_pattern, (register, 0x58, 4) COPY (const, 0x13d84, 4)
add_pattern,  ---  CALL (ram, 0x114ac, 4)
add_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2000, 4) , (const, 0x1f, 4)
add_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
add_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
add_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
add_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
add_pattern, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2000, 4) , (register, 0x20, 4)
add_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x2000, 4)
add_pattern, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x2000, 4)
add_pattern, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
add_pattern, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
add_pattern, (register, 0x62, 1) COPY (register, 0x66, 1)
add_pattern, (register, 0x61, 1) COPY (register, 0x65, 1)
add_pattern, (register, 0x60, 1) COPY (register, 0x64, 1)
add_pattern, (register, 0x63, 1) COPY (register, 0x67, 1)
add_pattern, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
add_pattern, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
add_pattern,  ---  CBRANCH (ram, 0x13dbc, 4) , (unique, 0x1f00, 1)
add_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
add_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
add_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
add_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
add_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
add_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
add_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
add_pattern, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
add_pattern, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
add_pattern, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
add_pattern, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
add_pattern, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
add_pattern, (register, 0x62, 1) COPY (register, 0x66, 1)
add_pattern, (register, 0x61, 1) COPY (register, 0x65, 1)
add_pattern, (register, 0x60, 1) COPY (register, 0x64, 1)
add_pattern, (register, 0x63, 1) COPY (register, 0x67, 1)
add_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
add_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
add_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
add_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
add_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
add_pattern, (register, 0x2c, 4) COPY (const, 0x0, 4)
add_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
add_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
add_pattern, (register, 0x66, 1) COPY (register, 0x68, 1)
add_pattern, (register, 0x67, 1) COPY (register, 0x63, 1)
add_pattern, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
add_pattern, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
add_pattern,  ---  CBRANCH (ram, 0x13d9c, 4) , (unique, 0x2680, 1)
add_pattern, (register, 0x20, 4) COPY (register, 0x30, 4)
add_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
add_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
add_pattern, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
add_pattern,  ---  CBRANCH (ram, 0x13da4, 4) , (unique, 0x2680, 1)
add_pattern, (register, 0x20, 4) COPY (register, 0x30, 4)
add_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x8, 4)
add_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
add_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc, 4)
add_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
add_pattern, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
add_pattern, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
add_pattern,  ---  CBRANCH (ram, 0x13db0, 4) , (unique, 0x2680, 1)
add_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
add_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
add_pattern, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
add_pattern, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
add_pattern,  ---  CBRANCH (ram, 0x13db4, 4) , (unique, 0x2680, 1)
add_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
add_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
add_pattern, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
add_pattern, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
add_pattern,  ---  CBRANCH (ram, 0x13db8, 4) , (unique, 0x2680, 1)
add_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
add_pattern,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
add_pattern, (register, 0x80, 4) COPY (register, 0x54, 4)
add_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
add_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
add_pattern, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
add_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
add_pattern, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
add_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
add_pattern, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
add_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
add_pattern, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
add_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
add_pattern, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
add_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
add_pattern, (register, 0x54, 4) COPY (register, 0x80, 4)
add_pattern, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
add_pattern, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
add_pattern, (register, 0x69, 1) COPY (register, 0xb0, 1)
add_pattern, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
add_pattern,  ---  RETURN (register, 0x5c, 4)
add_pattern, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x13e10, 4)
add_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
add_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
add_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
add_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
add_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
add_pattern, (register, 0x24, 4) COPY (const, 0x1, 4)
add_pattern, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
add_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
add_pattern, (register, 0x66, 1) COPY (register, 0x68, 1)
add_pattern, (register, 0x67, 1) COPY (register, 0x63, 1)
add_pattern, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x13e14, 4)
add_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2000, 4) , (const, 0x1f, 4)
add_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
add_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
add_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
add_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
add_pattern, (register, 0x2c, 4) COPY (const, 0x2000, 4)
add_pattern, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
add_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
add_pattern, (register, 0x66, 1) COPY (register, 0x68, 1)
add_pattern, (register, 0x67, 1) COPY (register, 0x63, 1)
add_pattern, (unique, 0x8480, 4) INT_ADD (register, 0x3c, 4) , (register, 0x20, 4)
add_pattern, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
add_pattern, (unique, 0x1780, 4) INT_ADD (const, 0x13dd0, 4) , (const, 0x8, 4)
add_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
add_pattern, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
add_pattern, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
add_pattern, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
add_pattern, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
add_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
add_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
add_pattern, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
add_pattern, (register, 0x58, 4) COPY (const, 0x13ddc, 4)
add_pattern,  ---  CALL (ram, 0x1150c, 4)
add_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
add_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
add_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
add_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
add_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
add_pattern, (register, 0x20, 4) COPY (const, 0x0, 4)
add_pattern, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
add_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
add_pattern, (register, 0x66, 1) COPY (register, 0x68, 1)
add_pattern, (register, 0x67, 1) COPY (register, 0x63, 1)
add_pattern, (register, 0x80, 4) COPY (register, 0x54, 4)
add_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
add_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
add_pattern, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
add_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
add_pattern, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
add_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
add_pattern, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
add_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
add_pattern, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
add_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
add_pattern, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
add_pattern, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
add_pattern, (register, 0x54, 4) COPY (register, 0x80, 4)
add_pattern, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
add_pattern, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
add_pattern, (register, 0x69, 1) COPY (register, 0xb0, 1)
add_pattern, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
add_pattern,  ---  RETURN (register, 0x5c, 4)
add_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x13e10, 4)
add_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
add_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
add_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
add_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
add_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
add_pattern, (register, 0x24, 4) COPY (const, 0x1, 4)
add_pattern, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
add_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
add_pattern, (register, 0x66, 1) COPY (register, 0x68, 1)
add_pattern, (register, 0x67, 1) COPY (register, 0x63, 1)
add_pattern, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x13e18, 4)
add_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
add_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
add_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
add_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
add_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
add_pattern, (register, 0x28, 4) COPY (const, 0x18, 4)
add_pattern, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
add_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
add_pattern, (register, 0x66, 1) COPY (register, 0x68, 1)
add_pattern, (register, 0x67, 1) COPY (register, 0x63, 1)
add_pattern, (unique, 0x8480, 4) INT_ADD (register, 0x3c, 4) , (register, 0x2c, 4)
add_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
add_pattern, (unique, 0x1780, 4) INT_ADD (const, 0x13df8, 4) , (const, 0x8, 4)
add_pattern, (register, 0x68, 1) COPY (register, 0x62, 1)
add_pattern, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
add_pattern, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
add_pattern, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
add_pattern, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
add_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
add_pattern, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
add_pattern, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
add_pattern, (register, 0x58, 4) COPY (const, 0x13e04, 4)
add_pattern,  ---  CALL (ram, 0x11410, 4)
add_pattern, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
add_pattern, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
add_pattern, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
add_pattern, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
add_pattern, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
add_pattern, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
add_pattern, (register, 0x20, 4) COPY (const, 0x2, 4)
add_pattern, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
add_pattern, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
add_pattern, (register, 0x66, 1) COPY (register, 0x68, 1)
add_pattern, (register, 0x67, 1) COPY (register, 0x63, 1)
add_pattern, (register, 0x58, 4) COPY (const, 0x13e0c, 4)
add_pattern,  ---  CALL (ram, 0x138e4, 4)
pcregrep, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
pcregrep, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
pcregrep, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
pcregrep, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
pcregrep, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
pcregrep, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
pcregrep, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
pcregrep, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
pcregrep, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
pcregrep, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x21c, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x21c, 4) , (register, 0x54, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x21c, 4)
pcregrep, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x21c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
pcregrep, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (const, 0x14db0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x68, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x13e2c, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x48, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x48, 4)
pcregrep, (register, 0x48, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x48, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x14db4, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14db8, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x13e3c, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x5c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x48, 4) , (register, 0x24, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x34, 4)
pcregrep, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x60, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x38, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x50, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x214, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x13e64, 4)
pcregrep,  ---  CALL (ram, 0x11500, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x13e68, 4)
pcregrep,  ---  CALL (ram, 0x11578, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x142f8, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x50, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14300, 4) , (unique, 0x1a80, 1)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14dbc, 4)
pcregrep, (register, 0x20, 4) COPY (register, 0x44, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x13e88, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x5c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x13e98, 4)
pcregrep,  ---  CALL (ram, 0x1141c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14dc0, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x13ea0, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x3c, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x34, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x30, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x2, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x2, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x28, 4) INT_ADD (register, 0x20, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
pcregrep,  ---  CBRANCH (ram, 0x14578, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x400, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0xb, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xb, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x400, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x400, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x400, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x1b80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1b80, 1)
pcregrep,  ---  CBRANCH (ram, 0x13ecc, 4) , (unique, 0x2680, 1)
pcregrep, (register, 0x28, 4) COPY (register, 0x2c, 4)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep,  ---  CBRANCH (ram, 0x13ed0, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x400, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0xb, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xb, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x28, 4) COPY (const, 0x400, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x58, 4) COPY (const, 0x13ed4, 4)
pcregrep,  ---  CALL (ram, 0x11518, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x13edc, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14320, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x44, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x44, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x44, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x151f8, 4) , (register, 0x62, 1)
pcregrep, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14dc4, 4)
pcregrep, (register, 0x40, 4) COPY (register, 0x48, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14dc8, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x30, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x13efc, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x4c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x13f00, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x48, 4) COPY (register, 0x4c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x70, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x4c, 4) COPY (register, 0x44, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x3c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x6c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x44, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x64, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x7c, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x7c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x7c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x7c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x54, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x54, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x20, 4) COPY (register, 0x4c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x80, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x13f4c, 4)
pcregrep,  ---  CALL (ram, 0x134e4, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14dcc, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x4c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x24, 4) INT_SUB (register, 0x20, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x7c, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x13f58, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (register, 0x28, 4)
pcregrep, (register, 0x24, 4) INT_SUB (register, 0x24, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x40, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
pcregrep,  ---  CBRANCH (ram, 0x13f70, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x13f74, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
pcregrep,  ---  CBRANCH (ram, 0x13f78, 4) , (unique, 0x2680, 1)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x4c, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x13fa8, 4) , (unique, 0x1a80, 1)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14dd0, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14dd4, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x13f8c, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x13f90, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x34, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x20, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x151b0, 4) , (register, 0x61, 1)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14dd8, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x28, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ddc, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x88, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x88, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x88, 4)
pcregrep, (register, 0x24, 4) INT_ADD (register, 0x54, 4) , (const, 0x88, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (const, 0x14de0, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x13fbc, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) COPY (register, 0x28, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x13fc8, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
pcregrep, (register, 0x3c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x3c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x13fcc, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x44, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x44, 4)
pcregrep, (register, 0x44, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x44, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x80, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x80, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x80, 4)
pcregrep, (register, 0x24, 4) INT_ADD (register, 0x54, 4) , (const, 0x80, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x20, 4) COPY (register, 0x4c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x13ff8, 4)
pcregrep,  ---  CALL (ram, 0x13974, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x14, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x20, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14584, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x4, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x3, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x3, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14684, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x44, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x146dc, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x48, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x1468c, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x146e4, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x2, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x2, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14708, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x4c, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x1472c, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14874, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x1407c, 4) , (register, 0x61, 1)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ed8, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14de4, 4)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x40, 4) , (register, 0x20, 4)
pcregrep, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14070, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x1407c, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14de8, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14080, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x20, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14288, 4) , (unique, 0x1a80, 1)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14dec, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14094, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x50, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14254, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x54, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x142c0, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x58, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x141f4, 4) , (register, 0x61, 1)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14df0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x3c, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x140c4, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14df4, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x140d0, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14df8, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x140dc, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14dfc, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x140e8, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep,  ---  BRANCH (ram, 0x14140, 4)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x40, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x5c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x141a0, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x218, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x218, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x218, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x54, 4) , (const, 0x218, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
pcregrep, (unique, 0x3300, 4) INT_RIGHT (register, 0x3c, 4) , (unique, 0x3280, 4)
pcregrep, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
pcregrep, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3580, 4) INT_LEFT (register, 0x3c, 4) , (const, 0x2, 4)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (unique, 0x3580, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (unique, 0x3580, 4)
pcregrep, (register, 0x50, 4) INT_ADD (register, 0x2c, 4) , (unique, 0x3580, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pcregrep, (register, 0x28, 4) COPY (register, 0x34, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8380, 4) INT_ADD (register, 0x50, 4) , (const, 0xfffffe70, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x4c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x4c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x20, 4) INT_ADD (register, 0x4c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14124, 4)
pcregrep,  ---  CALL (ram, 0x11410, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x44, 4) , (const, 0x5c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14130, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x141c4, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x141e8, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x80, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
pcregrep,  ---  CBRANCH (ram, 0x14134, 4) , (unique, 0x2180, 1)
pcregrep, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x1, 4)
pcregrep, (unique, 0x3300, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x3280, 4)
pcregrep, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
pcregrep, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3580, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x3c, 4) COPY (unique, 0x3580, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x218, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x218, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x218, 4)
pcregrep, (register, 0x28, 4) INT_ADD (register, 0x54, 4) , (const, 0x218, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x3, 4)
pcregrep, (unique, 0x3300, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x3280, 4)
pcregrep, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
pcregrep, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3580, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x3, 4)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (unique, 0x3580, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (unique, 0x3580, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x28, 4) , (unique, 0x3580, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
pcregrep, (unique, 0x3300, 4) INT_RIGHT (register, 0x3c, 4) , (unique, 0x3280, 4)
pcregrep, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
pcregrep, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3580, 4) INT_LEFT (register, 0x3c, 4) , (const, 0x2, 4)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (unique, 0x3580, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (unique, 0x3580, 4)
pcregrep, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (unique, 0x3580, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8380, 4) INT_ADD (register, 0x2c, 4) , (const, 0xfffffe70, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
pcregrep, (unique, 0x8380, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffe74, 4)
pcregrep, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x34, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x34, 4) INT_SUB (register, 0x34, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
pcregrep, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
pcregrep,  ---  CBRANCH (ram, 0x14134, 4) , (unique, 0x2600, 1)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ed8, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x140f4, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x40, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x4, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14194, 4)
pcregrep,  ---  CALL (ram, 0x11584, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x5c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14104, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x8, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1b, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) COPY (const, 0x1b, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x58, 4) COPY (const, 0x141c0, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep,  ---  BRANCH (ram, 0x14104, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1b, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) COPY (const, 0x1b, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x58, 4) COPY (const, 0x141d8, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14140, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x30, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
pcregrep, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
pcregrep,  ---  CBRANCH (ram, 0x141f4, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x30, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
pcregrep,  ---  CBRANCH (ram, 0x14200, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x30, 4) INT_OR (register, 0x30, 4) , (const, 0x1, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0xff, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (unique, 0x6d500, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x1421c, 4) , (unique, 0x1a80, 1)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e00, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x1420c, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x20, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14230, 4) , (register, 0x61, 1)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ed8, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x20, 4) COPY (const, 0xa, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x40, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14230, 4)
pcregrep,  ---  CALL (ram, 0x1156c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e04, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14234, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x38, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x142ac, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x30, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x400, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0xb, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xb, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x28, 4) COPY (const, 0x400, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep,  ---  BRANCH (ram, 0x13fdc, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ed8, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x88, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8c, 4)
pcregrep, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x40, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (register, 0x2c, 4) COPY (register, 0x30, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e08, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x30, 4) , (register, 0x58, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x58, 4) , (register, 0x30, 4)
pcregrep, (register, 0x58, 4) INT_SUB (register, 0x58, 4) , (register, 0x30, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14278, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x58, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14284, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep,  ---  BRANCH (ram, 0x14230, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ed8, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e0c, 4)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x40, 4) , (register, 0x20, 4)
pcregrep, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14298, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x3c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x142a8, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep,  ---  BRANCH (ram, 0x14090, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ed8, 4)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x40, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x142bc, 4)
pcregrep,  ---  CALL (ram, 0x113a4, 4)
pcregrep,  ---  BRANCH (ram, 0x14244, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ed8, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x88, 4)
pcregrep, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8c, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x40, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x44, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x58, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x58, 4)
pcregrep, (register, 0x28, 4) INT_SUB (register, 0x28, 4) , (register, 0x58, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e10, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x58, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x58, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (register, 0x58, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x142ec, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x142f4, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep,  ---  BRANCH (ram, 0x14230, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x50, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e14, 4)
pcregrep, (register, 0x20, 4) COPY (register, 0x44, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x5c, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x1430c, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14318, 4)
pcregrep,  ---  CALL (ram, 0x138a0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
pcregrep,  ---  BRANCH (ram, 0x13e9c, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x30, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x1, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14558, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep,  ---  BRANCH (ram, 0x13ee0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x3c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x3c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x50, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x7c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x44, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x4c, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x4c, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x44, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep,  ---  CBRANCH (ram, 0x1465c, 4) , (register, 0x61, 1)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e18, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4c, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14368, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
pcregrep,  ---  CBRANCH (ram, 0x14624, 4) , (unique, 0x1f00, 1)
pcregrep, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e1c, 4)
pcregrep, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e20, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14380, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x38, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x38, 4)
pcregrep, (register, 0x38, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x38, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14384, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x34, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x34, 4)
pcregrep, (register, 0x34, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x34, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x8, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x34, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x1, 4)
pcregrep, (unique, 0x3300, 4) INT_RIGHT (register, 0x24, 4) , (unique, 0x3280, 4)
pcregrep, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
pcregrep, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3580, 4) INT_LEFT (register, 0x24, 4) , (const, 0x1, 4)
pcregrep, (register, 0x28, 4) COPY (unique, 0x3580, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x20, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (register, 0x20, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x4c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14470, 4) , (unique, 0x2080, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x1c, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
pcregrep, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
pcregrep,  ---  CBRANCH (ram, 0x143ac, 4) , (unique, 0x2680, 1)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x24, 4)
pcregrep, (register, 0x24, 4) INT_ADD (register, 0x2c, 4) , (register, 0x24, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
pcregrep, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
pcregrep,  ---  CBRANCH (ram, 0x143f8, 4) , (unique, 0x2600, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x24, 4)
pcregrep, (register, 0x24, 4) INT_ADD (register, 0x2c, 4) , (register, 0x24, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x143f8, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (register, 0x20, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x24, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x143f8, 4) , (unique, 0x2080, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x143e0, 4)
pcregrep,  ---  CALL (ram, 0x13b78, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x34, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x28, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x8, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x24, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x1, 4)
pcregrep, (unique, 0x3300, 4) INT_RIGHT (register, 0x28, 4) , (unique, 0x3280, 4)
pcregrep, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
pcregrep, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3580, 4) INT_LEFT (register, 0x28, 4) , (const, 0x1, 4)
pcregrep, (register, 0x28, 4) COPY (unique, 0x3580, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x20, 4) COPY (register, 0x2c, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14400, 4)
pcregrep,  ---  CALL (ram, 0x113bc, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e24, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x50, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14408, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x8, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x1, 4)
pcregrep, (unique, 0x3300, 4) INT_RIGHT (register, 0x28, 4) , (unique, 0x3280, 4)
pcregrep, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
pcregrep, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3580, 4) INT_LEFT (register, 0x28, 4) , (const, 0x1, 4)
pcregrep, (register, 0x34, 4) COPY (unique, 0x3580, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x4c, 4) INT_SUB (register, 0x4c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (register, 0x34, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (register, 0x34, 4)
pcregrep, (register, 0x20, 4) INT_ADD (register, 0x20, 4) , (register, 0x34, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x1487c, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x5c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x58, 4) COPY (const, 0x14430, 4)
pcregrep,  ---  CALL (ram, 0x1141c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e28, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14438, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x34, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (register, 0x34, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (register, 0x34, 4)
pcregrep, (register, 0x28, 4) INT_ADD (register, 0x20, 4) , (register, 0x34, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep,  ---  CBRANCH (ram, 0x14470, 4) , (register, 0x61, 1)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e2c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14460, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x8, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_SUB (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x4c, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1b80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep,  ---  CBRANCH (ram, 0x13f34, 4) , (unique, 0x1b80, 1)
pcregrep, (register, 0x48, 4) COPY (register, 0x40, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e30, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14484, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4c, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x144e0, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x48, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x15214, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
pcregrep,  ---  CBRANCH (ram, 0x144b0, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
pcregrep, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
pcregrep,  ---  CBRANCH (ram, 0x144c8, 4) , (unique, 0x2600, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x20, 4) COPY (register, 0x28, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x144c8, 4)
pcregrep,  ---  CALL (ram, 0x13b78, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e34, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x6c, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x144d0, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x18, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x2c, 4) INT_OR (register, 0x24, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x18, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e38, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x144e4, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x15228, 4) , (register, 0x61, 1)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e3c, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x144f8, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x48, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14558, 4) , (register, 0x61, 1)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e40, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x1450c, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x44, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14558, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x64, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x15280, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
pcregrep,  ---  CBRANCH (ram, 0x14534, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x15290, 4) , (unique, 0x1a80, 1)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ed8, 4)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x48, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e44, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x64, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14550, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14558, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x60, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x20, 4) COPY (register, 0x30, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x214, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x1527c, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x21c, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x21c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x21c, 4)
pcregrep, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x21c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
pcregrep, (register, 0x80, 4) COPY (register, 0x54, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
pcregrep, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
pcregrep, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
pcregrep, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
pcregrep, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
pcregrep, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
pcregrep, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
pcregrep, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
pcregrep, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
pcregrep, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
pcregrep, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
pcregrep, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
pcregrep, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
pcregrep, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
pcregrep, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
pcregrep, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
pcregrep, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
pcregrep, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
pcregrep, (register, 0x54, 4) COPY (register, 0x80, 4)
pcregrep, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
pcregrep, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x69, 1) COPY (register, 0xb0, 1)
pcregrep, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
pcregrep,  ---  RETURN (register, 0x5c, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep,  ---  BRANCH (ram, 0x13ee0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x3c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x34, 4) COPY (register, 0x20, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x3c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x2c, 4) COPY (register, 0x3c, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e48, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14598, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x40, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14334, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x14, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
pcregrep,  ---  CBRANCH (ram, 0x145b4, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14334, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8c, 4)
pcregrep, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x4c, 4) , (register, 0x34, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x4c, 4) , (register, 0x34, 4)
pcregrep, (register, 0x34, 4) INT_ADD (register, 0x4c, 4) , (register, 0x34, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x4c, 4) , (register, 0x34, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (register, 0x4c, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x34, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
pcregrep,  ---  CBRANCH (ram, 0x145c8, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x84, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x84, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x84, 4)
pcregrep, (register, 0x38, 4) INT_ADD (register, 0x54, 4) , (const, 0x84, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x145fc, 4) , (unique, 0x2080, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
pcregrep, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x20, 4) COPY (register, 0x4c, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x84, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x84, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x84, 4)
pcregrep, (register, 0x38, 4) INT_ADD (register, 0x54, 4) , (const, 0x84, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
pcregrep,  ---  BRANCH (ram, 0x145e4, 4)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14fc0, 4) , (unique, 0x2080, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x3c, 4) INT_ADD (register, 0x3c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x24, 4) COPY (register, 0x44, 4)
pcregrep, (register, 0x28, 4) COPY (register, 0x38, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x145f0, 4)
pcregrep,  ---  CALL (ram, 0x134e4, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x34, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (register, 0x20, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x34, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x145dc, 4) , (register, 0x62, 1)
pcregrep, (register, 0x2c, 4) COPY (register, 0x3c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x20, 4) COPY (register, 0x34, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x3c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x28, 4) COPY (register, 0x38, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14610, 4)
pcregrep,  ---  CALL (ram, 0x134e4, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x84, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x4c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x20, 4) INT_SUB (register, 0x20, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_SUB (register, 0x20, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep,  ---  BRANCH (ram, 0x14338, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e4c, 4)
pcregrep, (register, 0x20, 4) COPY (register, 0x4c, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x1462c, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x34, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x5c, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x4c, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x24, 4) INT_SUB (register, 0x24, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x24, 4)
pcregrep, (register, 0x24, 4) INT_ADD (register, 0x2c, 4) , (register, 0x24, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14644, 4)
pcregrep,  ---  CALL (ram, 0x138a0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e50, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4c, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14664, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14378, 4) , (unique, 0x2080, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x4c, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1b80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep,  ---  CBRANCH (ram, 0x13f34, 4) , (unique, 0x1b80, 1)
pcregrep,  ---  BRANCH (ram, 0x1447c, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x30, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep,  ---  BRANCH (ram, 0x14558, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x64, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x34, 4) COPY (register, 0x20, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x64, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e54, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x146a0, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x38, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14b84, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x3c, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x30, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x7c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (const, 0x1, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (const, 0x1, 4)
pcregrep, (register, 0x3c, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x3c, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x4c, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x4c, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x4c, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) COPY (register, 0x3c, 4)
pcregrep,  ---  BRANCH (ram, 0x14594, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x30, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep,  ---  BRANCH (ram, 0x14558, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ed8, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e58, 4)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x40, 4) , (register, 0x20, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x68, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x146f8, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14704, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep,  ---  BRANCH (ram, 0x14558, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ed8, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e5c, 4)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x40, 4) , (register, 0x20, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x1471c, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14728, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep,  ---  BRANCH (ram, 0x14558, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x1c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x34, 4) COPY (register, 0x20, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
pcregrep, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
pcregrep,  ---  CBRANCH (ram, 0x1488c, 4) , (unique, 0x2600, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x1488c, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x4c, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x15250, 4) , (unique, 0x2080, 1)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e60, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x44, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x84, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x84, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x84, 4)
pcregrep, (register, 0x38, 4) INT_ADD (register, 0x54, 4) , (const, 0x84, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) COPY (register, 0x2c, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14764, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x3c, 4) COPY (register, 0x28, 4)
pcregrep,  ---  BRANCH (ram, 0x1477c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x1c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x44, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x44, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x44, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
pcregrep,  ---  CBRANCH (ram, 0x14794, 4) , (unique, 0x2180, 1)
pcregrep, (register, 0x24, 4) COPY (register, 0x4c, 4)
pcregrep, (register, 0x28, 4) COPY (register, 0x38, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14788, 4)
pcregrep,  ---  CALL (ram, 0x134e4, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x4c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (register, 0x4c, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x20, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x44, 4) , (const, 0x1, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x44, 4) , (const, 0x1, 4)
pcregrep, (register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x1b80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep,  ---  CBRANCH (ram, 0x14770, 4) , (unique, 0x1b80, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x3c, 4) COPY (register, 0x20, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x20, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ed8, 4)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x15268, 4) , (unique, 0x2080, 1)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e64, 4)
pcregrep, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e68, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x147b0, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e6c, 4)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x40, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x147c0, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
pcregrep, (register, 0x34, 4) COPY (register, 0x2c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x74, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x48, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x40, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x147e0, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x44, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x44, 4)
pcregrep, (register, 0x44, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x44, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x4c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
pcregrep, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
pcregrep, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep,  ---  BRANCH (ram, 0x1482c, 4)
pcregrep, (register, 0x24, 4) COPY (register, 0x48, 4)
pcregrep, (register, 0x28, 4) COPY (register, 0x38, 4)
pcregrep, (register, 0x20, 4) COPY (register, 0x30, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14808, 4)
pcregrep,  ---  CALL (ram, 0x134e4, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x4c, 4) COPY (register, 0x20, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x30, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (register, 0x30, 4)
pcregrep, (register, 0x28, 4) INT_SUB (register, 0x4c, 4) , (register, 0x30, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) COPY (register, 0x30, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x58, 4) COPY (const, 0x14820, 4)
pcregrep,  ---  CALL (ram, 0x11410, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x3c, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (register, 0x3c, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x4c, 4) , (register, 0x3c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14b98, 4) , (register, 0x62, 1)
pcregrep, (register, 0x30, 4) COPY (register, 0x4c, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x40, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x40, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x40, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14848, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x2c, 4) COPY (register, 0x40, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14848, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x44, 4) , (const, 0x20, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x147f8, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x28, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14870, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep,  ---  BRANCH (ram, 0x147f8, 4)
pcregrep, (register, 0x34, 4) COPY (register, 0x20, 4)
pcregrep,  ---  BRANCH (ram, 0x1469c, 4)
pcregrep, (register, 0x24, 4) COPY (register, 0x28, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x5c, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14888, 4)
pcregrep,  ---  CALL (ram, 0x138a0, 4)
pcregrep,  ---  BRANCH (ram, 0x14430, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ed8, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x18, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x40, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x148ac, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14bcc, 4) , (unique, 0x1a80, 1)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e70, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x148b4, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x60, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
pcregrep, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
pcregrep,  ---  CBRANCH (ram, 0x14c0c, 4) , (unique, 0x2600, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x34, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x28, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x38, 4) COPY (register, 0x4c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
pcregrep, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0x1, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0x1, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
pcregrep, (register, 0x34, 4) COPY (register, 0x2c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x74, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
pcregrep, (register, 0x30, 4) COPY (register, 0x28, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x44, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x44, 4) , (const, 0x1, 4)
pcregrep, (register, 0x24, 4) INT_SUB (register, 0x44, 4) , (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x38, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x20, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x38, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14f9c, 4) , (unique, 0x2080, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x38, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x38, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
pcregrep,  ---  CBRANCH (ram, 0x14914, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x28, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1f00, 1)
pcregrep,  ---  CBRANCH (ram, 0x14918, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x28, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
pcregrep,  ---  CBRANCH (ram, 0x14920, 4) , (unique, 0x2680, 1)
pcregrep, (register, 0x2c, 4) COPY (register, 0x28, 4)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14924, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) INT_OR (register, 0x28, 4) , (const, 0x1, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x30, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (register, 0x30, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x24, 4) , (register, 0x30, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
pcregrep, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
pcregrep,  ---  CBRANCH (ram, 0x1492c, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
pcregrep, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
pcregrep,  ---  CBRANCH (ram, 0x14930, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) INT_AND (register, 0x2c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14d30, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x1, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x1, 4)
pcregrep, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
pcregrep,  ---  CBRANCH (ram, 0x14948, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14944, 4) , (const, 0x8, 4)
pcregrep, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
pcregrep, (unique, 0x3300, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x3280, 4)
pcregrep, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
pcregrep, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3580, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (unique, 0x3580, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (unique, 0x3580, 4)
pcregrep, (unique, 0x39680, 4) INT_ADD (unique, 0x1780, 4) , (unique, 0x3580, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x39680, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x39680, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x0, 4) INT_AND (unique, 0x39680, 4) , (const, 0x1, 4)
pcregrep, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
pcregrep, (register, 0x69, 1) COPY (register, 0xb0, 1)
pcregrep, (register, 0x5c, 4) INT_AND (unique, 0x39680, 4) , (const, 0xfffffffe, 4)
pcregrep,  ---  BRANCHIND (register, 0x5c, 4)
pcregrep,  ---  BRANCH (ram, 0x14b48, 4)
pcregrep,  ---  BRANCH (ram, 0x149b0, 4)
pcregrep,  ---  BRANCH (ram, 0x14974, 4)
pcregrep,  ---  BRANCH (ram, 0x149ec, 4)
pcregrep,  ---  BRANCH (ram, 0x149ec, 4)
pcregrep, (register, 0x38, 4) COPY (register, 0x2c, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x34, 4) , (register, 0x38, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x34, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x38, 4) , (register, 0x34, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x148f8, 4) , (unique, 0x2080, 1)
pcregrep, (unique, 0x8380, 4) INT_ADD (register, 0x38, 4) , (const, 0xfffffffe, 4)
pcregrep, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
pcregrep, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0xd, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0xd, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0xd, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0xd, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x148f8, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x38, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x2, 4)
pcregrep, (register, 0x2c, 4) INT_SUB (register, 0x38, 4) , (const, 0x2, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x1495c, 4) , (unique, 0x2080, 1)
pcregrep, (unique, 0x8380, 4) INT_ADD (register, 0x38, 4) , (const, 0xfffffffd, 4)
pcregrep, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
pcregrep, (register, 0x28, 4) INT_ZEXT (unique, 0x3ca00, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0xa, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0xa, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x1495c, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x38, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x3, 4)
pcregrep, (register, 0x2c, 4) INT_SUB (register, 0x38, 4) , (const, 0x3, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep,  ---  BRANCH (ram, 0x149a0, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0xffffffff, 4)
pcregrep, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (register, 0x2c, 4)
pcregrep, (register, 0x28, 4) INT_ZEXT (unique, 0x3ca00, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0xa, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0xa, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14960, 4) , (register, 0x61, 1)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (register, 0x38, 4) COPY (register, 0x2c, 4)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14994, 4) , (unique, 0x1a80, 1)
pcregrep,  ---  BRANCH (ram, 0x14960, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x38, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x1, 4)
pcregrep, (register, 0x2c, 4) INT_SUB (register, 0x38, 4) , (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14c04, 4) , (unique, 0x2080, 1)
pcregrep, (unique, 0x8380, 4) INT_ADD (register, 0x38, 4) , (const, 0xfffffffe, 4)
pcregrep, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
pcregrep, (register, 0x28, 4) INT_ZEXT (unique, 0x3ca00, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0xa, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0xa, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14c04, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x38, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x2, 4)
pcregrep, (register, 0x2c, 4) INT_SUB (register, 0x38, 4) , (const, 0x2, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep,  ---  BRANCH (ram, 0x149dc, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0xffffffff, 4)
pcregrep, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (register, 0x2c, 4)
pcregrep, (register, 0x28, 4) INT_ZEXT (unique, 0x3ca00, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0xa, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0xa, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x148f8, 4) , (register, 0x61, 1)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (register, 0x38, 4) COPY (register, 0x2c, 4)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x149d0, 4) , (unique, 0x1a80, 1)
pcregrep,  ---  BRANCH (ram, 0x148f8, 4)
pcregrep, (unique, 0x8380, 4) INT_ADD (register, 0x38, 4) , (const, 0xffffffff, 4)
pcregrep, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
pcregrep, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x38, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x1, 4)
pcregrep, (register, 0x28, 4) INT_SUB (register, 0x38, 4) , (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x20, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0xa, 4)
pcregrep, (register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (const, 0xa, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x2c, 4) CALLOTHER (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x3800, 4) INT_SUB (const, 0x5, 4) , (const, 0x1, 4)
pcregrep, (unique, 0x3880, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x3800, 4)
pcregrep, (unique, 0x3980, 4) INT_AND (unique, 0x3880, 4) , (const, 0x1, 4)
pcregrep, (register, 0x68, 1) SUBPIECE (unique, 0x3980, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b00, 4) INT_RIGHT (register, 0x2c, 4) , (const, 0x5, 4)
pcregrep, (register, 0x2c, 4) COPY (unique, 0x3b00, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
pcregrep,  ---  CBRANCH (ram, 0x14a08, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14a1c, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8380, 4) INT_ADD (register, 0x38, 4) , (const, 0xfffffffe, 4)
pcregrep, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
pcregrep, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0xd, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0xd, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0xd, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0xd, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14a1c, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x38, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x2, 4)
pcregrep, (register, 0x28, 4) INT_SUB (register, 0x38, 4) , (const, 0x2, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14a44, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) INT_AND (register, 0x2c, 4) , (const, 0xc0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x80, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x80, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x80, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x80, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14a44, 4) , (unique, 0x1a80, 1)
pcregrep, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffff, 4)
pcregrep, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (register, 0x28, 4)
pcregrep, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) INT_AND (register, 0x2c, 4) , (const, 0xc0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x80, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x80, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x80, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x80, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14a34, 4) , (register, 0x61, 1)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x20, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1f00, 1)
pcregrep,  ---  CBRANCH (ram, 0x14a4c, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
pcregrep, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1f00, 1)
pcregrep,  ---  CBRANCH (ram, 0x14a50, 4) , (unique, 0x2680, 1)
pcregrep, (register, 0x38, 4) COPY (register, 0x28, 4)
pcregrep, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1f00, 1)
pcregrep,  ---  CBRANCH (ram, 0x14a54, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x70, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
pcregrep,  ---  CBRANCH (ram, 0x14a88, 4) , (unique, 0x1f00, 1)
pcregrep,  ---  BRANCH (ram, 0x14b40, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4, 4) , (register, 0x44, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x44, 4) , (const, 0x4, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x44, 4) , (const, 0x4, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14b0c, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x85, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x85, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x85, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x85, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14b1c, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
pcregrep,  ---  CBRANCH (ram, 0x14b24, 4) , (unique, 0x1f00, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0xa, 4)
pcregrep, (register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (const, 0xa, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14b1c, 4) , (unique, 0x2080, 1)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x20, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14b3c, 4) , (unique, 0x2080, 1)
pcregrep, (register, 0x38, 4) COPY (register, 0x28, 4)
pcregrep, (unique, 0x8380, 4) INT_ADD (register, 0x38, 4) , (const, 0xffffffff, 4)
pcregrep, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
pcregrep, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x3c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x3c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x38, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x1, 4)
pcregrep, (register, 0x28, 4) INT_SUB (register, 0x38, 4) , (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep,  ---  CBRANCH (ram, 0x14a5c, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) INT_AND (register, 0x2c, 4) , (const, 0xc0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x80, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x80, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x80, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x80, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14ab4, 4) , (unique, 0x1a80, 1)
pcregrep, (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffff, 4)
pcregrep, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (register, 0x28, 4)
pcregrep, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) INT_AND (register, 0x2c, 4) , (const, 0xc0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x80, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x80, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x80, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x80, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14aa4, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0xbf, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0xbf, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0xbf, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0xbf, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14a5c, 4) , (unique, 0x2080, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3f, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) INT_AND (register, 0x2c, 4) , (const, 0x3f, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x30, 4) , (register, 0x24, 4)
pcregrep, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (register, 0x50, 4) INT_ZEXT (unique, 0x3ca00, 1)
pcregrep, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
pcregrep, (unique, 0x3300, 4) INT_RIGHT (register, 0x50, 4) , (unique, 0x3280, 4)
pcregrep, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
pcregrep, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3580, 4) INT_LEFT (register, 0x50, 4) , (const, 0x2, 4)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (unique, 0x3580, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (unique, 0x3580, 4)
pcregrep, (register, 0x58, 4) INT_ADD (register, 0x30, 4) , (unique, 0x3580, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x7100, 4) COPY (register, 0x50, 4)
pcregrep, (register, 0x24, 4) INT_SEXT (unique, 0x7100, 2)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x50, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x50, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x58, 4) , (const, 0x40, 4)
pcregrep, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x3, 4)
pcregrep, (unique, 0x3300, 4) INT_RIGHT (register, 0x24, 4) , (unique, 0x3280, 4)
pcregrep, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
pcregrep, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3580, 4) INT_LEFT (register, 0x24, 4) , (const, 0x3, 4)
pcregrep, (register, 0x50, 4) COPY (unique, 0x3580, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x2c, 4) INT_AND (register, 0x2c, 4) , (register, 0x58, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x1, 4)
pcregrep, (unique, 0x3300, 4) INT_RIGHT (register, 0x24, 4) , (unique, 0x3280, 4)
pcregrep, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
pcregrep, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3580, 4) INT_LEFT (register, 0x24, 4) , (const, 0x1, 4)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (unique, 0x3580, 4) , (register, 0x50, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (unique, 0x3580, 4)
pcregrep, (register, 0x24, 4) INT_SUB (register, 0x50, 4) , (unique, 0x3580, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x4a80, 4) INT_AND (register, 0x24, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x4b00, 4) INT_SUB (const, 0x20, 4) , (unique, 0x4a80, 4)
pcregrep, (unique, 0x4b80, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x4b00, 4)
pcregrep, (unique, 0x4c80, 4) INT_AND (unique, 0x4b80, 4) , (const, 0x1, 4)
pcregrep, (unique, 0x4d00, 1) INT_EQUAL (unique, 0x4a80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x4d80, 1) BOOL_AND (unique, 0x4d00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x4e00, 1) INT_NOTEQUAL (unique, 0x4a80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x4e80, 1) SUBPIECE (unique, 0x4c80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x4f00, 1) BOOL_AND (unique, 0x4e00, 1) , (unique, 0x4e80, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x4d80, 1) , (unique, 0x4f00, 1)
pcregrep, (unique, 0x5080, 4) INT_LEFT (register, 0x2c, 4) , (unique, 0x4a80, 4)
pcregrep, (register, 0x2c, 4) COPY (unique, 0x5080, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep,  ---  CBRANCH (ram, 0x14a5c, 4) , (register, 0x61, 1)
pcregrep, (register, 0x58, 4) COPY (register, 0x28, 4)
pcregrep, (register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0x1, 4)
pcregrep, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (register, 0x58, 4)
pcregrep, (register, 0x50, 4) INT_ZEXT (unique, 0x3ca00, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x6, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x6, 4)
pcregrep, (register, 0x24, 4) INT_SUB (register, 0x24, 4) , (const, 0x6, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3f, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x50, 4) INT_AND (register, 0x50, 4) , (const, 0x3f, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x4a80, 4) INT_AND (register, 0x24, 4) , (const, 0xff, 4)
pcregrep, (unique, 0x4b00, 4) INT_SUB (const, 0x20, 4) , (unique, 0x4a80, 4)
pcregrep, (unique, 0x4b80, 4) INT_RIGHT (register, 0x50, 4) , (unique, 0x4b00, 4)
pcregrep, (unique, 0x4c80, 4) INT_AND (unique, 0x4b80, 4) , (const, 0x1, 4)
pcregrep, (unique, 0x4d00, 1) INT_EQUAL (unique, 0x4a80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x4d80, 1) BOOL_AND (unique, 0x4d00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x4e00, 1) INT_NOTEQUAL (unique, 0x4a80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x4e80, 1) SUBPIECE (unique, 0x4c80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x4f00, 1) BOOL_AND (unique, 0x4e00, 1) , (unique, 0x4e80, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x4d80, 1) , (unique, 0x4f00, 1)
pcregrep, (unique, 0x5080, 4) INT_LEFT (register, 0x50, 4) , (unique, 0x4a80, 4)
pcregrep, (register, 0x2c, 4) INT_OR (register, 0x2c, 4) , (unique, 0x5080, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14aec, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4, 4) , (register, 0x44, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x44, 4) , (const, 0x4, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x44, 4) , (const, 0x4, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14a64, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0xa, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0xa, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14b1c, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0xd, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0xd, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0xd, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0xd, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14a7c, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep,  ---  BRANCH (ram, 0x148f8, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2000, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2000, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2000, 4)
pcregrep, (register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2000, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x28, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x28, 4)
pcregrep, (register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (const, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14b1c, 4) , (unique, 0x2080, 1)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x20, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
pcregrep,  ---  CBRANCH (ram, 0x14a84, 4) , (unique, 0x1f00, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x38, 4) COPY (register, 0x20, 4)
pcregrep,  ---  BRANCH (ram, 0x148f8, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x38, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x1, 4)
pcregrep, (register, 0x2c, 4) INT_SUB (register, 0x38, 4) , (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14c04, 4) , (unique, 0x2080, 1)
pcregrep, (unique, 0x8380, 4) INT_ADD (register, 0x38, 4) , (const, 0xfffffffe, 4)
pcregrep, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8380, 4)
pcregrep, (register, 0x28, 4) INT_ZEXT (unique, 0x3ca00, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0xa, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0xa, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14c04, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x38, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x2, 4)
pcregrep, (register, 0x2c, 4) INT_SUB (register, 0x38, 4) , (const, 0x2, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep,  ---  BRANCH (ram, 0x14b74, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0xffffffff, 4)
pcregrep, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (register, 0x2c, 4)
pcregrep, (register, 0x28, 4) INT_ZEXT (unique, 0x3ca00, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0xa, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0xa, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x148f8, 4) , (register, 0x61, 1)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (register, 0x38, 4) COPY (register, 0x2c, 4)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14b68, 4) , (unique, 0x1a80, 1)
pcregrep,  ---  BRANCH (ram, 0x148f8, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ed8, 4)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x40, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14b94, 4)
pcregrep,  ---  CALL (ram, 0x113a4, 4)
pcregrep,  ---  BRANCH (ram, 0x146b0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x4c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
pcregrep, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
pcregrep, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x74, 4)
pcregrep, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x4c, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x1519c, 4) , (register, 0x61, 1)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e74, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x28, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14bc4, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x18, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x28, 4) COPY (const, 0x3, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e78, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14be0, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
pcregrep, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14be8, 4)
pcregrep,  ---  CALL (ram, 0x11410, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e7c, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x28, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14bf0, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x18, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep,  ---  BRANCH (ram, 0x148b0, 4)
pcregrep, (register, 0x38, 4) COPY (register, 0x2c, 4)
pcregrep,  ---  BRANCH (ram, 0x148f8, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
pcregrep, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
pcregrep,  ---  CBRANCH (ram, 0x14c20, 4) , (unique, 0x2600, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x6c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14c44, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e80, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14c3c, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14c44, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e84, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14c48, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x20, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14d10, 4) , (unique, 0x1a80, 1)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e88, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14c5c, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x14, 4)
pcregrep, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x40, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x38, 4) CALLOTHER (const, 0x0, 4) , (register, 0x38, 4)
pcregrep, (unique, 0x3800, 4) INT_SUB (const, 0x5, 4) , (const, 0x1, 4)
pcregrep, (unique, 0x3880, 4) INT_RIGHT (register, 0x38, 4) , (unique, 0x3800, 4)
pcregrep, (unique, 0x3980, 4) INT_AND (unique, 0x3880, 4) , (const, 0x1, 4)
pcregrep, (register, 0x68, 1) SUBPIECE (unique, 0x3980, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b00, 4) INT_RIGHT (register, 0x38, 4) , (const, 0x5, 4)
pcregrep, (register, 0x38, 4) COPY (unique, 0x3b00, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (unique, 0x6d600, 4) INT_AND (register, 0x38, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x6d600, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x6d600, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14ccc, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8c, 4)
pcregrep, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x4c, 4) , (register, 0x3c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x4c, 4) , (register, 0x3c, 4)
pcregrep, (register, 0x3c, 4) INT_ADD (register, 0x4c, 4) , (register, 0x3c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14cc0, 4) , (register, 0x62, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
pcregrep, (register, 0x20, 4) COPY (register, 0x4c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
pcregrep, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x3c, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x54, 4)
pcregrep, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep,  ---  BRANCH (ram, 0x14ca0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x1, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x1, 4)
pcregrep, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x24, 4) COPY (register, 0x34, 4)
pcregrep, (register, 0x28, 4) COPY (register, 0x44, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14cac, 4)
pcregrep,  ---  CALL (ram, 0x134e4, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x3c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x3c, 4) , (register, 0x20, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x3c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
pcregrep,  ---  CBRANCH (ram, 0x14c9c, 4) , (unique, 0x1f00, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x3c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x4c, 4) , (register, 0x20, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x30, 4) INT_SUB (register, 0x20, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
pcregrep, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x7c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x30, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_SUB (register, 0x30, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e8c, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14cd0, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x5c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14ce0, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x38, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
pcregrep,  ---  CBRANCH (ram, 0x14ce4, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x38, 4) INT_AND (register, 0x38, 4) , (const, 0x1, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x38, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14fc8, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x7c, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x20, 4) COPY (register, 0x4c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
pcregrep, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x50, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x50, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (register, 0x50, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14d0c, 4)
pcregrep,  ---  CALL (ram, 0x11410, 4)
pcregrep,  ---  BRANCH (ram, 0x1469c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e90, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14d20, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x3c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14d2c, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep,  ---  BRANCH (ram, 0x14c58, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
pcregrep, (register, 0x3c, 4) COPY (register, 0x38, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x74, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) INT_XOR (register, 0x2c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
pcregrep, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2600, 1)
pcregrep,  ---  CBRANCH (ram, 0x14d54, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
pcregrep, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
pcregrep,  ---  CBRANCH (ram, 0x14d58, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) INT_AND (register, 0x2c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (unique, 0x6d600, 4) INT_AND (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x6d600, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x6d600, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x1516c, 4) , (unique, 0x1a80, 1)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x4c, 4) , (register, 0x38, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x4c, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x38, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14f78, 4) , (register, 0x62, 1)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e94, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x84, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x84, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x84, 4)
pcregrep, (register, 0x38, 4) INT_ADD (register, 0x54, 4) , (const, 0x84, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e98, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14d74, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14e9c, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14d80, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14d84, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
pcregrep, (register, 0x44, 4) COPY (register, 0x2c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x40, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
pcregrep, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x38, 4)
pcregrep, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x48, 4)
pcregrep,  ---  BRANCH (ram, 0x14f18, 4)
pcregrep, (register, 0x24, 4) COPY (register, 0x40, 4)
pcregrep, (register, 0x28, 4) COPY (register, 0x38, 4)
pcregrep, (register, 0x20, 4) COPY (register, 0x3c, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14ef4, 4)
pcregrep,  ---  CALL (ram, 0x134e4, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x48, 4) COPY (register, 0x20, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x3c, 4) , (register, 0x48, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x48, 4) , (register, 0x3c, 4)
pcregrep, (register, 0x28, 4) INT_SUB (register, 0x48, 4) , (register, 0x3c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) COPY (register, 0x3c, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x58, 4) COPY (const, 0x14f0c, 4)
pcregrep,  ---  CALL (ram, 0x11410, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x4c, 4) , (register, 0x48, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x48, 4) , (register, 0x4c, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x48, 4) , (register, 0x4c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14f68, 4) , (register, 0x62, 1)
pcregrep, (register, 0x3c, 4) COPY (register, 0x48, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14f34, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x2c, 4) COPY (register, 0x34, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14f34, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x44, 4) , (const, 0x20, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep,  ---  CBRANCH (ram, 0x14ee4, 4) , (register, 0x61, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x3c, 4)
pcregrep, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x28, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x24, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_SUB (register, 0x24, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x28, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x58, 4) COPY (const, 0x14f64, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep,  ---  BRANCH (ram, 0x14ee4, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x30, 4)
pcregrep, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x34, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
pcregrep, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ea0, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14f7c, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1c, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
pcregrep, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
pcregrep,  ---  CBRANCH (ram, 0x14c18, 4) , (unique, 0x2480, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x60, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
pcregrep, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
pcregrep,  ---  CBRANCH (ram, 0x14c18, 4) , (unique, 0x2480, 1)
pcregrep,  ---  BRANCH (ram, 0x14c20, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x3c, 4) COPY (register, 0x38, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x38, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x38, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
pcregrep, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
pcregrep,  ---  CBRANCH (ram, 0x14fb4, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x28, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x74, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep, (unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
pcregrep, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1f00, 1)
pcregrep,  ---  CBRANCH (ram, 0x14fbc, 4) , (unique, 0x2680, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x28, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep,  ---  BRANCH (ram, 0x14d40, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x3c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x3c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x3c, 4) , (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep,  ---  BRANCH (ram, 0x145fc, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x88, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x20, 4) COPY (register, 0x4c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x14fe0, 4)
pcregrep,  ---  CALL (ram, 0x11410, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ea4, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1b, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) COPY (const, 0x1b, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x14ff0, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x8, 4)
pcregrep, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ea8, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x15000, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x15008, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x88, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8c, 4)
pcregrep, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x4c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x4c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x20, 4) INT_ADD (register, 0x4c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0x50, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_SUB (register, 0x50, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x15024, 4)
pcregrep,  ---  CALL (ram, 0x11410, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14eac, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1b, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) COPY (const, 0x1b, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x15034, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x15040, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x7c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8c, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x30, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x30, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x2c, 4) , (register, 0x30, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
pcregrep, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
pcregrep,  ---  CBRANCH (ram, 0x15148, 4) , (unique, 0x2600, 1)
pcregrep, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14eb0, 4)
pcregrep, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (const, 0x14eb4, 4)
pcregrep, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (const, 0x14eb8, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x40, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x1506c, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
pcregrep, (register, 0x3c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x3c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
pcregrep, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x15074, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x38, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x38, 4)
pcregrep, (register, 0x38, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x38, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x48, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x1507c, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x44, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x44, 4)
pcregrep, (register, 0x44, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x44, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
pcregrep, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
pcregrep, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep,  ---  BRANCH (ram, 0x15108, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x88, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x4c, 4) , (register, 0x30, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x4c, 4) , (register, 0x30, 4)
pcregrep, (register, 0x20, 4) INT_ADD (register, 0x4c, 4) , (register, 0x30, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x30, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x30, 4)
pcregrep, (register, 0x28, 4) INT_SUB (register, 0x28, 4) , (register, 0x30, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x150a4, 4)
pcregrep,  ---  CALL (ram, 0x11410, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x8, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x28, 4) COPY (register, 0x3c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1b, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) COPY (const, 0x1b, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x58, 4) COPY (const, 0x150c0, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x88, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8c, 4)
pcregrep, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x4c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x4c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x20, 4) INT_ADD (register, 0x4c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0x50, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_SUB (register, 0x50, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x150dc, 4)
pcregrep,  ---  CALL (ram, 0x11410, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x28, 4) COPY (register, 0x44, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1b, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) COPY (const, 0x1b, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x58, 4) COPY (const, 0x150f0, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x7c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8c, 4)
pcregrep, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x30, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x3ba80, 4) INT_SUB (register, 0x30, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2180, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
pcregrep,  ---  CBRANCH (ram, 0x1518c, 4) , (unique, 0x2180, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x20, 4) COPY (register, 0x4c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x40, 4)
pcregrep, (register, 0x24, 4) COPY (register, 0x48, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x400, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0xb, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xb, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x28, 4) COPY (const, 0x400, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x2c, 4) COPY (register, 0x30, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x15128, 4)
pcregrep,  ---  CALL (ram, 0x13974, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x1508c, 4) , (unique, 0x1a80, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x7c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x40, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
pcregrep, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
pcregrep, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
pcregrep, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (register, 0x28, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (register, 0x30, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x30, 4)
pcregrep, (register, 0x28, 4) INT_SUB (register, 0x2c, 4) , (register, 0x30, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
pcregrep, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
pcregrep,  ---  CBRANCH (ram, 0x1469c, 4) , (unique, 0x2600, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (register, 0x4c, 4) , (register, 0x30, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (register, 0x4c, 4) , (register, 0x30, 4)
pcregrep, (register, 0x20, 4) INT_ADD (register, 0x4c, 4) , (register, 0x30, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x15168, 4)
pcregrep,  ---  CALL (ram, 0x11410, 4)
pcregrep,  ---  BRANCH (ram, 0x1469c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ebc, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x28, 4) COPY (const, 0x3, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x15180, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
pcregrep, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x15188, 4)
pcregrep,  ---  CALL (ram, 0x11410, 4)
pcregrep,  ---  BRANCH (ram, 0x14d60, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
pcregrep, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x24, 4)
pcregrep, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
pcregrep, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep,  ---  BRANCH (ram, 0x15148, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ec0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x4c, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x151a4, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x18, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep,  ---  BRANCH (ram, 0x148a4, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ec4, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x68, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x40, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep,  ---  CBRANCH (ram, 0x152b4, 4) , (register, 0x61, 1)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ec8, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x68, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x151d0, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ecc, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x30, 4) COPY (const, 0x2, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x151e8, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x3c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x151f4, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep,  ---  BRANCH (ram, 0x14558, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x2c, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x30, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x6c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x48, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x64, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep,  ---  BRANCH (ram, 0x14480, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ed0, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x15218, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x3, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x3, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x3, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14508, 4) , (unique, 0x1a80, 1)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ed8, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ed4, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x30, 4) COPY (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x48, 4) , (register, 0x20, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x15240, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x1524c, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep,  ---  BRANCH (ram, 0x14558, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ed8, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x40, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep,  ---  BRANCH (ram, 0x14bb0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x58, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x40, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x2c, 4)
pcregrep,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
pcregrep,  ---  BRANCH (ram, 0x14bbc, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x15280, 4)
pcregrep,  ---  CALL (ram, 0x113ec, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x64, 4)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
pcregrep, (register, 0x62, 1) COPY (register, 0x66, 1)
pcregrep, (register, 0x61, 1) COPY (register, 0x65, 1)
pcregrep, (register, 0x60, 1) COPY (register, 0x64, 1)
pcregrep, (register, 0x63, 1) COPY (register, 0x67, 1)
pcregrep, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
pcregrep,  ---  CBRANCH (ram, 0x14558, 4) , (unique, 0x1a80, 1)
pcregrep,  ---  BRANCH (ram, 0x14528, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ed8, 4)
pcregrep, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
pcregrep, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
pcregrep, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
pcregrep, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
pcregrep, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
pcregrep, (register, 0x24, 4) COPY (const, 0x1, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
pcregrep, (register, 0x66, 1) COPY (register, 0x68, 1)
pcregrep, (register, 0x67, 1) COPY (register, 0x63, 1)
pcregrep, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x14edc, 4)
pcregrep, (unique, 0x8480, 4) INT_ADD (register, 0x48, 4) , (register, 0x20, 4)
pcregrep, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x152a4, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
pcregrep, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
pcregrep, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
pcregrep, (register, 0x58, 4) COPY (const, 0x152b0, 4)
pcregrep,  ---  CALL (ram, 0x1150c, 4)
pcregrep,  ---  BRANCH (ram, 0x14540, 4)
pcregrep, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x14ee0, 4)
pcregrep, (unique, 0x1780, 4) INT_ADD (const, 0x152b8, 4) , (const, 0x8, 4)
pcregrep, (register, 0x68, 1) COPY (register, 0x62, 1)
pcregrep, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
pcregrep, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
pcregrep, (register, 0x28, 4) COPY (register, 0x2c, 4)
pcregrep,  ---  BRANCH (ram, 0x151d4, 4)
grep_or_recurse, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
grep_or_recurse,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
grep_or_recurse, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
grep_or_recurse,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
grep_or_recurse, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
grep_or_recurse,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
grep_or_recurse, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
grep_or_recurse,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
grep_or_recurse, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
grep_or_recurse,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
grep_or_recurse, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
grep_or_recurse,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
grep_or_recurse, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
grep_or_recurse,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
grep_or_recurse, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
grep_or_recurse,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
grep_or_recurse, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
grep_or_recurse,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
grep_or_recurse, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
grep_or_recurse, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x470, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x470, 4) , (register, 0x54, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x470, 4)
grep_or_recurse, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x470, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (const, 0x155bc, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4, 4) , (register, 0x54, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x4, 4)
grep_or_recurse, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x155c0, 4)
grep_or_recurse, (register, 0x44, 4) COPY (register, 0x24, 4)
grep_or_recurse, (unique, 0x1780, 4) INT_ADD (const, 0x152dc, 4) , (const, 0x8, 4)
grep_or_recurse, (register, 0x68, 1) COPY (register, 0x62, 1)
grep_or_recurse, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
grep_or_recurse, (register, 0x3c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x3c, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2f, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x24, 4) COPY (const, 0x2f, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x66, 1) COPY (register, 0x68, 1)
grep_or_recurse, (register, 0x67, 1) COPY (register, 0x63, 1)
grep_or_recurse, (register, 0x38, 4) COPY (register, 0x20, 4)
grep_or_recurse, (register, 0x4c, 4) COPY (register, 0x28, 4)
grep_or_recurse, (unique, 0x8480, 4) INT_ADD (register, 0x3c, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x10, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x10, 4)
grep_or_recurse, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x10, 4)
grep_or_recurse, (register, 0x34, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x46c, 4)
grep_or_recurse,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x15300, 4)
grep_or_recurse,  ---  CALL (ram, 0x11554, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (register, 0x28, 4) COPY (register, 0x34, 4)
grep_or_recurse, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x1530c, 4) , (unique, 0x2680, 1)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x30, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x24, 4) COPY (register, 0x38, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x20, 4) COPY (const, 0x3, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x66, 1) COPY (register, 0x68, 1)
grep_or_recurse, (register, 0x67, 1) COPY (register, 0x63, 1)
grep_or_recurse, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15318, 4) , (unique, 0x2680, 1)
grep_or_recurse, (register, 0x30, 4) COPY (register, 0x38, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x1531c, 4)
grep_or_recurse,  ---  CALL (ram, 0x11404, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x153d4, 4) , (unique, 0x2280, 1)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0xf000, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x2c, 4) INT_AND (register, 0x2c, 4) , (const, 0xf000, 4)
grep_or_recurse, (register, 0x66, 1) COPY (register, 0x68, 1)
grep_or_recurse, (register, 0x67, 1) COPY (register, 0x63, 1)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4000, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x9, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x9, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4000, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x4000, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x4000, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x153d4, 4) , (unique, 0x1a80, 1)
grep_or_recurse, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (const, 0x155c4, 4)
grep_or_recurse, (unique, 0x1780, 4) INT_ADD (const, 0x15338, 4) , (const, 0x8, 4)
grep_or_recurse, (register, 0x68, 1) COPY (register, 0x62, 1)
grep_or_recurse, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x48, 4)
grep_or_recurse, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x48, 4)
grep_or_recurse, (register, 0x48, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x48, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x68, 4)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15430, 4) , (register, 0x61, 1)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x6c, 4)
grep_or_recurse, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (register, 0x20, 4) COPY (register, 0x30, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x70, 4)
grep_or_recurse, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x15358, 4)
grep_or_recurse,  ---  CALL (ram, 0x137dc, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15430, 4) , (register, 0x61, 1)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x68, 4)
grep_or_recurse, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2, 4) , (register, 0x34, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x2, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x2, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x1548c, 4) , (register, 0x61, 1)
grep_or_recurse, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x155c8, 4)
grep_or_recurse, (register, 0x20, 4) COPY (register, 0x38, 4)
grep_or_recurse, (unique, 0x1780, 4) INT_ADD (const, 0x15374, 4) , (const, 0x8, 4)
grep_or_recurse, (register, 0x68, 1) COPY (register, 0x62, 1)
grep_or_recurse, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
grep_or_recurse, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
grep_or_recurse, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x1537c, 4)
grep_or_recurse,  ---  CALL (ram, 0x11398, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x30, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15438, 4) , (register, 0x61, 1)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x155cc, 4)
grep_or_recurse, (unique, 0x1780, 4) INT_ADD (const, 0x15388, 4) , (const, 0x8, 4)
grep_or_recurse, (register, 0x68, 1) COPY (register, 0x62, 1)
grep_or_recurse, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
grep_or_recurse, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
grep_or_recurse, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15398, 4) , (unique, 0x2680, 1)
grep_or_recurse, (register, 0x28, 4) COPY (register, 0x38, 4)
grep_or_recurse, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
grep_or_recurse, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15560, 4) , (unique, 0x2600, 1)
grep_or_recurse, (register, 0x24, 4) COPY (register, 0x38, 4)
grep_or_recurse, (register, 0x20, 4) COPY (register, 0x30, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x153a8, 4)
grep_or_recurse,  ---  CALL (ram, 0x13e1c, 4)
grep_or_recurse, (register, 0x34, 4) COPY (register, 0x20, 4)
grep_or_recurse, (register, 0x20, 4) COPY (register, 0x30, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x153b4, 4)
grep_or_recurse,  ---  CALL (ram, 0x11524, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x46c, 4)
grep_or_recurse, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (register, 0x20, 4) COPY (register, 0x34, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (register, 0x68, 1) COPY (register, 0x62, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x28, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x2c, 4)
grep_or_recurse, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x155b8, 4) , (unique, 0x1a80, 1)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x470, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0xe, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xe, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x470, 4)
grep_or_recurse, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x470, 4)
grep_or_recurse, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x470, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x4, 4)
grep_or_recurse, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x4, 4)
grep_or_recurse, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x80, 4) COPY (register, 0x54, 4)
grep_or_recurse, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
grep_or_recurse, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
grep_or_recurse, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
grep_or_recurse, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
grep_or_recurse, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
grep_or_recurse, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
grep_or_recurse, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
grep_or_recurse, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
grep_or_recurse, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
grep_or_recurse, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
grep_or_recurse, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
grep_or_recurse, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
grep_or_recurse, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
grep_or_recurse, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
grep_or_recurse, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
grep_or_recurse, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
grep_or_recurse, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
grep_or_recurse, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
grep_or_recurse, (register, 0x54, 4) COPY (register, 0x80, 4)
grep_or_recurse, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x69, 1) COPY (register, 0xb0, 1)
grep_or_recurse, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
grep_or_recurse,  ---  RETURN (register, 0x5c, 4)
grep_or_recurse, (register, 0x28, 4) COPY (register, 0x34, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x20, 4) COPY (const, 0x3, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x66, 1) COPY (register, 0x68, 1)
grep_or_recurse, (register, 0x67, 1) COPY (register, 0x63, 1)
grep_or_recurse, (register, 0x24, 4) COPY (register, 0x38, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x153e4, 4)
grep_or_recurse,  ---  CALL (ram, 0x11404, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15410, 4) , (unique, 0x2280, 1)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x20, 4)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0xf000, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x2c, 4) INT_AND (register, 0x2c, 4) , (const, 0xf000, 4)
grep_or_recurse, (register, 0x66, 1) COPY (register, 0x68, 1)
grep_or_recurse, (register, 0x67, 1) COPY (register, 0x63, 1)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x8000, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x9, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x9, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x8000, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x8000, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x8000, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15410, 4) , (register, 0x61, 1)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x155d0, 4)
grep_or_recurse, (unique, 0x1780, 4) INT_ADD (const, 0x15400, 4) , (const, 0x8, 4)
grep_or_recurse, (register, 0x68, 1) COPY (register, 0x62, 1)
grep_or_recurse, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x78, 4)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15430, 4) , (register, 0x61, 1)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x155d4, 4)
grep_or_recurse, (register, 0x20, 4) COPY (register, 0x30, 4)
grep_or_recurse, (unique, 0x1780, 4) INT_ADD (const, 0x15418, 4) , (const, 0x8, 4)
grep_or_recurse, (register, 0x68, 1) COPY (register, 0x62, 1)
grep_or_recurse, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x7c, 4)
grep_or_recurse, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x80, 4)
grep_or_recurse, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x15428, 4)
grep_or_recurse,  ---  CALL (ram, 0x137dc, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x1536c, 4) , (unique, 0x1a80, 1)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x34, 4) INT_NEGATE (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x66, 1) COPY (register, 0x68, 1)
grep_or_recurse, (register, 0x67, 1) COPY (register, 0x63, 1)
grep_or_recurse,  ---  BRANCH (ram, 0x153b4, 4)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x155d8, 4)
grep_or_recurse, (unique, 0x1780, 4) INT_ADD (const, 0x1543c, 4) , (const, 0x8, 4)
grep_or_recurse, (register, 0x68, 1) COPY (register, 0x62, 1)
grep_or_recurse, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x74, 4)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x1544c, 4) , (unique, 0x2680, 1)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x34, 4) COPY (const, 0x2, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x66, 1) COPY (register, 0x68, 1)
grep_or_recurse, (register, 0x67, 1) COPY (register, 0x63, 1)
grep_or_recurse, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x153b4, 4) , (unique, 0x1a80, 1)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x155dc, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x34, 4) COPY (const, 0x2, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x66, 1) COPY (register, 0x68, 1)
grep_or_recurse, (register, 0x67, 1) COPY (register, 0x63, 1)
grep_or_recurse, (unique, 0x8480, 4) INT_ADD (register, 0x3c, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x15464, 4)
grep_or_recurse,  ---  CALL (ram, 0x114d0, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x1546c, 4)
grep_or_recurse,  ---  CALL (ram, 0x11464, 4)
grep_or_recurse, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x155e0, 4)
grep_or_recurse, (register, 0x2c, 4) COPY (register, 0x38, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
grep_or_recurse,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x24, 4) COPY (const, 0x1, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x66, 1) COPY (register, 0x68, 1)
grep_or_recurse, (register, 0x67, 1) COPY (register, 0x63, 1)
grep_or_recurse, (unique, 0x1780, 4) INT_ADD (const, 0x1547c, 4) , (const, 0x8, 4)
grep_or_recurse, (register, 0x68, 1) COPY (register, 0x62, 1)
grep_or_recurse, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
grep_or_recurse, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
grep_or_recurse, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x20, 4) COPY (register, 0x30, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x15488, 4)
grep_or_recurse,  ---  CALL (ram, 0x1150c, 4)
grep_or_recurse,  ---  BRANCH (ram, 0x153b4, 4)
grep_or_recurse, (register, 0x20, 4) COPY (register, 0x38, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x15494, 4)
grep_or_recurse,  ---  CALL (ram, 0x11428, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x30, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15574, 4) , (register, 0x61, 1)
grep_or_recurse, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (const, 0x155e4, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x34, 4) COPY (const, 0x1, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x66, 1) COPY (register, 0x68, 1)
grep_or_recurse, (register, 0x67, 1) COPY (register, 0x63, 1)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x6c, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x6c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x6c, 4)
grep_or_recurse, (register, 0x3c, 4) INT_ADD (register, 0x54, 4) , (const, 0x6c, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x1780, 4) INT_ADD (const, 0x154a8, 4) , (const, 0x8, 4)
grep_or_recurse, (register, 0x68, 1) COPY (register, 0x62, 1)
grep_or_recurse, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x48, 4)
grep_or_recurse, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x48, 4)
grep_or_recurse, (register, 0x48, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x48, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x20, 4) COPY (register, 0x30, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x154b4, 4)
grep_or_recurse,  ---  CALL (ram, 0x11548, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x1551c, 4) , (register, 0x61, 1)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0xb, 4)
grep_or_recurse, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2e, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2e, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2e, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2e, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15528, 4) , (register, 0x61, 1)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
grep_or_recurse,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x38, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0xb, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0xb, 4)
grep_or_recurse, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0xb, 4)
grep_or_recurse, (register, 0x28, 4) INT_ADD (register, 0x20, 4) , (const, 0xb, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x8, 4)
grep_or_recurse,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2f, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x2c, 4) COPY (const, 0x2f, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x66, 1) COPY (register, 0x68, 1)
grep_or_recurse, (register, 0x67, 1) COPY (register, 0x63, 1)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
grep_or_recurse,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x24, 4) COPY (const, 0x1, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x66, 1) COPY (register, 0x68, 1)
grep_or_recurse, (register, 0x67, 1) COPY (register, 0x63, 1)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x400, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0xb, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xb, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x28, 4) COPY (const, 0x400, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x66, 1) COPY (register, 0x68, 1)
grep_or_recurse, (register, 0x67, 1) COPY (register, 0x63, 1)
grep_or_recurse, (register, 0x2c, 4) COPY (register, 0x48, 4)
grep_or_recurse, (register, 0x20, 4) COPY (register, 0x3c, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x154f0, 4)
grep_or_recurse,  ---  CALL (ram, 0x114dc, 4)
grep_or_recurse, (register, 0x20, 4) COPY (register, 0x3c, 4)
grep_or_recurse, (register, 0x24, 4) COPY (register, 0x44, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x28, 4) COPY (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x66, 1) COPY (register, 0x68, 1)
grep_or_recurse, (register, 0x67, 1) COPY (register, 0x63, 1)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x15500, 4)
grep_or_recurse,  ---  CALL (ram, 0x155ec, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x20, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x1, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
grep_or_recurse, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x1554c, 4) , (unique, 0x2600, 1)
grep_or_recurse, (register, 0x34, 4) COPY (register, 0x20, 4)
grep_or_recurse, (register, 0x20, 4) COPY (register, 0x30, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x15514, 4)
grep_or_recurse,  ---  CALL (ram, 0x11548, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x154bc, 4) , (unique, 0x1a80, 1)
grep_or_recurse, (register, 0x20, 4) COPY (register, 0x30, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x15524, 4)
grep_or_recurse,  ---  CALL (ram, 0x115a8, 4)
grep_or_recurse,  ---  BRANCH (ram, 0x153b4, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0xc, 4)
grep_or_recurse, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x154ac, 4) , (register, 0x61, 1)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2e, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2e, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x2e, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x2e, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x154c8, 4) , (unique, 0x1a80, 1)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0xd, 4)
grep_or_recurse, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x154ac, 4) , (register, 0x61, 1)
grep_or_recurse,  ---  BRANCH (ram, 0x154c8, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15554, 4) , (unique, 0x2680, 1)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x34, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x1, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15558, 4) , (unique, 0x2680, 1)
grep_or_recurse, (register, 0x20, 4) COPY (register, 0x34, 4)
grep_or_recurse, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x1555c, 4) , (unique, 0x2680, 1)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x20, 4) COPY (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x66, 1) COPY (register, 0x68, 1)
grep_or_recurse, (register, 0x67, 1) COPY (register, 0x63, 1)
grep_or_recurse,  ---  BRANCH (ram, 0x15508, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x4c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x4c, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x4c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15568, 4) , (unique, 0x2680, 1)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x1, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x1556c, 4) , (unique, 0x2680, 1)
grep_or_recurse, (register, 0x28, 4) COPY (register, 0x38, 4)
grep_or_recurse, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15570, 4) , (unique, 0x2680, 1)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x28, 4) COPY (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x66, 1) COPY (register, 0x68, 1)
grep_or_recurse, (register, 0x67, 1) COPY (register, 0x63, 1)
grep_or_recurse,  ---  BRANCH (ram, 0x1539c, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x48, 4) , (const, 0x74, 4)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x153b4, 4) , (unique, 0x1a80, 1)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x155dc, 4)
grep_or_recurse, (unique, 0x8480, 4) INT_ADD (register, 0x3c, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x15590, 4)
grep_or_recurse,  ---  CALL (ram, 0x114d0, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x15598, 4)
grep_or_recurse,  ---  CALL (ram, 0x11464, 4)
grep_or_recurse, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x155e8, 4)
grep_or_recurse, (register, 0x2c, 4) COPY (register, 0x38, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
grep_or_recurse,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x24, 4) COPY (const, 0x1, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x66, 1) COPY (register, 0x68, 1)
grep_or_recurse, (register, 0x67, 1) COPY (register, 0x63, 1)
grep_or_recurse, (unique, 0x1780, 4) INT_ADD (const, 0x155a8, 4) , (const, 0x8, 4)
grep_or_recurse, (register, 0x68, 1) COPY (register, 0x62, 1)
grep_or_recurse, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
grep_or_recurse, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
grep_or_recurse, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x20, 4) COPY (register, 0x30, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x155b4, 4)
grep_or_recurse,  ---  CALL (ram, 0x1150c, 4)
grep_or_recurse,  ---  BRANCH (ram, 0x153b4, 4)
grep_or_recurse, (register, 0x58, 4) COPY (const, 0x155bc, 4)
grep_or_recurse,  ---  CALL (ram, 0x113ec, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (register, 0x50, 4) INT_ZEXT (unique, 0x3ca00, 1)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15658, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2d, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x2d, 4) , (register, 0x50, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x2d, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x50, 4) , (const, 0x2d, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x1780, 4) INT_ADD (const, 0x155f8, 4) , (const, 0x8, 4)
grep_or_recurse, (register, 0x68, 1) COPY (register, 0x62, 1)
grep_or_recurse, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15640, 4) , (unique, 0x1a80, 1)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
grep_or_recurse, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (register, 0x50, 4) INT_ZEXT (unique, 0x3ca00, 1)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x50, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x50, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15640, 4) , (unique, 0x1a80, 1)
grep_or_recurse, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x1565c, 4)
grep_or_recurse, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x15660, 4)
grep_or_recurse, (unique, 0x1780, 4) INT_ADD (const, 0x15614, 4) , (const, 0x8, 4)
grep_or_recurse, (register, 0x68, 1) COPY (register, 0x62, 1)
grep_or_recurse, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
grep_or_recurse, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
grep_or_recurse, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x8480, 4) INT_ADD (register, 0x2c, 4) , (register, 0x24, 4)
grep_or_recurse, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
grep_or_recurse, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15664, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
grep_or_recurse, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (unique, 0x1780, 4) INT_ADD (const, 0x15624, 4) , (const, 0x8, 4)
grep_or_recurse, (register, 0x68, 1) COPY (register, 0x62, 1)
grep_or_recurse, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x50, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x1, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x50, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
grep_or_recurse, (unique, 0x2300, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse, (unique, 0x2380, 1) INT_EQUAL (register, 0x60, 1) , (register, 0x63, 1)
grep_or_recurse, (unique, 0x2480, 1) BOOL_AND (unique, 0x2300, 1) , (unique, 0x2380, 1)
grep_or_recurse, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2480, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15638, 4) , (unique, 0x2680, 1)
grep_or_recurse, (register, 0x28, 4) COPY (register, 0x24, 4)
grep_or_recurse, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
grep_or_recurse, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15644, 4) , (unique, 0x2600, 1)
grep_or_recurse,  ---  BRANCH (ram, 0x13e1c, 4)
grep_or_recurse,  ---  BRANCH (ram, 0x152c4, 4)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x28, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x1564c, 4) , (unique, 0x2680, 1)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x50, 4)
grep_or_recurse, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x1, 4)
grep_or_recurse, (unique, 0x3b980, 4) INT_SUB (register, 0x50, 4) , (const, 0x1, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x62, 1) COPY (register, 0x66, 1)
grep_or_recurse, (register, 0x61, 1) COPY (register, 0x65, 1)
grep_or_recurse, (register, 0x60, 1) COPY (register, 0x64, 1)
grep_or_recurse, (register, 0x63, 1) COPY (register, 0x67, 1)
grep_or_recurse, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15650, 4) , (unique, 0x2680, 1)
grep_or_recurse, (register, 0x28, 4) COPY (register, 0x24, 4)
grep_or_recurse, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
grep_or_recurse, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
grep_or_recurse,  ---  CBRANCH (ram, 0x15654, 4) , (unique, 0x2680, 1)
grep_or_recurse, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
grep_or_recurse, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
grep_or_recurse, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
grep_or_recurse, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
grep_or_recurse, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
grep_or_recurse, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
grep_or_recurse, (register, 0x28, 4) COPY (const, 0x0, 4)
grep_or_recurse, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
grep_or_recurse, (register, 0x66, 1) COPY (register, 0x68, 1)
grep_or_recurse, (register, 0x67, 1) COPY (register, 0x63, 1)
grep_or_recurse,  ---  BRANCH (ram, 0x1563c, 4)
usage, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
usage,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
usage, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
usage,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
usage, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
usage,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
usage, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
usage,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x2c, 4)
usage, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
usage, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
usage, (register, 0x24, 4) COPY (const, 0x1, 4)
usage, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
usage, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
usage, (register, 0x66, 1) COPY (register, 0x68, 1)
usage, (register, 0x67, 1) COPY (register, 0x63, 1)
usage, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15704, 4)
usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x12, 4) , (const, 0x1f, 4)
usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
usage, (register, 0x28, 4) COPY (const, 0x12, 4)
usage, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
usage, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
usage, (register, 0x66, 1) COPY (register, 0x68, 1)
usage, (register, 0x67, 1) COPY (register, 0x63, 1)
usage, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (const, 0x15708, 4)
usage, (unique, 0x1780, 4) INT_ADD (const, 0x1567c, 4) , (const, 0x8, 4)
usage, (register, 0x68, 1) COPY (register, 0x62, 1)
usage, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
usage, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
usage, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
usage, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
usage, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
usage, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (const, 0x1570c, 4)
usage, (unique, 0x8480, 4) INT_ADD (register, 0x2c, 4) , (register, 0x50, 4)
usage, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
usage, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x15710, 4)
usage, (unique, 0x1780, 4) INT_ADD (const, 0x1568c, 4) , (const, 0x8, 4)
usage, (register, 0x68, 1) COPY (register, 0x62, 1)
usage, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x30, 4)
usage, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x30, 4)
usage, (register, 0x30, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x30, 4)
usage, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
usage, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
usage, (unique, 0x1780, 4) INT_ADD (const, 0x15690, 4) , (const, 0x8, 4)
usage, (register, 0x68, 1) COPY (register, 0x62, 1)
usage, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
usage, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
usage, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
usage, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
usage, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
usage, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
usage, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
usage, (register, 0x58, 4) COPY (const, 0x1569c, 4)
usage,  ---  CALL (ram, 0x11410, 4)
usage, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
usage, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
usage, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
usage, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
usage, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
usage, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
usage, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
usage, (register, 0x62, 1) COPY (register, 0x66, 1)
usage, (register, 0x61, 1) COPY (register, 0x65, 1)
usage, (register, 0x60, 1) COPY (register, 0x64, 1)
usage, (register, 0x63, 1) COPY (register, 0x67, 1)
usage,  ---  CBRANCH (ram, 0x156cc, 4) , (register, 0x61, 1)
usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
usage, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0xc, 4)
usage, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0xc, 4)
usage, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0xc, 4)
usage, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
usage, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
usage, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
usage, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
usage, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
usage, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
usage, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
usage, (register, 0x62, 1) COPY (register, 0x66, 1)
usage, (register, 0x61, 1) COPY (register, 0x65, 1)
usage, (register, 0x60, 1) COPY (register, 0x64, 1)
usage, (register, 0x63, 1) COPY (register, 0x67, 1)
usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x14, 4) , (const, 0x1f, 4)
usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
usage, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x14, 4)
usage, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x14, 4)
usage, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x14, 4)
usage, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
usage, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
usage, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
usage, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
usage,  ---  CBRANCH (ram, 0x156c0, 4) , (unique, 0x2600, 1)
usage, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
usage, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
usage, (register, 0x58, 4) COPY (const, 0x156c0, 4)
usage,  ---  CALL (ram, 0x1156c, 4)
usage, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
usage, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
usage, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
usage, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
usage, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
usage, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
usage, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
usage, (register, 0x62, 1) COPY (register, 0x66, 1)
usage, (register, 0x61, 1) COPY (register, 0x65, 1)
usage, (register, 0x60, 1) COPY (register, 0x64, 1)
usage, (register, 0x63, 1) COPY (register, 0x67, 1)
usage, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
usage,  ---  CBRANCH (ram, 0x156ac, 4) , (unique, 0x1a80, 1)
usage, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x15714, 4)
usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
usage, (register, 0x24, 4) COPY (const, 0x1, 4)
usage, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
usage, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
usage, (register, 0x66, 1) COPY (register, 0x68, 1)
usage, (register, 0x67, 1) COPY (register, 0x63, 1)
usage, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
usage, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x23, 4) , (const, 0x1f, 4)
usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
usage, (register, 0x28, 4) COPY (const, 0x23, 4)
usage, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
usage, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
usage, (register, 0x66, 1) COPY (register, 0x68, 1)
usage, (register, 0x67, 1) COPY (register, 0x63, 1)
usage, (unique, 0x1780, 4) INT_ADD (const, 0x156dc, 4) , (const, 0x8, 4)
usage, (register, 0x68, 1) COPY (register, 0x62, 1)
usage, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
usage, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
usage, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
usage, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
usage, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
usage, (register, 0x58, 4) COPY (const, 0x156e4, 4)
usage,  ---  CALL (ram, 0x11410, 4)
usage, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x15718, 4)
usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
usage, (register, 0x24, 4) COPY (const, 0x1, 4)
usage, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
usage, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
usage, (register, 0x66, 1) COPY (register, 0x68, 1)
usage, (register, 0x67, 1) COPY (register, 0x63, 1)
usage, (unique, 0x8280, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
usage, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x42, 4) , (const, 0x1f, 4)
usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
usage, (register, 0x28, 4) COPY (const, 0x42, 4)
usage, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
usage, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
usage, (register, 0x66, 1) COPY (register, 0x68, 1)
usage, (register, 0x67, 1) COPY (register, 0x63, 1)
usage, (unique, 0x1780, 4) INT_ADD (const, 0x156f4, 4) , (const, 0x8, 4)
usage, (register, 0x68, 1) COPY (register, 0x62, 1)
usage, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
usage, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
usage, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
usage, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
usage, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
usage, (register, 0x58, 4) COPY (const, 0x156fc, 4)
usage,  ---  CALL (ram, 0x11410, 4)
usage, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
usage, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
usage, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
usage, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
usage, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
usage, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
usage, (register, 0x20, 4) COPY (const, 0x2, 4)
usage, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
usage, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
usage, (register, 0x66, 1) COPY (register, 0x68, 1)
usage, (register, 0x67, 1) COPY (register, 0x63, 1)
usage, (register, 0x80, 4) COPY (register, 0x54, 4)
usage, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
usage, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
usage, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
usage, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
usage, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
usage, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
usage, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
usage, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
usage, (register, 0x54, 4) COPY (register, 0x80, 4)
usage, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
usage, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
usage, (register, 0x69, 1) COPY (register, 0xb0, 1)
usage, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
usage,  ---  RETURN (register, 0x5c, 4)
decode_number, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
decode_number,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
decode_number, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
decode_number,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
decode_number, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
decode_number,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
decode_number, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
decode_number,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
decode_number, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
decode_number,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
decode_number, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
decode_number,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
decode_number, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
decode_number,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
decode_number, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
decode_number,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
decode_number, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
decode_number,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
decode_number, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
decode_number, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
decode_number, (register, 0x34, 4) COPY (register, 0x20, 4)
decode_number, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
decode_number, (register, 0x30, 4) INT_ZEXT (unique, 0x3ca00, 1)
decode_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
decode_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
decode_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
decode_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
decode_number, (register, 0x66, 1) INT_LESSEQUAL (const, 0xc, 4) , (register, 0x54, 4)
decode_number, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0xc, 4)
decode_number, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0xc, 4)
decode_number, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
decode_number, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (const, 0x15878, 4)
decode_number, (register, 0x3c, 4) COPY (register, 0x24, 4)
decode_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
decode_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
decode_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
decode_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
decode_number, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
decode_number, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
decode_number, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
decode_number, (register, 0x62, 1) COPY (register, 0x66, 1)
decode_number, (register, 0x61, 1) COPY (register, 0x65, 1)
decode_number, (register, 0x60, 1) COPY (register, 0x64, 1)
decode_number, (register, 0x63, 1) COPY (register, 0x67, 1)
decode_number, (register, 0x40, 4) COPY (register, 0x28, 4)
decode_number, (unique, 0x1780, 4) INT_ADD (const, 0x1573c, 4) , (const, 0x8, 4)
decode_number, (register, 0x68, 1) COPY (register, 0x62, 1)
decode_number, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x38, 4)
decode_number, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x38, 4)
decode_number, (register, 0x38, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x38, 4)
decode_number, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
decode_number, (register, 0x44, 4) COPY (register, 0x2c, 4)
decode_number,  ---  CBRANCH (ram, 0x157e0, 4) , (register, 0x61, 1)
decode_number, (register, 0x58, 4) COPY (const, 0x1574c, 4)
decode_number,  ---  CALL (ram, 0x11494, 4)
decode_number, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
decode_number, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
decode_number, (register, 0x4c, 4) COPY (register, 0x34, 4)
decode_number,  ---  BRANCH (ram, 0x15764, 4)
decode_number, (register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)
decode_number, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (register, 0x4c, 4)
decode_number, (register, 0x30, 4) INT_ZEXT (unique, 0x3ca00, 1)
decode_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
decode_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
decode_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
decode_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
decode_number, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
decode_number, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
decode_number, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
decode_number, (register, 0x62, 1) COPY (register, 0x66, 1)
decode_number, (register, 0x61, 1) COPY (register, 0x65, 1)
decode_number, (register, 0x60, 1) COPY (register, 0x64, 1)
decode_number, (register, 0x63, 1) COPY (register, 0x67, 1)
decode_number,  ---  CBRANCH (ram, 0x15778, 4) , (register, 0x61, 1)
decode_number, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x1, 4)
decode_number, (unique, 0x3300, 4) INT_RIGHT (register, 0x30, 4) , (unique, 0x3280, 4)
decode_number, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
decode_number, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3580, 4) INT_LEFT (register, 0x30, 4) , (const, 0x1, 4)
decode_number, (register, 0x30, 4) COPY (unique, 0x3580, 4)
decode_number, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
decode_number, (register, 0x66, 1) COPY (register, 0x68, 1)
decode_number, (register, 0x67, 1) COPY (register, 0x63, 1)
decode_number, (unique, 0x9380, 4) INT_ADD (register, 0x2c, 4) , (register, 0x30, 4)
decode_number, (unique, 0x3d180, 2) LOAD (const, 0x1a1, 8) , (unique, 0x9380, 4)
decode_number, (register, 0x28, 4) INT_ZEXT (unique, 0x3d180, 2)
decode_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2000, 4) , (const, 0x1f, 4)
decode_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
decode_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
decode_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
decode_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
decode_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
decode_number, (unique, 0x6d500, 4) INT_AND (register, 0x28, 4) , (const, 0x2000, 4)
decode_number, (register, 0x66, 1) COPY (register, 0x68, 1)
decode_number, (register, 0x67, 1) COPY (register, 0x63, 1)
decode_number, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
decode_number, (register, 0x62, 1) COPY (register, 0x66, 1)
decode_number, (register, 0x61, 1) COPY (register, 0x65, 1)
decode_number, (register, 0x60, 1) COPY (register, 0x64, 1)
decode_number, (register, 0x63, 1) COPY (register, 0x67, 1)
decode_number, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
decode_number,  ---  CBRANCH (ram, 0x15758, 4) , (unique, 0x1a80, 1)
decode_number, (unique, 0x8280, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
decode_number, (register, 0x30, 4) INT_ZEXT (unique, 0x3ca00, 1)
decode_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
decode_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
decode_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
decode_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
decode_number, (register, 0x50, 4) COPY (const, 0x0, 4)
decode_number, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
decode_number, (register, 0x66, 1) COPY (register, 0x68, 1)
decode_number, (register, 0x67, 1) COPY (register, 0x63, 1)
decode_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
decode_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
decode_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
decode_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
decode_number, (register, 0x24, 4) COPY (const, 0xa, 4)
decode_number, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
decode_number, (register, 0x66, 1) COPY (register, 0x68, 1)
decode_number, (register, 0x67, 1) COPY (register, 0x63, 1)
decode_number,  ---  BRANCH (ram, 0x15790, 4)
decode_number, (unique, 0x3e780, 4) INT_MULT (register, 0x24, 4) , (register, 0x50, 4)
decode_number, (register, 0x50, 4) INT_ADD (unique, 0x3e780, 4) , (register, 0x30, 4)
decode_number, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
decode_number, (register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)
decode_number, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (register, 0x4c, 4)
decode_number, (register, 0x30, 4) INT_ZEXT (unique, 0x3ca00, 1)
decode_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x30, 4) , (const, 0x1f, 4)
decode_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
decode_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
decode_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
decode_number, (register, 0x66, 1) INT_LESSEQUAL (const, 0x30, 4) , (register, 0x50, 4)
decode_number, (register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0x30, 4)
decode_number, (register, 0x50, 4) INT_SUB (register, 0x50, 4) , (const, 0x30, 4)
decode_number, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x1, 4)
decode_number, (unique, 0x3300, 4) INT_RIGHT (register, 0x30, 4) , (unique, 0x3280, 4)
decode_number, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
decode_number, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3580, 4) INT_LEFT (register, 0x30, 4) , (const, 0x1, 4)
decode_number, (register, 0x28, 4) COPY (unique, 0x3580, 4)
decode_number, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
decode_number, (register, 0x66, 1) COPY (register, 0x68, 1)
decode_number, (register, 0x67, 1) COPY (register, 0x63, 1)
decode_number, (unique, 0x9380, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
decode_number, (unique, 0x3d180, 2) LOAD (const, 0x1a1, 8) , (unique, 0x9380, 4)
decode_number, (register, 0x28, 4) INT_ZEXT (unique, 0x3d180, 2)
decode_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x800, 4) , (const, 0x1f, 4)
decode_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0xb, 1) , (const, 0x0, 1)
decode_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
decode_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xb, 1) , (const, 0x0, 1)
decode_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
decode_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
decode_number, (unique, 0x6d500, 4) INT_AND (register, 0x28, 4) , (const, 0x800, 4)
decode_number, (register, 0x66, 1) COPY (register, 0x68, 1)
decode_number, (register, 0x67, 1) COPY (register, 0x63, 1)
decode_number, (register, 0x64, 1) INT_SLESS (unique, 0x6d500, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (unique, 0x6d500, 4) , (const, 0x0, 4)
decode_number, (register, 0x62, 1) COPY (register, 0x66, 1)
decode_number, (register, 0x61, 1) COPY (register, 0x65, 1)
decode_number, (register, 0x60, 1) COPY (register, 0x64, 1)
decode_number, (register, 0x63, 1) COPY (register, 0x67, 1)
decode_number, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
decode_number,  ---  CBRANCH (ram, 0x15784, 4) , (unique, 0x1a80, 1)
decode_number, (register, 0x48, 4) COPY (register, 0x50, 4)
decode_number, (register, 0x58, 4) COPY (const, 0x157a8, 4)
decode_number,  ---  CALL (ram, 0x11470, 4)
decode_number, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
decode_number, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
decode_number, (unique, 0x7800, 4) INT_LEFT (register, 0x30, 4) , (const, 0x2, 4)
decode_number, (unique, 0x8480, 4) INT_ADD (register, 0x2c, 4) , (unique, 0x7800, 4)
decode_number, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
decode_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4b, 4) , (const, 0x1f, 4)
decode_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
decode_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
decode_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
decode_number, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4b, 4) , (register, 0x2c, 4)
decode_number, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x4b, 4)
decode_number, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x4b, 4)
decode_number, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
decode_number, (register, 0x62, 1) COPY (register, 0x66, 1)
decode_number, (register, 0x61, 1) COPY (register, 0x65, 1)
decode_number, (register, 0x60, 1) COPY (register, 0x64, 1)
decode_number, (register, 0x63, 1) COPY (register, 0x67, 1)
decode_number, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
decode_number,  ---  CBRANCH (ram, 0x157b8, 4) , (unique, 0x2680, 1)
decode_number, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0xa, 4)
decode_number, (unique, 0x3300, 4) INT_RIGHT (register, 0x48, 4) , (unique, 0x3280, 4)
decode_number, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
decode_number, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3580, 4) INT_LEFT (register, 0x48, 4) , (const, 0xa, 4)
decode_number, (register, 0x48, 4) COPY (unique, 0x3580, 4)
decode_number, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
decode_number, (register, 0x66, 1) COPY (register, 0x68, 1)
decode_number, (register, 0x67, 1) COPY (register, 0x63, 1)
decode_number, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
decode_number,  ---  CBRANCH (ram, 0x157bc, 4) , (unique, 0x2680, 1)
decode_number, (unique, 0x8280, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)
decode_number, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
decode_number, (register, 0x30, 4) INT_ZEXT (unique, 0x3ca00, 1)
decode_number,  ---  CBRANCH (ram, 0x157cc, 4) , (register, 0x61, 1)
decode_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4d, 4) , (const, 0x1f, 4)
decode_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
decode_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
decode_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
decode_number, (register, 0x66, 1) INT_LESSEQUAL (const, 0x4d, 4) , (register, 0x2c, 4)
decode_number, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x4d, 4)
decode_number, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x4d, 4)
decode_number, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
decode_number, (register, 0x62, 1) COPY (register, 0x66, 1)
decode_number, (register, 0x61, 1) COPY (register, 0x65, 1)
decode_number, (register, 0x60, 1) COPY (register, 0x64, 1)
decode_number, (register, 0x63, 1) COPY (register, 0x67, 1)
decode_number, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
decode_number,  ---  CBRANCH (ram, 0x157c8, 4) , (unique, 0x2680, 1)
decode_number, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x14, 4)
decode_number, (unique, 0x3300, 4) INT_RIGHT (register, 0x48, 4) , (unique, 0x3280, 4)
decode_number, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
decode_number, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3580, 4) INT_LEFT (register, 0x48, 4) , (const, 0x14, 4)
decode_number, (register, 0x48, 4) COPY (unique, 0x3580, 4)
decode_number, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
decode_number, (register, 0x66, 1) COPY (register, 0x68, 1)
decode_number, (register, 0x67, 1) COPY (register, 0x63, 1)
decode_number, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
decode_number,  ---  CBRANCH (ram, 0x157cc, 4) , (unique, 0x2680, 1)
decode_number, (unique, 0x8280, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)
decode_number, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
decode_number, (register, 0x30, 4) INT_ZEXT (unique, 0x3ca00, 1)
decode_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
decode_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
decode_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
decode_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
decode_number, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x30, 4)
decode_number, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3b980, 4) INT_SUB (register, 0x30, 4) , (const, 0x0, 4)
decode_number, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
decode_number, (register, 0x62, 1) COPY (register, 0x66, 1)
decode_number, (register, 0x61, 1) COPY (register, 0x65, 1)
decode_number, (register, 0x60, 1) COPY (register, 0x64, 1)
decode_number, (register, 0x63, 1) COPY (register, 0x67, 1)
decode_number, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
decode_number,  ---  CBRANCH (ram, 0x157f0, 4) , (unique, 0x1a80, 1)
decode_number, (register, 0x20, 4) COPY (register, 0x48, 4)
decode_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
decode_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
decode_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
decode_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
decode_number, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0xc, 4)
decode_number, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0xc, 4)
decode_number, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
decode_number, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
decode_number, (register, 0x80, 4) COPY (register, 0x54, 4)
decode_number, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
decode_number, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
decode_number, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
decode_number, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
decode_number, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
decode_number, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
decode_number, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
decode_number, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
decode_number, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
decode_number, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
decode_number, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
decode_number, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
decode_number, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
decode_number, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
decode_number, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
decode_number, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
decode_number, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
decode_number, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
decode_number, (register, 0x54, 4) COPY (register, 0x80, 4)
decode_number, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
decode_number, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
decode_number, (register, 0x69, 1) COPY (register, 0xb0, 1)
decode_number, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
decode_number,  ---  RETURN (register, 0x5c, 4)
decode_number, (register, 0x58, 4) COPY (const, 0x157e4, 4)
decode_number,  ---  CALL (ram, 0x11494, 4)
decode_number, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
decode_number, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
decode_number, (register, 0x4c, 4) COPY (register, 0x34, 4)
decode_number,  ---  BRANCH (ram, 0x15778, 4)
decode_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
decode_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
decode_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
decode_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
decode_number, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x44, 4)
decode_number, (register, 0x67, 1) INT_SBORROW (register, 0x44, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3b980, 4) INT_SUB (register, 0x44, 4) , (const, 0x0, 4)
decode_number, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
decode_number, (register, 0x62, 1) COPY (register, 0x66, 1)
decode_number, (register, 0x61, 1) COPY (register, 0x65, 1)
decode_number, (register, 0x60, 1) COPY (register, 0x64, 1)
decode_number, (register, 0x63, 1) COPY (register, 0x67, 1)
decode_number,  ---  CBRANCH (ram, 0x1584c, 4) , (register, 0x61, 1)
decode_number, (unique, 0x8280, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
decode_number, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
decode_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3d, 4) , (const, 0x1f, 4)
decode_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
decode_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
decode_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
decode_number, (register, 0x24, 4) COPY (const, 0x3d, 4)
decode_number, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
decode_number, (register, 0x66, 1) COPY (register, 0x68, 1)
decode_number, (register, 0x67, 1) COPY (register, 0x63, 1)
decode_number, (register, 0x20, 4) COPY (register, 0x30, 4)
decode_number, (register, 0x58, 4) COPY (const, 0x15808, 4)
decode_number,  ---  CALL (ram, 0x114b8, 4)
decode_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
decode_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
decode_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
decode_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
decode_number, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
decode_number, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
decode_number, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
decode_number, (register, 0x62, 1) COPY (register, 0x66, 1)
decode_number, (register, 0x61, 1) COPY (register, 0x65, 1)
decode_number, (register, 0x60, 1) COPY (register, 0x64, 1)
decode_number, (register, 0x63, 1) COPY (register, 0x67, 1)
decode_number, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
decode_number, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x1a80, 1)
decode_number,  ---  CBRANCH (ram, 0x15810, 4) , (unique, 0x2680, 1)
decode_number, (register, 0x68, 1) COPY (register, 0x62, 1)
decode_number, (register, 0x66, 1) INT_LESSEQUAL (register, 0x30, 4) , (register, 0x20, 4)
decode_number, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (register, 0x30, 4)
decode_number, (register, 0x20, 4) INT_SUB (register, 0x20, 4) , (register, 0x30, 4)
decode_number, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
decode_number, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
decode_number,  ---  CBRANCH (ram, 0x1581c, 4) , (unique, 0x1a80, 1)
decode_number, (register, 0x20, 4) COPY (register, 0x30, 4)
decode_number, (register, 0x58, 4) COPY (const, 0x1581c, 4)
decode_number,  ---  CALL (ram, 0x114ac, 4)
decode_number, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (const, 0x1587c, 4)
decode_number, (register, 0x2c, 4) COPY (register, 0x34, 4)
decode_number, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x15880, 4)
decode_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
decode_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
decode_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
decode_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
decode_number, (register, 0x24, 4) COPY (const, 0x1, 4)
decode_number, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
decode_number, (register, 0x66, 1) COPY (register, 0x68, 1)
decode_number, (register, 0x67, 1) COPY (register, 0x63, 1)
decode_number, (unique, 0x8480, 4) INT_ADD (register, 0x38, 4) , (register, 0x50, 4)
decode_number, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
decode_number, (unique, 0x1780, 4) INT_ADD (const, 0x15830, 4) , (const, 0x8, 4)
decode_number, (register, 0x68, 1) COPY (register, 0x62, 1)
decode_number, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
decode_number, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
decode_number, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
decode_number, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
decode_number, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
decode_number,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
decode_number, (unique, 0x8280, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
decode_number, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
decode_number, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
decode_number,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x30, 4)
decode_number, (register, 0x58, 4) COPY (const, 0x15844, 4)
decode_number,  ---  CALL (ram, 0x1150c, 4)
decode_number, (register, 0x58, 4) COPY (const, 0x15848, 4)
decode_number,  ---  CALL (ram, 0x15668, 4)
decode_number, (register, 0x58, 4) COPY (const, 0x1584c, 4)
decode_number,  ---  CALL (ram, 0x138e4, 4)
decode_number, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x1587c, 4)
decode_number, (register, 0x2c, 4) COPY (register, 0x34, 4)
decode_number, (unique, 0x8280, 4) INT_ADD (register, 0x3c, 4) , (const, 0x0, 4)
decode_number, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
decode_number, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
decode_number, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
decode_number, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
decode_number, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
decode_number, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
decode_number, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
decode_number, (register, 0x24, 4) COPY (const, 0x1, 4)
decode_number, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
decode_number, (register, 0x66, 1) COPY (register, 0x68, 1)
decode_number, (register, 0x67, 1) COPY (register, 0x63, 1)
decode_number, (unique, 0x8480, 4) INT_ADD (register, 0x38, 4) , (register, 0x28, 4)
decode_number, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
decode_number, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x15884, 4)
decode_number, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
decode_number, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
decode_number, (unique, 0x1780, 4) INT_ADD (const, 0x15868, 4) , (const, 0x8, 4)
decode_number, (register, 0x68, 1) COPY (register, 0x62, 1)
decode_number, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
decode_number, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
decode_number, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
decode_number, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
decode_number, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
decode_number, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
decode_number,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x50, 4)
decode_number, (register, 0x58, 4) COPY (const, 0x15874, 4)
decode_number,  ---  CALL (ram, 0x1150c, 4)
decode_number,  ---  BRANCH (ram, 0x15844, 4)
handle_option, (register, 0x50, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f24, 4)
handle_option, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f28, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15890, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x50, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x50, 4)
handle_option, (register, 0x50, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x50, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x50, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
handle_option, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
handle_option, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
handle_option, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
handle_option, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
handle_option, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
handle_option, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
handle_option, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
handle_option, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
handle_option, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
handle_option, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
handle_option, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x10, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x66, 1) INT_CARRY (register, 0x20, 4) , (const, 0x10, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (register, 0x20, 4) , (const, 0x10, 4)
handle_option, (register, 0x58, 4) INT_ADD (register, 0x20, 4) , (const, 0x10, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8480, 4) INT_ADD (register, 0x50, 4) , (register, 0x28, 4)
handle_option, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1c, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1c, 4) , (register, 0x54, 4)
handle_option, (register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x1c, 4)
handle_option, (register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x1c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
handle_option, (register, 0x34, 4) COPY (register, 0x24, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x88, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x66, 1) INT_LESSEQUAL (const, 0x88, 4) , (register, 0x58, 4)
handle_option, (register, 0x67, 1) INT_SBORROW (register, 0x58, 4) , (const, 0x88, 4)
handle_option, (unique, 0x3b980, 4) INT_SUB (register, 0x58, 4) , (const, 0x88, 4)
handle_option, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
handle_option, (register, 0x62, 1) COPY (register, 0x66, 1)
handle_option, (register, 0x61, 1) COPY (register, 0x65, 1)
handle_option, (register, 0x60, 1) COPY (register, 0x64, 1)
handle_option, (register, 0x63, 1) COPY (register, 0x67, 1)
handle_option, (unique, 0x1f80, 1) BOOL_NEGATE (register, 0x62, 1)
handle_option, (unique, 0x2080, 1) BOOL_OR (unique, 0x1f80, 1) , (register, 0x61, 1)
handle_option, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2080, 1)
handle_option,  ---  CBRANCH (ram, 0x158b8, 4) , (unique, 0x2680, 1)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x158b4, 4) , (const, 0x8, 4)
handle_option, (unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
handle_option, (unique, 0x3300, 4) INT_RIGHT (register, 0x58, 4) , (unique, 0x3280, 4)
handle_option, (unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
handle_option, (register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3580, 4) INT_LEFT (register, 0x58, 4) , (const, 0x2, 4)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (unique, 0x3580, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (unique, 0x3580, 4)
handle_option, (unique, 0x39680, 4) INT_ADD (unique, 0x1780, 4) , (unique, 0x3580, 4)
handle_option, (register, 0x64, 1) INT_SLESS (unique, 0x39680, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (unique, 0x39680, 4) , (const, 0x0, 4)
handle_option, (unique, 0x0, 4) INT_AND (unique, 0x39680, 4) , (const, 0x1, 4)
handle_option, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
handle_option, (register, 0x69, 1) COPY (register, 0xb0, 1)
handle_option, (register, 0x5c, 4) INT_AND (unique, 0x39680, 4) , (const, 0xfffffffe, 4)
handle_option,  ---  BRANCHIND (register, 0x5c, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e50, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e3c, 4)
handle_option,  ---  BRANCH (ram, 0x15e28, 4)
handle_option,  ---  BRANCH (ram, 0x15e10, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15cd4, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15cbc, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15ca8, 4)
handle_option,  ---  BRANCH (ram, 0x15c94, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15c80, 4)
handle_option,  ---  BRANCH (ram, 0x15c64, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15c34, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15c20, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15c0c, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15bf8, 4)
handle_option,  ---  BRANCH (ram, 0x15bf0, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15bcc, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15b78, 4)
handle_option,  ---  BRANCH (ram, 0x15b50, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15b3c, 4)
handle_option,  ---  BRANCH (ram, 0x15b28, 4)
handle_option,  ---  BRANCH (ram, 0x15ba4, 4)
handle_option,  ---  BRANCH (ram, 0x15e68, 4)
handle_option,  ---  BRANCH (ram, 0x15b8c, 4)
handle_option,  ---  BRANCH (ram, 0x15bb8, 4)
handle_option,  ---  BRANCH (ram, 0x15b10, 4)
handle_option,  ---  BRANCH (ram, 0x15ae0, 4)
handle_option, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f2c, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15ae4, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x88, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x2c, 4) INT_OR (register, 0x2c, 4) , (const, 0x2, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x88, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x14, 4)
handle_option, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
handle_option, (register, 0x20, 4) COPY (register, 0x34, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x28, 4)
handle_option, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (register, 0x2c, 4)
handle_option, (unique, 0x3ba80, 4) INT_SUB (register, 0x28, 4) , (register, 0x2c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
handle_option, (register, 0x62, 1) COPY (register, 0x66, 1)
handle_option, (register, 0x61, 1) COPY (register, 0x65, 1)
handle_option, (register, 0x60, 1) COPY (register, 0x64, 1)
handle_option, (register, 0x63, 1) COPY (register, 0x67, 1)
handle_option, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
handle_option,  ---  CBRANCH (ram, 0x15f20, 4) , (unique, 0x1a80, 1)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1c, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x1c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x1c, 4)
handle_option, (register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x1c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
handle_option, (register, 0x80, 4) COPY (register, 0x54, 4)
handle_option, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
handle_option, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
handle_option, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
handle_option, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
handle_option, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
handle_option, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
handle_option, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
handle_option, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
handle_option, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
handle_option, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
handle_option, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
handle_option, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
handle_option, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
handle_option, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
handle_option, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
handle_option, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
handle_option, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
handle_option, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
handle_option, (register, 0x54, 4) COPY (register, 0x80, 4)
handle_option, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
handle_option, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
handle_option, (register, 0x69, 1) COPY (register, 0xb0, 1)
handle_option, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
handle_option,  ---  RETURN (register, 0x5c, 4)
handle_option, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f30, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15b14, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x88, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x2c, 4) INT_OR (register, 0x2c, 4) , (const, 0x1, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x88, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f34, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x28, 4) COPY (const, 0x2, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15b30, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x68, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f38, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x28, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15b44, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x44, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f3c, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x20, 4) COPY (const, 0x0, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15b58, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x38, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x38, 4)
handle_option, (register, 0x38, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x38, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x8c, 4)
handle_option, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15b64, 4)
handle_option,  ---  CALL (ram, 0x13ce0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x58, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x8c, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
handle_option, (register, 0x62, 1) COPY (register, 0x66, 1)
handle_option, (register, 0x61, 1) COPY (register, 0x65, 1)
handle_option, (register, 0x60, 1) COPY (register, 0x64, 1)
handle_option, (register, 0x63, 1) COPY (register, 0x67, 1)
handle_option, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
handle_option,  ---  CBRANCH (ram, 0x15b74, 4) , (unique, 0x2680, 1)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x38, 4) , (const, 0x58, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f40, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x28, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15b80, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x20, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f44, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x28, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x800, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0xb, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xb, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x34, 4) INT_OR (register, 0x24, 4) , (const, 0x800, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15b98, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f48, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x28, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15bac, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x74, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f4c, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x28, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15bc0, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x14, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f50, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x20, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f54, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x24, 4) COPY (const, 0x2, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15bdc, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15be0, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x64, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x20, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x24, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x34, 4) INT_OR (register, 0x24, 4) , (const, 0x1, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f58, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x28, 4) COPY (const, 0x0, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15c00, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f5c, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x28, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15c14, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x48, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f60, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x28, 4) COPY (const, 0x2, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15c28, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x3c, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f64, 4)
handle_option, (unique, 0x8480, 4) INT_ADD (register, 0x50, 4) , (register, 0x2c, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15c44, 4)
handle_option,  ---  CALL (ram, 0x113e0, 4)
handle_option, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f68, 4)
handle_option, (register, 0x2c, 4) COPY (register, 0x20, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x24, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (register, 0x20, 4) COPY (register, 0x30, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15c54, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15c5c, 4)
handle_option,  ---  CALL (ram, 0x1150c, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x20, 4) COPY (const, 0x0, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (register, 0x58, 4) COPY (const, 0x15c64, 4)
handle_option,  ---  CALL (ram, 0x138e4, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f6c, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x40000, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x7, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x7, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x34, 4) INT_OR (register, 0x24, 4) , (const, 0x40000, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x28, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x34, 4) INT_OR (register, 0x34, 4) , (const, 0x2, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15c74, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x40, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f70, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x3, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x28, 4) COPY (const, 0x3, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15c88, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f74, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x28, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15c9c, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x3c, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f78, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x28, 4) COPY (const, 0x4, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15cb0, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f7c, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15cc0, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x88, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x2c, 4) INT_OR (register, 0x2c, 4) , (const, 0x4, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x88, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f80, 4)
handle_option, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f84, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15cdc, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15ce0, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x30, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x30, 4)
handle_option, (register, 0x30, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x30, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15ce8, 4)
handle_option,  ---  CALL (ram, 0x11440, 4)
handle_option, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f88, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15cec, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15cf4, 4)
handle_option,  ---  CALL (ram, 0x11440, 4)
handle_option, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f8c, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15cf8, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15d00, 4)
handle_option,  ---  CALL (ram, 0x11440, 4)
handle_option, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f90, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15d04, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15d0c, 4)
handle_option,  ---  CALL (ram, 0x11440, 4)
handle_option, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f94, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15d10, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15d18, 4)
handle_option,  ---  CALL (ram, 0x11440, 4)
handle_option, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f98, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15d1c, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15d24, 4)
handle_option,  ---  CALL (ram, 0x11440, 4)
handle_option, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x15f9c, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15d28, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15d30, 4)
handle_option,  ---  CALL (ram, 0x11440, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
handle_option, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
handle_option, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
handle_option, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
handle_option, (register, 0x62, 1) COPY (register, 0x66, 1)
handle_option, (register, 0x61, 1) COPY (register, 0x65, 1)
handle_option, (register, 0x60, 1) COPY (register, 0x64, 1)
handle_option, (register, 0x63, 1) COPY (register, 0x67, 1)
handle_option,  ---  CBRANCH (ram, 0x15e90, 4) , (register, 0x61, 1)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15fa0, 4)
handle_option, (register, 0x40, 4) COPY (const, 0x2020, 4)
handle_option, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15fa4, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0xc, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0xc, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0xc, 4)
handle_option, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0xc, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
handle_option, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (const, 0x15fa8, 4)
handle_option, (unique, 0x3f280, 4) INT_LEFT (const, 0x20, 4) , (const, 0x10, 4)
handle_option, (unique, 0x3f300, 4) INT_AND (register, 0x40, 4) , (const, 0xffff, 4)
handle_option, (register, 0x40, 4) INT_OR (unique, 0x3f280, 4) , (unique, 0x3f300, 4)
handle_option, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (const, 0x15fac, 4)
handle_option, (register, 0x48, 4) LOAD (const, 0x1a1, 8) , (const, 0x15fb0, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15d5c, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15d60, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x3c, 4)
handle_option, (register, 0x3c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x3c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x3c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15d64, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x38, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x38, 4)
handle_option, (register, 0x38, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x38, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15d68, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x44, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x44, 4)
handle_option, (register, 0x44, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x44, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15d6c, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x48, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x48, 4)
handle_option, (register, 0x48, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x48, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x48, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
handle_option,  ---  BRANCH (ram, 0x15d88, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x18, 4)
handle_option, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x14, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x14, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x14, 4)
handle_option, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x14, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
handle_option, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
handle_option, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
handle_option, (register, 0x62, 1) COPY (register, 0x66, 1)
handle_option, (register, 0x61, 1) COPY (register, 0x65, 1)
handle_option, (register, 0x60, 1) COPY (register, 0x64, 1)
handle_option, (register, 0x63, 1) COPY (register, 0x67, 1)
handle_option,  ---  CBRANCH (ram, 0x15e90, 4) , (register, 0x61, 1)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc, 4)
handle_option, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x5f, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x24, 4) COPY (const, 0x5f, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (register, 0x20, 4) COPY (register, 0x4c, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15d98, 4)
handle_option,  ---  CALL (ram, 0x114b8, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x20, 4)
handle_option, (register, 0x67, 1) INT_SBORROW (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3b980, 4) INT_SUB (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
handle_option, (register, 0x62, 1) COPY (register, 0x66, 1)
handle_option, (register, 0x61, 1) COPY (register, 0x65, 1)
handle_option, (register, 0x60, 1) COPY (register, 0x64, 1)
handle_option, (register, 0x63, 1) COPY (register, 0x67, 1)
handle_option, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
handle_option,  ---  CBRANCH (ram, 0x15d78, 4) , (unique, 0x1a80, 1)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x34, 4)
handle_option, (register, 0x67, 1) INT_SBORROW (register, 0x34, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3b980, 4) INT_SUB (register, 0x34, 4) , (const, 0x0, 4)
handle_option, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
handle_option, (register, 0x62, 1) COPY (register, 0x66, 1)
handle_option, (register, 0x61, 1) COPY (register, 0x65, 1)
handle_option, (register, 0x60, 1) COPY (register, 0x64, 1)
handle_option, (register, 0x63, 1) COPY (register, 0x67, 1)
handle_option, (unique, 0x2500, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
handle_option, (unique, 0x2600, 1) BOOL_OR (register, 0x61, 1) , (unique, 0x2500, 1)
handle_option,  ---  CBRANCH (ram, 0x15efc, 4) , (unique, 0x2600, 1)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3ca00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
handle_option, (register, 0x2c, 4) INT_ZEXT (unique, 0x3ca00, 1)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x66, 1) INT_LESSEQUAL (const, 0x0, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3b980, 4) INT_SUB (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
handle_option, (register, 0x62, 1) COPY (register, 0x66, 1)
handle_option, (register, 0x61, 1) COPY (register, 0x65, 1)
handle_option, (register, 0x60, 1) COPY (register, 0x64, 1)
handle_option, (register, 0x63, 1) COPY (register, 0x67, 1)
handle_option,  ---  CBRANCH (ram, 0x15f08, 4) , (register, 0x61, 1)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x34, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x10, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x10, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x10, 4)
handle_option, (register, 0x34, 4) INT_ADD (register, 0x54, 4) , (const, 0x10, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
handle_option, (register, 0x20, 4) COPY (register, 0x34, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x24, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x28, 4) COPY (const, 0x4, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (register, 0x2c, 4) COPY (register, 0x48, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15dd0, 4)
handle_option,  ---  CALL (ram, 0x114dc, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xc, 4)
handle_option, (register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
handle_option, (register, 0x28, 4) COPY (register, 0x34, 4)
handle_option, (register, 0x2c, 4) COPY (register, 0x4c, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x20, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (register, 0x24, 4) COPY (register, 0x44, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15de8, 4)
handle_option,  ---  CALL (ram, 0x114f4, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1f, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (const, 0x1f, 4)
handle_option, (register, 0x67, 1) INT_SBORROW (const, 0x1f, 4) , (register, 0x20, 4)
handle_option, (register, 0x28, 4) INT_SUB (const, 0x1f, 4) , (register, 0x20, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x10, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x28, 4)
handle_option, (register, 0x67, 1) INT_SBORROW (register, 0x28, 4) , (const, 0x1, 4)
handle_option, (unique, 0x3b980, 4) INT_SUB (register, 0x28, 4) , (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (unique, 0x3b980, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (unique, 0x3b980, 4) , (const, 0x0, 4)
handle_option, (register, 0x62, 1) COPY (register, 0x66, 1)
handle_option, (register, 0x61, 1) COPY (register, 0x65, 1)
handle_option, (register, 0x60, 1) COPY (register, 0x64, 1)
handle_option, (register, 0x63, 1) COPY (register, 0x67, 1)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x20, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (register, 0x24, 4) COPY (register, 0x3c, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
handle_option, (unique, 0x2280, 1) INT_NOTEQUAL (register, 0x60, 1) , (register, 0x63, 1)
handle_option, (unique, 0x2680, 1) BOOL_NEGATE (unique, 0x2280, 1)
handle_option,  ---  CBRANCH (ram, 0x15e04, 4) , (unique, 0x2680, 1)
handle_option, (register, 0x28, 4) COPY (register, 0x20, 4)
handle_option, (register, 0x2c, 4) COPY (register, 0x38, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15e0c, 4)
handle_option,  ---  CALL (ram, 0x114f4, 4)
handle_option,  ---  BRANCH (ram, 0x15d78, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15fb4, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x28, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15e18, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x20, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x50, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15fb8, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x28, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15e30, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x54, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x15fbc, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x28, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15e44, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x2c, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x2c, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x38, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x28, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x15fc0, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15e54, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x84, 4)
handle_option, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (unique, 0x3a800, 4) INT_NEGATE (const, 0x1, 4)
handle_option, (register, 0x2c, 4) INT_AND (register, 0x2c, 4) , (unique, 0x3a800, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x28, 4) , (const, 0x84, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)
handle_option,  ---  BRANCH (ram, 0x15af4, 4)
handle_option, (register, 0x58, 4) LOAD (const, 0x1a1, 8) , (const, 0x15fc4, 4)
handle_option, (register, 0x2c, 4) COPY (register, 0x20, 4)
handle_option, (register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x15fc8, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x24, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x8480, 4) INT_ADD (register, 0x50, 4) , (register, 0x58, 4)
handle_option, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15e7c, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x28, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x28, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15e88, 4)
handle_option,  ---  CALL (ram, 0x1150c, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15e8c, 4)
handle_option,  ---  CALL (ram, 0x15668, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15e90, 4)
handle_option,  ---  CALL (ram, 0x138e4, 4)
handle_option, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x15fcc, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15e94, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15e9c, 4)
handle_option,  ---  CALL (ram, 0x11440, 4)
handle_option, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x15fd0, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x5000, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x28, 4) COPY (const, 0x5000, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x20, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15ea8, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
handle_option, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15eb0, 4)
handle_option,  ---  CALL (ram, 0x114f4, 4)
handle_option, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x15fd4, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15eb4, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15ebc, 4)
handle_option,  ---  CALL (ram, 0x11440, 4)
handle_option, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x15fd8, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15ec0, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15ec8, 4)
handle_option,  ---  CALL (ram, 0x11440, 4)
handle_option, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x15fdc, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x2000, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0xa, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0xa, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x28, 4) COPY (const, 0x2000, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x20, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15ed4, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x24, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x24, 4)
handle_option, (register, 0x24, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15edc, 4)
handle_option,  ---  CALL (ram, 0x114f4, 4)
handle_option, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x15fe0, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15ee0, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15ee8, 4)
handle_option,  ---  CALL (ram, 0x11440, 4)
handle_option, (register, 0x20, 4) LOAD (const, 0x1a1, 8) , (const, 0x15fe4, 4)
handle_option, (unique, 0x1780, 4) INT_ADD (const, 0x15eec, 4) , (const, 0x8, 4)
handle_option, (register, 0x68, 1) COPY (register, 0x62, 1)
handle_option, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x20, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x20, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15ef4, 4)
handle_option,  ---  CALL (ram, 0x11440, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x20, 4) COPY (const, 0x0, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (register, 0x58, 4) COPY (const, 0x15efc, 4)
handle_option,  ---  CALL (ram, 0x138e4, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x18, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x18, 4)
handle_option, (register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x18, 4)
handle_option, (register, 0x34, 4) INT_ADD (register, 0x54, 4) , (const, 0x18, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
handle_option, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0xfffffff8, 4)
handle_option,  ---  STORE (const, 0x1a1, 8) , (register, 0x34, 4) , (register, 0x40, 4)
handle_option,  ---  BRANCH (ram, 0x15dd4, 4)
handle_option, (unique, 0x8280, 4) INT_ADD (register, 0x54, 4) , (const, 0xc, 4)
handle_option, (register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
handle_option, (register, 0x28, 4) COPY (register, 0x34, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x20, 4) COPY (const, 0x1, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
handle_option, (register, 0x66, 1) COPY (register, 0x68, 1)
handle_option, (register, 0x67, 1) COPY (register, 0x63, 1)
handle_option, (register, 0x58, 4) COPY (const, 0x15f18, 4)
handle_option,  ---  CALL (ram, 0x114f4, 4)
handle_option, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1f, 4) , (const, 0x1f, 4)
handle_option, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
handle_option, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
handle_option, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
handle_option, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
handle_option, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
handle_option, (register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (const, 0x1f, 4)
handle_option, (register, 0x67, 1) INT_SBORROW (const, 0x1f, 4) , (register, 0x20, 4)
handle_option, (register, 0x28, 4) INT_SUB (const, 0x1f, 4) , (register, 0x20, 4)
handle_option, (register, 0x64, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)
handle_option, (register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
handle_option,  ---  BRANCH (ram, 0x15dec, 4)
handle_option, (register, 0x58, 4) COPY (const, 0x15f24, 4)
handle_option,  ---  CALL (ram, 0x113ec, 4)
__libc_csu_init, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
__libc_csu_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
__libc_csu_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
__libc_csu_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
__libc_csu_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
__libc_csu_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
__libc_csu_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
__libc_csu_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x2c, 4)
__libc_csu_init, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x3c, 4) COPY (register, 0x20, 4)
__libc_csu_init, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (const, 0x16040, 4)
__libc_csu_init, (register, 0x40, 4) COPY (register, 0x24, 4)
__libc_csu_init, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (const, 0x16044, 4)
__libc_csu_init, (register, 0x44, 4) COPY (register, 0x28, 4)
__libc_csu_init, (unique, 0x1780, 4) INT_ADD (const, 0x16000, 4) , (const, 0x8, 4)
__libc_csu_init, (register, 0x68, 1) COPY (register, 0x62, 1)
__libc_csu_init, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x38, 4)
__libc_csu_init, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x38, 4)
__libc_csu_init, (register, 0x38, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x38, 4)
__libc_csu_init, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x58, 4) COPY (const, 0x16008, 4)
__libc_csu_init,  ---  CALL (ram, 0x11360, 4)
__libc_csu_init, (unique, 0x1780, 4) INT_ADD (const, 0x16008, 4) , (const, 0x8, 4)
__libc_csu_init, (register, 0x68, 1) COPY (register, 0x62, 1)
__libc_csu_init, (register, 0x66, 1) INT_CARRY (unique, 0x1780, 4) , (register, 0x34, 4)
__libc_csu_init, (register, 0x67, 1) INT_SCARRY (unique, 0x1780, 4) , (register, 0x34, 4)
__libc_csu_init, (register, 0x34, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x34, 4)
__libc_csu_init, (register, 0x64, 1) INT_SLESS (register, 0x34, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x68, 1) COPY (register, 0x62, 1)
__libc_csu_init, (register, 0x66, 1) INT_LESSEQUAL (register, 0x34, 4) , (register, 0x38, 4)
__libc_csu_init, (register, 0x67, 1) INT_SBORROW (register, 0x38, 4) , (register, 0x34, 4)
__libc_csu_init, (register, 0x38, 4) INT_SUB (register, 0x38, 4) , (register, 0x34, 4)
__libc_csu_init, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x3e00, 4) INT_SUB (const, 0x2, 4) , (const, 0x1, 4)
__libc_csu_init, (unique, 0x3e80, 4) INT_RIGHT (register, 0x38, 4) , (unique, 0x3e00, 4)
__libc_csu_init, (unique, 0x3f80, 4) INT_AND (unique, 0x3e80, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0x68, 1) SUBPIECE (unique, 0x3f80, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x4100, 4) INT_SRIGHT (register, 0x38, 4) , (const, 0x2, 4)
__libc_csu_init, (register, 0x38, 4) COPY (unique, 0x4100, 4)
__libc_csu_init, (register, 0x64, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x66, 1) COPY (register, 0x68, 1)
__libc_csu_init, (register, 0x67, 1) COPY (register, 0x63, 1)
__libc_csu_init, (register, 0x62, 1) COPY (register, 0x66, 1)
__libc_csu_init, (register, 0x61, 1) COPY (register, 0x65, 1)
__libc_csu_init, (register, 0x60, 1) COPY (register, 0x64, 1)
__libc_csu_init, (register, 0x63, 1) COPY (register, 0x67, 1)
__libc_csu_init, (unique, 0x2680, 1) BOOL_NEGATE (register, 0x61, 1)
__libc_csu_init,  ---  CBRANCH (ram, 0x16018, 4) , (unique, 0x2680, 1)
__libc_csu_init, (register, 0x80, 4) COPY (register, 0x54, 4)
__libc_csu_init, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x54, 4) COPY (register, 0x80, 4)
__libc_csu_init, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x69, 1) COPY (register, 0xb0, 1)
__libc_csu_init, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
__libc_csu_init,  ---  RETURN (register, 0x5c, 4)
__libc_csu_init, (unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
__libc_csu_init, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__libc_csu_init, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__libc_csu_init, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__libc_csu_init, (register, 0x30, 4) COPY (const, 0x0, 4)
__libc_csu_init, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x66, 1) COPY (register, 0x68, 1)
__libc_csu_init, (register, 0x67, 1) COPY (register, 0x63, 1)
__libc_csu_init, (unique, 0x8800, 4) COPY (register, 0x34, 4)
__libc_csu_init, (register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8800, 4)
__libc_csu_init, (unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
__libc_csu_init, (unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
__libc_csu_init, (unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
__libc_csu_init, (unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
__libc_csu_init, (unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
__libc_csu_init, (register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
__libc_csu_init, (register, 0x66, 1) INT_CARRY (register, 0x30, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0x67, 1) INT_SCARRY (register, 0x30, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0x64, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x20, 4) COPY (register, 0x3c, 4)
__libc_csu_init, (register, 0x24, 4) COPY (register, 0x40, 4)
__libc_csu_init, (register, 0x28, 4) COPY (register, 0x44, 4)
__libc_csu_init, (unique, 0x0, 4) INT_AND (register, 0x2c, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x69, 1) COPY (register, 0xb0, 1)
__libc_csu_init, (register, 0x5c, 4) INT_AND (register, 0x2c, 4) , (const, 0xfffffffe, 4)
__libc_csu_init, (register, 0x58, 4) COPY (const, 0x16034, 4)
__libc_csu_init,  ---  CALLIND (register, 0x5c, 4)
__libc_csu_init, (register, 0x68, 1) COPY (register, 0x62, 1)
__libc_csu_init, (register, 0x66, 1) INT_LESSEQUAL (register, 0x38, 4) , (register, 0x30, 4)
__libc_csu_init, (register, 0x67, 1) INT_SBORROW (register, 0x30, 4) , (register, 0x38, 4)
__libc_csu_init, (unique, 0x3ba80, 4) INT_SUB (register, 0x30, 4) , (register, 0x38, 4)
__libc_csu_init, (register, 0x64, 1) INT_SLESS (unique, 0x3ba80, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x65, 1) INT_EQUAL (unique, 0x3ba80, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x62, 1) COPY (register, 0x66, 1)
__libc_csu_init, (register, 0x61, 1) COPY (register, 0x65, 1)
__libc_csu_init, (register, 0x60, 1) COPY (register, 0x64, 1)
__libc_csu_init, (register, 0x63, 1) COPY (register, 0x67, 1)
__libc_csu_init, (unique, 0x1a80, 1) BOOL_NEGATE (register, 0x61, 1)
__libc_csu_init,  ---  CBRANCH (ram, 0x1601c, 4) , (unique, 0x1a80, 1)
__libc_csu_init, (register, 0x80, 4) COPY (register, 0x54, 4)
__libc_csu_init, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x40, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x44, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
__libc_csu_init, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
__libc_csu_init, (register, 0x54, 4) COPY (register, 0x80, 4)
__libc_csu_init, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
__libc_csu_init, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__libc_csu_init, (register, 0x69, 1) COPY (register, 0xb0, 1)
__libc_csu_init, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
__libc_csu_init,  ---  RETURN (register, 0x5c, 4)
__libc_csu_fini, (unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
__libc_csu_fini, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
__libc_csu_fini, (register, 0x69, 1) COPY (register, 0xb0, 1)
__libc_csu_fini, (register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
__libc_csu_fini,  ---  RETURN (register, 0x5c, 4)
_fini, (register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
_fini,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
_fini, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
_fini,  ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x2c, 4)
_fini, (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
_fini, (register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_fini, (register, 0x80, 4) COPY (register, 0x54, 4)
_fini, (register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_fini, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_fini, (register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
_fini, (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
_fini, (register, 0x54, 4) COPY (register, 0x80, 4)
_fini, (unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
_fini, (register, 0xb0, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
_fini, (register, 0x69, 1) COPY (register, 0xb0, 1)
_fini, (register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
_fini,  ---  RETURN (register, 0x5c, 4)
