
/* WARNING: Unknown calling convention yet parameter storage is locked */

long decode_number(void)

{
  byte *in_r0;
  ushort **ppuVar1;
  __int32_t **pp_Var2;
  char *pcVar3;
  char **in_r2;
  int in_r3;
  ushort *puVar4;
  uint uVar5;
  char *__s;
  int iVar6;
  
  uVar5 = (uint)*in_r0;
  if (uVar5 == 0) {
    ppuVar1 = __ctype_b_loc();
    puVar4 = *ppuVar1;
  }
  else {
    ppuVar1 = __ctype_b_loc();
    puVar4 = *ppuVar1;
    do {
      if ((puVar4[uVar5] & 0x2000) == 0) {
        uVar5 = (uint)*in_r0;
        break;
      }
      in_r0 = in_r0 + 1;
      uVar5 = (uint)*in_r0;
    } while (uVar5 != 0);
  }
  iVar6 = 0;
  while ((puVar4[uVar5] & 0x800) != 0) {
    in_r0 = in_r0 + 1;
    iVar6 = iVar6 * 10 + uVar5 + -0x30;
    uVar5 = (uint)*in_r0;
  }
  pp_Var2 = __ctype_toupper_loc();
  if ((*pp_Var2)[uVar5] == 0x4b) {
    iVar6 = iVar6 << 10;
    uVar5 = (uint)in_r0[1];
  }
  else {
    if ((*pp_Var2)[uVar5] == 0x4d) {
      iVar6 = iVar6 << 0x14;
      uVar5 = (uint)in_r0[1];
    }
  }
  if (uVar5 == 0) {
    return iVar6;
  }
  if (in_r3 == 0) {
    iVar6 = __fprintf_chk(stderr,1,"pcregrep: Malformed number \"%s\" after -%c\n");
  }
  else {
    __s = *in_r2;
    pcVar3 = strchr(__s,0x3d);
    if (pcVar3 == (char *)0x0) {
      strlen(__s);
    }
    iVar6 = __fprintf_chk(stderr,1,"pcregrep: Malformed number \"%s\" after --%.*s\n");
  }
  iVar6 = usage(iVar6);
                    /* WARNING: Subroutine does not return */
  pcregrep_exit(iVar6);
}

